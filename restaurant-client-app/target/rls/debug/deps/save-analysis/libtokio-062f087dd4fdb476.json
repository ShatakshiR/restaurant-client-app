{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"process\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"winapi\"","-C","metadata=062f087dd4fdb476","-C","extra-filename=-062f087dd4fdb476","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","bytes=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbytes-aa4b650fd26ebace.rmeta","--extern","memchr=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmemchr-1907bb594294e3a0.rmeta","--extern","mio=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmio-756a808328b68720.rmeta","--extern","num_cpus=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libnum_cpus-e88b6d7a31d3a828.rmeta","--extern","once_cell=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libonce_cell-7c4296c94339fcee.rmeta","--extern","parking_lot=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libparking_lot-47ccbddb32bc3d5a.rmeta","--extern","pin_project_lite=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libpin_project_lite-a139b3d45b69cf72.rmeta","--extern","tokio_macros=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\tokio_macros-5a23f8bec9c5e563.dll","--extern","winapi=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libwinapi-717ff7ff4829605e.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio-062f087dd4fdb476.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[16815211919091245805,3196130077234418521]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":13,"id":{"name":"parking_lot","disambiguator":[11888071374905574141,4550927948068395084]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":14,"id":{"name":"instant","disambiguator":[18041166731581467127,4981450569583203820]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":15,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":16,"id":{"name":"lock_api","disambiguator":[10808943959024914509,6266205891182350667]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":17,"id":{"name":"scopeguard","disambiguator":[1115943010664334019,12233889810090221184]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":18,"id":{"name":"parking_lot_core","disambiguator":[2746750626789367447,8956297377081385084]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","num":19,"id":{"name":"smallvec","disambiguator":[4858130526088596752,7887937585991453083]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","num":20,"id":{"name":"winapi","disambiguator":[4006827767281335465,13430598760160072842]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[6831644894231998757,15463925350842481924]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":22,"id":{"name":"mio","disambiguator":[14679609372290759311,2319297044341828505]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":23,"id":{"name":"log","disambiguator":[11988239905312418642,14929643071484238321]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":24,"id":{"name":"ntapi","disambiguator":[2983789572845146300,14557344837994571793]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":25,"id":{"name":"miow","disambiguator":[469793661555624655,13201910910362622596]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":26,"id":{"name":"socket2","disambiguator":[126504307609738451,16234442710876005410]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","num":27,"id":{"name":"bytes","disambiguator":[7196057975529454472,2047189198684000506]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","num":28,"id":{"name":"once_cell","disambiguator":[3896530390579741273,15810440730057352095]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":29,"id":{"name":"tokio_macros","disambiguator":[10308762983834150006,16235719201784365452]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[16632542777199346109,14088241813478408171]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mod.rs","num":31,"id":{"name":"num_cpus","disambiguator":[2891945326073920803,16438406934100408411]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31489,"byte_end":31496,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31537,"byte_end":31547,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31574,"byte_end":31586,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":9369},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31612,"byte_end":31618,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":34518},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31638,"byte_end":31641,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":37023},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31662,"byte_end":31666,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998848,"byte_end":9998860,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998905,"byte_end":9998915,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998968,"byte_end":9998982,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999029,"byte_end":9999039,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999072,"byte_end":9999076,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999119,"byte_end":9999128,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999169,"byte_end":9999177,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999226,"byte_end":9999237,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999270,"byte_end":9999274,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999316,"byte_end":9999324,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999326,"byte_end":9999334,"line_start":55,"line_end":55,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999336,"byte_end":9999343,"line_start":55,"line_end":55,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999387,"byte_end":9999396,"line_start":58,"line_end":58,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999449,"byte_end":9999463,"line_start":61,"line_end":61,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999508,"byte_end":9999518,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999571,"byte_end":9999585,"line_start":67,"line_end":67,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999632,"byte_end":9999643,"line_start":70,"line_end":70,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999680,"byte_end":9999686,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999741,"byte_end":9999756,"line_start":76,"line_end":76,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999813,"byte_end":9999829,"line_start":79,"line_end":79,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999864,"byte_end":9999869,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9999902,"byte_end":9999906,"line_start":85,"line_end":85,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":10000070,"byte_end":10000081,"line_start":98,"line_end":98,"column_start":32,"column_end":43},"alias_span":null,"name":"symlink_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":10000138,"byte_end":10000150,"line_start":101,"line_end":101,"column_start":33,"column_end":45},"alias_span":null,"name":"symlink_file","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\mod.rs","byte_start":31869,"byte_end":31876,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43007,"byte_end":43019,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43064,"byte_end":43073,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43118,"byte_end":43127,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43174,"byte_end":43184,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43225,"byte_end":43232,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2717},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43402,"byte_end":43407,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7079},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43409,"byte_end":43418,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43420,"byte_end":43426,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7152},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43428,"byte_end":43436,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43530,"byte_end":43538,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43540,"byte_end":43545,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43963,"byte_end":43969,"line_start":233,"line_end":233,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43971,"byte_end":43977,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44016,"byte_end":44021,"line_start":236,"line_end":236,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44023,"byte_end":44028,"line_start":236,"line_end":236,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44069,"byte_end":44075,"line_start":239,"line_end":239,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44077,"byte_end":44083,"line_start":239,"line_end":239,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44139,"byte_end":44144,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44146,"byte_end":44154,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44156,"byte_end":44165,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44247,"byte_end":44251,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44253,"byte_end":44261,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44263,"byte_end":44269,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44271,"byte_end":44276,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44278,"byte_end":44284,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44286,"byte_end":44290,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44292,"byte_end":44307,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44309,"byte_end":44321,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44323,"byte_end":44335,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44337,"byte_end":44350,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":11099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44360,"byte_end":44369,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":11068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44371,"byte_end":44380,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":11022},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44382,"byte_end":44391,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44393,"byte_end":44405,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44407,"byte_end":44412,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10881},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44414,"byte_end":44419,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44421,"byte_end":44427,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44429,"byte_end":44433,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":9518},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44435,"byte_end":44440,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":9478},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44442,"byte_end":44446,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82271,"byte_end":82284,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82344,"byte_end":82355,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341474,"byte_end":10341482,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3293}},{"kind":"Use","ref_id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341484,"byte_end":10341493,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3293}},{"kind":"Use","ref_id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341536,"byte_end":10341549,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3293}},{"kind":"Use","ref_id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341551,"byte_end":10341565,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3293}},{"kind":"Use","ref_id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341567,"byte_end":10341579,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3293}},{"kind":"Use","ref_id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341567,"byte_end":10341579,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3457}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82402,"byte_end":82413,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82440,"byte_end":82449,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82476,"byte_end":82485,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82518,"byte_end":82527,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529926,"byte_end":10529933,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":4078}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10530058,"byte_end":10530068,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":4078}},{"kind":"Use","ref_id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10530070,"byte_end":10530076,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":4078}},{"kind":"Use","ref_id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739991,"byte_end":10739997,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5632}},{"kind":"Use","ref_id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792757,"byte_end":10792764,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":6994},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792766,"byte_end":10792783,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":6061},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836665,"byte_end":10836672,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836674,"byte_end":10836680,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836682,"byte_end":10836690,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836692,"byte_end":10836698,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836776,"byte_end":10836793,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836795,"byte_end":10836812,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6304},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836814,"byte_end":10836829,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6379},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792865,"byte_end":10792870,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":6383},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792872,"byte_end":10792882,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7077},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792884,"byte_end":10792896,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7078},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792884,"byte_end":10792896,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6463}},{"kind":"Use","ref_id":{"krate":0,"index":6387},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792898,"byte_end":10792913,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792964,"byte_end":10792970,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7175},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793061,"byte_end":10793073,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793075,"byte_end":10793090,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793137,"byte_end":10793146,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793148,"byte_end":10793163,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7191},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793165,"byte_end":10793185,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":7196},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793226,"byte_end":10793232,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793234,"byte_end":10793249,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793251,"byte_end":10793267,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5787}},{"kind":"Use","ref_id":{"krate":0,"index":4632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139415,"byte_end":139424,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139426,"byte_end":139436,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7412},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139480,"byte_end":139494,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7415},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139531,"byte_end":139536,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7409},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139592,"byte_end":139606,"line_start":228,"line_end":228,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7418},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139657,"byte_end":139666,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7435},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139704,"byte_end":139715,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139717,"byte_end":139725,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7361},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139773,"byte_end":139781,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":7415},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14899,"byte_end":14904,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7633},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093568,"byte_end":11093573,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093575,"byte_end":11093586,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":8313},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093588,"byte_end":11093593,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7946},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093649,"byte_end":11093656,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7783},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093692,"byte_end":11093700,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093702,"byte_end":11093713,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093715,"byte_end":11093723,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7808},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093773,"byte_end":11093780,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":7810},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093782,"byte_end":11093792,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":8275},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093794,"byte_end":11093801,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":2,"index":36893},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093914,"byte_end":11093922,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7451}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\mod.rs","byte_start":140491,"byte_end":140503,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":665}},{"kind":"Use","ref_id":{"krate":29,"index":54},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16684,"byte_end":16715,"line_start":451,"line_end":451,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":48},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16930,"byte_end":16934,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":50},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":17069,"byte_end":17073,"line_start":461,"line_end":461,"column_start":31,"column_end":35},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":744},{"krate":0,"index":79},{"krate":0,"index":123},{"krate":0,"index":300},{"krate":0,"index":368},{"krate":0,"index":553},{"krate":0,"index":3833},{"krate":0,"index":644},{"krate":0,"index":4078},{"krate":0,"index":645},{"krate":0,"index":5632},{"krate":0,"index":5787},{"krate":0,"index":664},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":665},{"krate":0,"index":732},{"krate":0,"index":8267},{"krate":0,"index":8268},{"krate":0,"index":8269}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12152,"byte_end":12236,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12237,"byte_end":12310,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12311,"byte_end":12351,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12352,"byte_end":12438,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12439,"byte_end":12490,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12491,"byte_end":12551,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12552,"byte_end":12642,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12643,"byte_end":12699,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12700,"byte_end":12777,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12778,"byte_end":12811,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12812,"byte_end":12860,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12861,"byte_end":12930,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12931,"byte_end":12977,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12978,"byte_end":13028,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13029,"byte_end":13067,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13068,"byte_end":13146,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13147,"byte_end":13150,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13151,"byte_end":13233,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13234,"byte_end":13256,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13257,"byte_end":13260,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13261,"byte_end":13286,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13287,"byte_end":13290,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13291,"byte_end":13359,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13360,"byte_end":13423,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13424,"byte_end":13441,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13442,"byte_end":13445,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13446,"byte_end":13525,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13526,"byte_end":13603,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13604,"byte_end":13637,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13638,"byte_end":13641,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13642,"byte_end":13667,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13668,"byte_end":13671,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13672,"byte_end":13757,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13758,"byte_end":13842,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13843,"byte_end":13927,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13928,"byte_end":13967,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13968,"byte_end":13971,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13972,"byte_end":14012,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14013,"byte_end":14016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14017,"byte_end":14114,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14303,"byte_end":14315,"line_start":349,"line_end":349,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1106},{"krate":0,"index":1177},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1198},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1113}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":19051,"byte_end":19073,"line_start":51,"line_end":51,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997569,"byte_end":9997587,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997589,"byte_end":9997642,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997643,"byte_end":9997646,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997647,"byte_end":9997725,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997726,"byte_end":9997790,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997791,"byte_end":9997869,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997870,"byte_end":9997873,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997874,"byte_end":9997945,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9997946,"byte_end":9998020,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998021,"byte_end":9998095,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998096,"byte_end":9998165,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998166,"byte_end":9998241,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998242,"byte_end":9998306,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998307,"byte_end":9998310,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998311,"byte_end":9998323,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998324,"byte_end":9998327,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998328,"byte_end":9998402,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998403,"byte_end":9998478,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998479,"byte_end":9998555,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998556,"byte_end":9998633,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998634,"byte_end":9998712,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998713,"byte_end":9998750,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998751,"byte_end":9998754,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\mod.rs","byte_start":9998755,"byte_end":9998800,"line_start":25,"line_end":25,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002318,"byte_end":10002330,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10000812,"byte_end":10000884,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10000885,"byte_end":10000939,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10000940,"byte_end":10000943,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10000944,"byte_end":10001006,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001007,"byte_end":10001010,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001011,"byte_end":10001043,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001044,"byte_end":10001047,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001048,"byte_end":10001080,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001081,"byte_end":10001084,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001085,"byte_end":10001159,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001160,"byte_end":10001237,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001238,"byte_end":10001294,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001295,"byte_end":10001298,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001299,"byte_end":10001373,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001374,"byte_end":10001451,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001452,"byte_end":10001529,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001530,"byte_end":10001608,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001609,"byte_end":10001664,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001665,"byte_end":10001668,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001669,"byte_end":10001754,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001755,"byte_end":10001854,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001855,"byte_end":10001858,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001859,"byte_end":10001871,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001872,"byte_end":10001875,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001876,"byte_end":10001954,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001955,"byte_end":10001987,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001988,"byte_end":10001991,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10001992,"byte_end":10002020,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002021,"byte_end":10002076,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002077,"byte_end":10002080,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002081,"byte_end":10002095,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002096,"byte_end":10002099,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002100,"byte_end":10002113,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002114,"byte_end":10002132,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002133,"byte_end":10002149,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002150,"byte_end":10002153,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002154,"byte_end":10002172,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002173,"byte_end":10002212,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002213,"byte_end":10002275,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002276,"byte_end":10002290,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002291,"byte_end":10002296,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\canonicalize.rs","byte_start":10002297,"byte_end":10002304,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003887,"byte_end":10003897,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002541,"byte_end":10002596,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002597,"byte_end":10002600,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002601,"byte_end":10002661,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002662,"byte_end":10002665,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002666,"byte_end":10002696,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002697,"byte_end":10002700,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002701,"byte_end":10002733,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002734,"byte_end":10002737,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002738,"byte_end":10002809,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002810,"byte_end":10002860,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002861,"byte_end":10002917,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002918,"byte_end":10002921,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10002922,"byte_end":10003007,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003008,"byte_end":10003011,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003012,"byte_end":10003089,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003090,"byte_end":10003167,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003168,"byte_end":10003219,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003220,"byte_end":10003223,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003224,"byte_end":10003236,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003237,"byte_end":10003240,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003241,"byte_end":10003319,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003320,"byte_end":10003352,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003353,"byte_end":10003356,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003357,"byte_end":10003416,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003417,"byte_end":10003495,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003496,"byte_end":10003566,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003567,"byte_end":10003583,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003584,"byte_end":10003612,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003613,"byte_end":10003616,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003617,"byte_end":10003664,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003665,"byte_end":10003668,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003669,"byte_end":10003683,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003684,"byte_end":10003687,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003688,"byte_end":10003701,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003702,"byte_end":10003720,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003721,"byte_end":10003737,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003738,"byte_end":10003741,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003742,"byte_end":10003760,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003761,"byte_end":10003800,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003801,"byte_end":10003844,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003845,"byte_end":10003859,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003860,"byte_end":10003865,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir.rs","byte_start":10003866,"byte_end":10003873,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005650,"byte_end":10005664,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004101,"byte_end":10004177,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004178,"byte_end":10004194,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004195,"byte_end":10004198,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004199,"byte_end":10004263,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004264,"byte_end":10004267,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004268,"byte_end":10004302,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004303,"byte_end":10004306,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004307,"byte_end":10004339,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004340,"byte_end":10004343,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004344,"byte_end":10004415,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004416,"byte_end":10004466,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004467,"byte_end":10004523,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004524,"byte_end":10004527,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004528,"byte_end":10004613,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004614,"byte_end":10004617,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004618,"byte_end":10004630,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004631,"byte_end":10004634,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004635,"byte_end":10004713,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004714,"byte_end":10004746,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004747,"byte_end":10004750,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004751,"byte_end":10004828,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004829,"byte_end":10004905,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004906,"byte_end":10004985,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10004986,"byte_end":10005021,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005022,"byte_end":10005025,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005026,"byte_end":10005099,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005100,"byte_end":10005186,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005187,"byte_end":10005268,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005269,"byte_end":10005346,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005347,"byte_end":10005387,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005388,"byte_end":10005391,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005392,"byte_end":10005435,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005436,"byte_end":10005439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005440,"byte_end":10005454,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005455,"byte_end":10005458,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005459,"byte_end":10005472,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005473,"byte_end":10005491,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005492,"byte_end":10005495,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005496,"byte_end":10005514,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005515,"byte_end":10005559,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005560,"byte_end":10005607,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005608,"byte_end":10005622,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005623,"byte_end":10005628,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\create_dir_all.rs","byte_start":10005629,"byte_end":10005636,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006120,"byte_end":10006130,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1118}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10005872,"byte_end":10005930,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10005931,"byte_end":10005934,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10005935,"byte_end":10006008,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006009,"byte_end":10006031,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006032,"byte_end":10006035,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006036,"byte_end":10006082,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006769,"byte_end":10006772,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006364,"byte_end":10006440,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006445,"byte_end":10006482,"line_start":24,"line_end":24,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006487,"byte_end":10006490,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006495,"byte_end":10006560,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006565,"byte_end":10006568,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006573,"byte_end":10006608,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006613,"byte_end":10006616,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006621,"byte_end":10006635,"line_start":30,"line_end":30,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006640,"byte_end":10006643,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006648,"byte_end":10006661,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006666,"byte_end":10006696,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006701,"byte_end":10006704,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006709,"byte_end":10006745,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006750,"byte_end":10006757,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007394,"byte_end":10007403,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006823,"byte_end":10006914,"line_start":41,"line_end":41,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006919,"byte_end":10007009,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007014,"byte_end":10007017,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007022,"byte_end":10007058,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007063,"byte_end":10007066,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007071,"byte_end":10007142,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007147,"byte_end":10007150,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007155,"byte_end":10007196,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007201,"byte_end":10007204,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007209,"byte_end":10007223,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007228,"byte_end":10007231,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007236,"byte_end":10007249,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007254,"byte_end":10007284,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007289,"byte_end":10007292,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007297,"byte_end":10007337,"line_start":55,"line_end":55,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007342,"byte_end":10007370,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007375,"byte_end":10007382,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008608,"byte_end":10008614,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<'_,\n                    impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007507,"byte_end":10007571,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007576,"byte_end":10007579,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007584,"byte_end":10007652,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007657,"byte_end":10007687,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007692,"byte_end":10007695,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007700,"byte_end":10007768,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007773,"byte_end":10007776,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007781,"byte_end":10007819,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007824,"byte_end":10007827,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007832,"byte_end":10007844,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007849,"byte_end":10007852,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007857,"byte_end":10007921,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007926,"byte_end":10007929,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007934,"byte_end":10007980,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10007985,"byte_end":10008051,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008056,"byte_end":10008076,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008081,"byte_end":10008155,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008160,"byte_end":10008189,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008194,"byte_end":10008225,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008230,"byte_end":10008233,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008238,"byte_end":10008252,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008257,"byte_end":10008260,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008265,"byte_end":10008278,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008283,"byte_end":10008313,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008318,"byte_end":10008334,"line_start":87,"line_end":87,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008339,"byte_end":10008342,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008347,"byte_end":10008365,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008370,"byte_end":10008409,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008414,"byte_end":10008439,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008444,"byte_end":10008472,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008477,"byte_end":10008516,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008521,"byte_end":10008541,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008546,"byte_end":10008549,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008554,"byte_end":10008568,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008573,"byte_end":10008578,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10008583,"byte_end":10008590,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012094,"byte_end":10012098,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010038,"byte_end":10010088,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010089,"byte_end":10010092,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010093,"byte_end":10010171,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010172,"byte_end":10010190,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010191,"byte_end":10010194,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010195,"byte_end":10010275,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010276,"byte_end":10010355,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010356,"byte_end":10010401,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010402,"byte_end":10010405,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010406,"byte_end":10010482,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010483,"byte_end":10010562,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010563,"byte_end":10010638,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010639,"byte_end":10010715,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010716,"byte_end":10010793,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010794,"byte_end":10010871,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010872,"byte_end":10010893,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010894,"byte_end":10010897,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010898,"byte_end":10010971,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10010972,"byte_end":10011043,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011044,"byte_end":10011047,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011048,"byte_end":10011079,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011080,"byte_end":10011125,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011126,"byte_end":10011175,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011176,"byte_end":10011222,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011223,"byte_end":10011274,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011275,"byte_end":10011328,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011329,"byte_end":10011332,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011333,"byte_end":10011347,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011348,"byte_end":10011351,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011352,"byte_end":10011411,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011412,"byte_end":10011415,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011416,"byte_end":10011429,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011430,"byte_end":10011454,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncWriteExt; // for write_all()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011455,"byte_end":10011507,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011508,"byte_end":10011511,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011512,"byte_end":10011557,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011558,"byte_end":10011608,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011609,"byte_end":10011653,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011654,"byte_end":10011666,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011667,"byte_end":10011674,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011675,"byte_end":10011682,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011683,"byte_end":10011686,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011687,"byte_end":10011732,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011733,"byte_end":10011736,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011737,"byte_end":10011750,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011751,"byte_end":10011775,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncReadExt; // for read_to_end()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011776,"byte_end":10011829,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011830,"byte_end":10011833,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011834,"byte_end":10011879,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011880,"byte_end":10011928,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011929,"byte_end":10011932,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011933,"byte_end":10011963,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10011964,"byte_end":10012007,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012008,"byte_end":10012011,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012012,"byte_end":10012053,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012054,"byte_end":10012066,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012067,"byte_end":10012074,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012075,"byte_end":10012082,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013708,"byte_end":10013712,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012671,"byte_end":10012717,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012722,"byte_end":10012725,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012730,"byte_end":10012771,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012776,"byte_end":10012779,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012784,"byte_end":10012823,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012828,"byte_end":10012831,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012836,"byte_end":10012848,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012853,"byte_end":10012856,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012861,"byte_end":10012935,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012940,"byte_end":10013011,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013016,"byte_end":10013060,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013065,"byte_end":10013068,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013073,"byte_end":10013087,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013092,"byte_end":10013095,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013100,"byte_end":10013113,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013118,"byte_end":10013142,"line_start":125,"line_end":125,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013147,"byte_end":10013179,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013184,"byte_end":10013187,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013192,"byte_end":10013237,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013242,"byte_end":10013290,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013295,"byte_end":10013298,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013303,"byte_end":10013333,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013338,"byte_end":10013381,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013386,"byte_end":10013389,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013394,"byte_end":10013435,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013440,"byte_end":10013452,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013457,"byte_end":10013464,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013469,"byte_end":10013476,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013481,"byte_end":10013484,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013489,"byte_end":10013561,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013566,"byte_end":10013569,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013574,"byte_end":10013634,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013639,"byte_end":10013690,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014937,"byte_end":10014943,"line_start":183,"line_end":183,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013909,"byte_end":10013945,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013950,"byte_end":10013953,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10013958,"byte_end":10014034,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014039,"byte_end":10014057,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014062,"byte_end":10014065,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014070,"byte_end":10014111,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014116,"byte_end":10014119,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014124,"byte_end":10014163,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014168,"byte_end":10014171,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014176,"byte_end":10014188,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014193,"byte_end":10014196,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014201,"byte_end":10014274,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014279,"byte_end":10014334,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014339,"byte_end":10014342,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014347,"byte_end":10014384,"line_start":164,"line_end":164,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014389,"byte_end":10014392,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014397,"byte_end":10014411,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014416,"byte_end":10014419,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014424,"byte_end":10014437,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014442,"byte_end":10014466,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014471,"byte_end":10014504,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014509,"byte_end":10014512,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014517,"byte_end":10014562,"line_start":172,"line_end":172,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014567,"byte_end":10014617,"line_start":173,"line_end":173,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014622,"byte_end":10014666,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014671,"byte_end":10014683,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014688,"byte_end":10014695,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014700,"byte_end":10014707,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014712,"byte_end":10014715,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014720,"byte_end":10014791,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014796,"byte_end":10014799,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014804,"byte_end":10014861,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10014866,"byte_end":10014919,"line_start":182,"line_end":182,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015580,"byte_end":10015588,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015156,"byte_end":10015225,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015230,"byte_end":10015233,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015238,"byte_end":10015262,"line_start":191,"line_end":191,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015267,"byte_end":10015283,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015288,"byte_end":10015291,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015296,"byte_end":10015310,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015315,"byte_end":10015318,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015323,"byte_end":10015336,"line_start":196,"line_end":196,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015341,"byte_end":10015416,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015421,"byte_end":10015436,"line_start":198,"line_end":198,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015441,"byte_end":10015500,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015505,"byte_end":10015556,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015561,"byte_end":10015568,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016627,"byte_end":10016635,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015864,"byte_end":10015918,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015923,"byte_end":10015926,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10015931,"byte_end":10016005,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016010,"byte_end":10016042,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016047,"byte_end":10016050,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016055,"byte_end":10016069,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016074,"byte_end":10016077,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016082,"byte_end":10016095,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016100,"byte_end":10016124,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016129,"byte_end":10016162,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016167,"byte_end":10016170,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016175,"byte_end":10016220,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016225,"byte_end":10016275,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016280,"byte_end":10016324,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016329,"byte_end":10016356,"line_start":227,"line_end":227,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016361,"byte_end":10016373,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016378,"byte_end":10016385,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016390,"byte_end":10016397,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016402,"byte_end":10016405,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016410,"byte_end":10016481,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016486,"byte_end":10016489,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016494,"byte_end":10016551,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016556,"byte_end":10016609,"line_start":235,"line_end":235,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017829,"byte_end":10017838,"line_start":271,"line_end":271,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016848,"byte_end":10016914,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016919,"byte_end":10016967,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016972,"byte_end":10016975,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10016980,"byte_end":10017055,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017060,"byte_end":10017132,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017137,"byte_end":10017152,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017157,"byte_end":10017160,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017165,"byte_end":10017243,"line_start":251,"line_end":251,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017248,"byte_end":10017251,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017256,"byte_end":10017270,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017275,"byte_end":10017278,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017283,"byte_end":10017296,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017301,"byte_end":10017325,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017330,"byte_end":10017363,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017368,"byte_end":10017371,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017376,"byte_end":10017421,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017426,"byte_end":10017476,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017481,"byte_end":10017525,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017530,"byte_end":10017558,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017563,"byte_end":10017575,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017580,"byte_end":10017587,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017592,"byte_end":10017599,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017604,"byte_end":10017607,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017612,"byte_end":10017683,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017688,"byte_end":10017691,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017696,"byte_end":10017753,"line_start":269,"line_end":269,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10017758,"byte_end":10017811,"line_start":270,"line_end":270,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10019116,"byte_end":10019123,"line_start":309,"line_end":309,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018052,"byte_end":10018144,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018149,"byte_end":10018152,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018157,"byte_end":10018232,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018237,"byte_end":10018309,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018314,"byte_end":10018390,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018395,"byte_end":10018407,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018412,"byte_end":10018415,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018420,"byte_end":10018432,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018437,"byte_end":10018440,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018445,"byte_end":10018513,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018518,"byte_end":10018530,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018535,"byte_end":10018538,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018543,"byte_end":10018557,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018562,"byte_end":10018565,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018570,"byte_end":10018583,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018588,"byte_end":10018612,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018617,"byte_end":10018650,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018655,"byte_end":10018658,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018663,"byte_end":10018708,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018713,"byte_end":10018763,"line_start":298,"line_end":298,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018768,"byte_end":10018812,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018817,"byte_end":10018845,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018850,"byte_end":10018862,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018867,"byte_end":10018874,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018879,"byte_end":10018886,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018891,"byte_end":10018894,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018899,"byte_end":10018970,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018975,"byte_end":10018978,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10018983,"byte_end":10019040,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10019045,"byte_end":10019098,"line_start":308,"line_end":308,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020707,"byte_end":10020715,"line_start":368,"line_end":368,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020321,"byte_end":10020368,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020373,"byte_end":10020376,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020381,"byte_end":10020395,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020400,"byte_end":10020403,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020408,"byte_end":10020421,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020426,"byte_end":10020450,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020455,"byte_end":10020458,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020463,"byte_end":10020508,"line_start":360,"line_end":360,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020513,"byte_end":10020557,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020562,"byte_end":10020604,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020609,"byte_end":10020612,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020617,"byte_end":10020648,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020653,"byte_end":10020665,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020670,"byte_end":10020677,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020682,"byte_end":10020689,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021339,"byte_end":10021348,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020843,"byte_end":10020919,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10020924,"byte_end":10021002,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021007,"byte_end":10021041,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021046,"byte_end":10021049,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021054,"byte_end":10021068,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021073,"byte_end":10021076,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021081,"byte_end":10021094,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021099,"byte_end":10021123,"line_start":380,"line_end":380,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021128,"byte_end":10021131,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021136,"byte_end":10021181,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021186,"byte_end":10021230,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021235,"byte_end":10021280,"line_start":384,"line_end":384,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021285,"byte_end":10021297,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021302,"byte_end":10021309,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021314,"byte_end":10021321,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022078,"byte_end":10022086,"line_start":412,"line_end":412,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021527,"byte_end":10021598,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021603,"byte_end":10021659,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021664,"byte_end":10021667,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021672,"byte_end":10021735,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021740,"byte_end":10021743,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021748,"byte_end":10021772,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021777,"byte_end":10021780,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021785,"byte_end":10021799,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021804,"byte_end":10021807,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021812,"byte_end":10021825,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021830,"byte_end":10021854,"line_start":404,"line_end":404,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021859,"byte_end":10021862,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021867,"byte_end":10021912,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021917,"byte_end":10021967,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10021972,"byte_end":10022019,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022024,"byte_end":10022036,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022041,"byte_end":10022048,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022053,"byte_end":10022060,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022800,"byte_end":10022812,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022246,"byte_end":10022320,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022325,"byte_end":10022328,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022333,"byte_end":10022357,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022362,"byte_end":10022365,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022370,"byte_end":10022382,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022387,"byte_end":10022390,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022395,"byte_end":10022461,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022466,"byte_end":10022493,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022498,"byte_end":10022501,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022506,"byte_end":10022520,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022525,"byte_end":10022528,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022533,"byte_end":10022546,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022551,"byte_end":10022575,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022580,"byte_end":10022583,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022588,"byte_end":10022633,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022638,"byte_end":10022688,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022693,"byte_end":10022747,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022752,"byte_end":10022764,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022769,"byte_end":10022776,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10022781,"byte_end":10022788,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024090,"byte_end":10024105,"line_start":476,"line_end":476,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023065,"byte_end":10023116,"line_start":447,"line_end":447,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023121,"byte_end":10023124,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023129,"byte_end":10023161,"line_start":449,"line_end":449,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023166,"byte_end":10023169,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023174,"byte_end":10023250,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023255,"byte_end":10023328,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023333,"byte_end":10023373,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023378,"byte_end":10023381,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023386,"byte_end":10023471,"line_start":455,"line_end":455,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023476,"byte_end":10023479,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023484,"byte_end":10023496,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023501,"byte_end":10023504,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023509,"byte_end":10023583,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023588,"byte_end":10023663,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023668,"byte_end":10023702,"line_start":461,"line_end":461,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023707,"byte_end":10023710,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023715,"byte_end":10023729,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023734,"byte_end":10023737,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023742,"byte_end":10023755,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023760,"byte_end":10023784,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023789,"byte_end":10023792,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023797,"byte_end":10023842,"line_start":468,"line_end":468,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023847,"byte_end":10023891,"line_start":469,"line_end":469,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023896,"byte_end":10023953,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023958,"byte_end":10023987,"line_start":471,"line_end":471,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10023992,"byte_end":10024031,"line_start":472,"line_end":472,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024036,"byte_end":10024048,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024053,"byte_end":10024060,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024065,"byte_end":10024072,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034425,"byte_end":10034434,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033378,"byte_end":10033424,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033425,"byte_end":10033428,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033429,"byte_end":10033488,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033489,"byte_end":10033492,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033493,"byte_end":10033522,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033523,"byte_end":10033526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033527,"byte_end":10033606,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033607,"byte_end":10033683,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033684,"byte_end":10033687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033688,"byte_end":10033720,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033721,"byte_end":10033724,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033725,"byte_end":10033795,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033796,"byte_end":10033845,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033846,"byte_end":10033902,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033903,"byte_end":10033906,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033907,"byte_end":10033992,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033993,"byte_end":10033996,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10033997,"byte_end":10034009,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034010,"byte_end":10034013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034014,"byte_end":10034092,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034093,"byte_end":10034125,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034126,"byte_end":10034129,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034130,"byte_end":10034182,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034183,"byte_end":10034186,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034187,"byte_end":10034201,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034202,"byte_end":10034205,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034206,"byte_end":10034219,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034220,"byte_end":10034238,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034239,"byte_end":10034242,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034243,"byte_end":10034261,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034262,"byte_end":10034306,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034307,"byte_end":10034382,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034383,"byte_end":10034397,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034398,"byte_end":10034403,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\hard_link.rs","byte_start":10034404,"byte_end":10034411,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035829,"byte_end":10035837,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034724,"byte_end":10034798,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034799,"byte_end":10034818,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034819,"byte_end":10034822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034823,"byte_end":10034881,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034882,"byte_end":10034885,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034886,"byte_end":10034963,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034964,"byte_end":10034985,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034986,"byte_end":10034989,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10034990,"byte_end":10035022,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035023,"byte_end":10035026,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035027,"byte_end":10035105,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035106,"byte_end":10035184,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035185,"byte_end":10035210,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035211,"byte_end":10035214,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035215,"byte_end":10035243,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035244,"byte_end":10035329,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035330,"byte_end":10035333,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035334,"byte_end":10035346,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035347,"byte_end":10035350,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035351,"byte_end":10035429,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035430,"byte_end":10035462,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035463,"byte_end":10035466,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035467,"byte_end":10035537,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035538,"byte_end":10035566,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035567,"byte_end":10035570,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035571,"byte_end":10035585,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035586,"byte_end":10035589,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035590,"byte_end":10035608,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035609,"byte_end":10035627,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035628,"byte_end":10035631,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035632,"byte_end":10035650,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035651,"byte_end":10035695,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035696,"byte_end":10035758,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035759,"byte_end":10035786,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035787,"byte_end":10035801,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035802,"byte_end":10035807,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\metadata.rs","byte_start":10035808,"byte_end":10035815,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037933,"byte_end":10037944,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036048,"byte_end":10036122,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036123,"byte_end":10036126,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036127,"byte_end":10036205,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036206,"byte_end":10036280,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036281,"byte_end":10036358,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036359,"byte_end":10036371,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036372,"byte_end":10036375,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036376,"byte_end":10036452,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036453,"byte_end":10036532,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036533,"byte_end":10036601,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036602,"byte_end":10036680,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036681,"byte_end":10036688,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036689,"byte_end":10036692,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036693,"byte_end":10036769,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036770,"byte_end":10036792,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036793,"byte_end":10036796,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036797,"byte_end":10036876,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036877,"byte_end":10036912,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036913,"byte_end":10036916,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036917,"byte_end":10036946,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036947,"byte_end":10036978,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10036979,"byte_end":10037008,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037009,"byte_end":10037027,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037028,"byte_end":10037058,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037059,"byte_end":10037093,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037094,"byte_end":10037144,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037145,"byte_end":10037148,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037149,"byte_end":10037163,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037164,"byte_end":10037167,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037168,"byte_end":10037195,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037196,"byte_end":10037199,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037200,"byte_end":10037213,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037214,"byte_end":10037245,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037246,"byte_end":10037262,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037263,"byte_end":10037266,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037267,"byte_end":10037285,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037286,"byte_end":10037325,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037326,"byte_end":10037363,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037364,"byte_end":10037387,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037388,"byte_end":10037416,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037417,"byte_end":10037437,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037438,"byte_end":10037441,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037442,"byte_end":10037456,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037457,"byte_end":10037462,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037463,"byte_end":10037470,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037471,"byte_end":10037474,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037475,"byte_end":10037552,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037553,"byte_end":10037571,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037572,"byte_end":10037575,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037576,"byte_end":10037589,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037590,"byte_end":10037621,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037622,"byte_end":10037638,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037639,"byte_end":10037642,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037643,"byte_end":10037661,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037662,"byte_end":10037701,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037702,"byte_end":10037739,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037740,"byte_end":10037763,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037764,"byte_end":10037788,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037789,"byte_end":10037814,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037815,"byte_end":10037843,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037844,"byte_end":10037864,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037865,"byte_end":10037868,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037869,"byte_end":10037883,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037884,"byte_end":10037889,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037890,"byte_end":10037897,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038465,"byte_end":10038468,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037992,"byte_end":10038055,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038060,"byte_end":10038063,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038068,"byte_end":10038113,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038118,"byte_end":10038121,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038126,"byte_end":10038192,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038197,"byte_end":10038200,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038205,"byte_end":10038241,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038246,"byte_end":10038249,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038254,"byte_end":10038268,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038273,"byte_end":10038276,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038281,"byte_end":10038294,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038299,"byte_end":10038330,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038335,"byte_end":10038338,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038343,"byte_end":10038384,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038389,"byte_end":10038441,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038446,"byte_end":10038453,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039197,"byte_end":10039201,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038548,"byte_end":10038584,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038589,"byte_end":10038592,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038597,"byte_end":10038662,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038667,"byte_end":10038693,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038698,"byte_end":10038701,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038706,"byte_end":10038773,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038778,"byte_end":10038781,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038786,"byte_end":10038823,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038828,"byte_end":10038831,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038836,"byte_end":10038850,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038855,"byte_end":10038858,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038863,"byte_end":10038876,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038881,"byte_end":10038912,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038917,"byte_end":10038933,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038938,"byte_end":10038941,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038946,"byte_end":10038964,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10038969,"byte_end":10039008,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039013,"byte_end":10039050,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039055,"byte_end":10039078,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039083,"byte_end":10039111,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039116,"byte_end":10039136,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039141,"byte_end":10039144,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039149,"byte_end":10039163,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039168,"byte_end":10039173,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039178,"byte_end":10039185,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039952,"byte_end":10039957,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039298,"byte_end":10039335,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039340,"byte_end":10039343,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039348,"byte_end":10039413,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039418,"byte_end":10039445,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039450,"byte_end":10039453,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039458,"byte_end":10039526,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039531,"byte_end":10039534,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039539,"byte_end":10039577,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039582,"byte_end":10039585,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039590,"byte_end":10039604,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039609,"byte_end":10039612,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039617,"byte_end":10039630,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039635,"byte_end":10039666,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039671,"byte_end":10039687,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039692,"byte_end":10039695,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039700,"byte_end":10039718,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039723,"byte_end":10039762,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039767,"byte_end":10039804,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039809,"byte_end":10039833,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039838,"byte_end":10039866,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039871,"byte_end":10039891,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039896,"byte_end":10039899,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039904,"byte_end":10039918,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039923,"byte_end":10039928,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10039933,"byte_end":10039940,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042187,"byte_end":10042193,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040057,"byte_end":10040097,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040102,"byte_end":10040105,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040110,"byte_end":10040185,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040190,"byte_end":10040246,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040251,"byte_end":10040318,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040323,"byte_end":10040343,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040348,"byte_end":10040351,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040356,"byte_end":10040433,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040438,"byte_end":10040514,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040519,"byte_end":10040528,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040533,"byte_end":10040536,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040541,"byte_end":10040615,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040620,"byte_end":10040691,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040696,"byte_end":10040772,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040777,"byte_end":10040841,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040846,"byte_end":10040903,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040908,"byte_end":10040911,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040916,"byte_end":10040991,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10040996,"byte_end":10041074,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041079,"byte_end":10041152,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041157,"byte_end":10041244,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041249,"byte_end":10041252,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041257,"byte_end":10041326,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041331,"byte_end":10041334,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041339,"byte_end":10041378,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041383,"byte_end":10041386,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041391,"byte_end":10041402,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041407,"byte_end":10041410,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041415,"byte_end":10041496,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041501,"byte_end":10041521,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041526,"byte_end":10041529,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041534,"byte_end":10041582,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041587,"byte_end":10041635,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041640,"byte_end":10041683,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041688,"byte_end":10041723,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041728,"byte_end":10041771,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041776,"byte_end":10041811,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041816,"byte_end":10041819,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041824,"byte_end":10041838,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041843,"byte_end":10041846,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041851,"byte_end":10041864,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041869,"byte_end":10041900,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041905,"byte_end":10041921,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041926,"byte_end":10041929,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041934,"byte_end":10041952,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10041957,"byte_end":10041996,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042001,"byte_end":10042038,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042043,"byte_end":10042068,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042073,"byte_end":10042101,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042106,"byte_end":10042126,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042131,"byte_end":10042134,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042139,"byte_end":10042153,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042158,"byte_end":10042163,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042168,"byte_end":10042175,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043110,"byte_end":10043118,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042296,"byte_end":10042347,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042352,"byte_end":10042355,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042360,"byte_end":10042434,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042439,"byte_end":10042485,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042490,"byte_end":10042493,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042498,"byte_end":10042565,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042570,"byte_end":10042573,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042578,"byte_end":10042649,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042654,"byte_end":10042657,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042662,"byte_end":10042703,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042708,"byte_end":10042711,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042716,"byte_end":10042730,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042735,"byte_end":10042738,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042743,"byte_end":10042756,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042761,"byte_end":10042792,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042797,"byte_end":10042813,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042818,"byte_end":10042821,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042826,"byte_end":10042844,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042849,"byte_end":10042888,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042893,"byte_end":10042930,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042935,"byte_end":10042959,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042964,"byte_end":10042991,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10042996,"byte_end":10043024,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043029,"byte_end":10043049,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043054,"byte_end":10043057,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043062,"byte_end":10043076,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043081,"byte_end":10043086,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043091,"byte_end":10043098,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044115,"byte_end":10044121,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043227,"byte_end":10043271,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043276,"byte_end":10043279,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043284,"byte_end":10043356,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043361,"byte_end":10043392,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043397,"byte_end":10043400,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043405,"byte_end":10043481,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043486,"byte_end":10043498,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043503,"byte_end":10043506,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043511,"byte_end":10043580,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043585,"byte_end":10043588,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043593,"byte_end":10043632,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043637,"byte_end":10043670,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043675,"byte_end":10043710,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043715,"byte_end":10043718,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043723,"byte_end":10043737,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043742,"byte_end":10043745,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043750,"byte_end":10043763,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043768,"byte_end":10043799,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043804,"byte_end":10043820,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043825,"byte_end":10043828,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043833,"byte_end":10043851,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043856,"byte_end":10043895,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043900,"byte_end":10043937,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043942,"byte_end":10043966,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10043971,"byte_end":10043996,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044001,"byte_end":10044029,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044034,"byte_end":10044054,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044059,"byte_end":10044062,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044067,"byte_end":10044081,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044086,"byte_end":10044091,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044096,"byte_end":10044103,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045520,"byte_end":10045530,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044224,"byte_end":10044272,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044277,"byte_end":10044280,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044285,"byte_end":10044358,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044363,"byte_end":10044435,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044440,"byte_end":10044443,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044448,"byte_end":10044522,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044527,"byte_end":10044599,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044604,"byte_end":10044670,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044675,"byte_end":10044678,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044683,"byte_end":10044755,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044760,"byte_end":10044772,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044777,"byte_end":10044780,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044785,"byte_end":10044861,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044866,"byte_end":10044879,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044884,"byte_end":10044887,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044892,"byte_end":10044965,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044970,"byte_end":10044973,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10044978,"byte_end":10045021,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045026,"byte_end":10045064,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045069,"byte_end":10045111,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045116,"byte_end":10045119,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045124,"byte_end":10045138,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045143,"byte_end":10045146,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045151,"byte_end":10045164,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045169,"byte_end":10045200,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045205,"byte_end":10045221,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045226,"byte_end":10045229,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045234,"byte_end":10045252,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045257,"byte_end":10045296,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045301,"byte_end":10045338,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045343,"byte_end":10045367,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045372,"byte_end":10045401,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045406,"byte_end":10045434,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045439,"byte_end":10045459,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045464,"byte_end":10045467,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045472,"byte_end":10045486,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045491,"byte_end":10045496,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045501,"byte_end":10045508,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047982,"byte_end":10047986,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045645,"byte_end":10045709,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045714,"byte_end":10045717,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045722,"byte_end":10045789,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045794,"byte_end":10045797,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045802,"byte_end":10045839,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045844,"byte_end":10045847,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045852,"byte_end":10045864,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045869,"byte_end":10045872,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045877,"byte_end":10045943,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10045948,"byte_end":10046023,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046028,"byte_end":10046102,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046107,"byte_end":10046182,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046187,"byte_end":10046241,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046246,"byte_end":10046249,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046254,"byte_end":10046328,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046333,"byte_end":10046362,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046367,"byte_end":10046440,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046445,"byte_end":10046461,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046466,"byte_end":10046540,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046545,"byte_end":10046578,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046583,"byte_end":10046655,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046660,"byte_end":10046709,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046714,"byte_end":10046786,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046791,"byte_end":10046804,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046809,"byte_end":10046879,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046884,"byte_end":10046938,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10046943,"byte_end":10047018,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047023,"byte_end":10047059,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047064,"byte_end":10047133,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047138,"byte_end":10047211,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047216,"byte_end":10047283,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047288,"byte_end":10047339,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047344,"byte_end":10047347,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047352,"byte_end":10047366,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047371,"byte_end":10047374,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047379,"byte_end":10047392,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047397,"byte_end":10047428,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047433,"byte_end":10047449,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047454,"byte_end":10047457,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047462,"byte_end":10047480,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047485,"byte_end":10047524,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047529,"byte_end":10047590,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047595,"byte_end":10047609,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047614,"byte_end":10047619,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047624,"byte_end":10047631,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047636,"byte_end":10047639,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047644,"byte_end":10047681,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047686,"byte_end":10047742,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047747,"byte_end":10047801,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047806,"byte_end":10047852,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047857,"byte_end":10047897,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10047902,"byte_end":10047964,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10051824,"byte_end":10051835,"line_start":489,"line_end":489,"column_start":16,"column_end":27},"name":"access_mode","qualname":"<OpenOptions>::access_mode","value":"pub fn access_mode(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Overrides the `dwDesiredAccess` argument to the call to [`CreateFile`]\n with the specified value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10053133,"byte_end":10053143,"line_start":522,"line_end":522,"column_start":16,"column_end":26},"name":"share_mode","qualname":"<OpenOptions>::share_mode","value":"pub fn share_mode(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Overrides the `dwShareMode` argument to the call to [`CreateFile`] with\n the specified value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10054466,"byte_end":10054478,"line_start":554,"line_end":554,"column_start":16,"column_end":28},"name":"custom_flags","qualname":"<OpenOptions>::custom_flags","value":"pub fn custom_flags(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets extra flags for the `dwFileFlags` argument to the call to\n [`CreateFile2`] to the specified value (or combines it with\n `attributes` and `security_qos_flags` to set the `dwFlagsAndAttributes`\n for [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10056132,"byte_end":10056142,"line_start":593,"line_end":593,"column_start":16,"column_end":26},"name":"attributes","qualname":"<OpenOptions>::attributes","value":"pub fn attributes(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the `dwFileAttributes` argument to the call to [`CreateFile2`] to\n the specified value (or combines it with `custom_flags` and\n `security_qos_flags` to set the `dwFlagsAndAttributes` for\n [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10058480,"byte_end":10058498,"line_start":641,"line_end":641,"column_start":16,"column_end":34},"name":"security_qos_flags","qualname":"<OpenOptions>::security_qos_flags","value":"pub fn security_qos_flags(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the `dwSecurityQosFlags` argument to the call to [`CreateFile2`] to\n the specified value (or combines it with `custom_flags` and `attributes`\n to set the `dwFlagsAndAttributes` for [`CreateFile`]).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060252,"byte_end":10060256,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10058928,"byte_end":10058988,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10058989,"byte_end":10058992,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10058993,"byte_end":10059047,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059048,"byte_end":10059051,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059052,"byte_end":10059076,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059077,"byte_end":10059080,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059081,"byte_end":10059160,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059161,"byte_end":10059240,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059241,"byte_end":10059321,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059322,"byte_end":10059374,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059375,"byte_end":10059378,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059379,"byte_end":10059416,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059417,"byte_end":10059474,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059475,"byte_end":10059478,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059479,"byte_end":10059491,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059492,"byte_end":10059495,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059496,"byte_end":10059568,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059569,"byte_end":10059642,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059643,"byte_end":10059646,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059647,"byte_end":10059698,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059699,"byte_end":10059702,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059703,"byte_end":10059775,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059776,"byte_end":10059828,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059829,"byte_end":10059832,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059833,"byte_end":10059896,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059897,"byte_end":10059900,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059901,"byte_end":10059915,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059916,"byte_end":10059919,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059920,"byte_end":10059933,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059934,"byte_end":10059952,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059953,"byte_end":10059982,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059983,"byte_end":10059986,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10059987,"byte_end":10060005,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060006,"byte_end":10060079,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060080,"byte_end":10060134,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060135,"byte_end":10060209,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060210,"byte_end":10060224,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060225,"byte_end":10060230,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read.rs","byte_start":10060231,"byte_end":10060238,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10060793,"byte_end":10060801,"line_start":16,"line_end":16,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10060645,"byte_end":10060702,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10060703,"byte_end":10060706,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10060707,"byte_end":10060779,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061748,"byte_end":10061755,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read the the entries in a directory.","sig":null,"attributes":[{"value":"/ Read the the entries in a directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10060995,"byte_end":10061035,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061036,"byte_end":10061039,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This struct is returned from the [`read_dir`] function of this module and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061040,"byte_end":10061117,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`] information","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061118,"byte_end":10061194,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ like the entry's path and possibly other metadata can be learned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061195,"byte_end":10061264,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061265,"byte_end":10061268,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `ReadDir` can be turned into a `Stream` with [`ReadDirStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061269,"byte_end":10061338,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061339,"byte_end":10061342,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`ReadDirStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReadDirStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061343,"byte_end":10061446,"line_start":31,"line_end":31,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061447,"byte_end":10061450,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061451,"byte_end":10061463,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061464,"byte_end":10061467,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This stream will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061468,"byte_end":10061543,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ IO error during iteration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061544,"byte_end":10061574,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061575,"byte_end":10061578,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061579,"byte_end":10061605,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061606,"byte_end":10061632,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061633,"byte_end":10061670,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061688,"byte_end":10061736,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062009,"byte_end":10062019,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061940,"byte_end":10061991,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10063053,"byte_end":10063068,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next directory entry in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next directory entry in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062165,"byte_end":10062218,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062223,"byte_end":10062226,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062231,"byte_end":10062255,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062260,"byte_end":10062263,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next directory entry is not yet available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062268,"byte_end":10062340,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/  * `Poll::Ready(Ok(Some(entry)))` if the next directory entry is available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062345,"byte_end":10062424,"line_start":63,"line_end":63,"column_start":5,"column_end":84}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more directory entries in this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062429,"byte_end":10062506,"line_start":64,"line_end":64,"column_start":5,"column_end":82}},{"value":"/    stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062511,"byte_end":10062525,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062530,"byte_end":10062607,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/    directory entry.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062612,"byte_end":10062635,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062640,"byte_end":10062643,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062648,"byte_end":10062720,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when the next directory entry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062725,"byte_end":10062801,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ becomes available on the underlying IO resource.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062806,"byte_end":10062858,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062863,"byte_end":10062866,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_entry`, only the `Waker` from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062871,"byte_end":10062946,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10062951,"byte_end":10063025,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10063030,"byte_end":10063041,"line_start":75,"line_end":75,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065190,"byte_end":10065198,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064739,"byte_end":10064786,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064787,"byte_end":10064790,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064791,"byte_end":10064822,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064823,"byte_end":10064826,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064827,"byte_end":10064904,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064905,"byte_end":10064923,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064924,"byte_end":10064927,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10064928,"byte_end":10065006,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065007,"byte_end":10065086,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065087,"byte_end":10065161,"line_start":143,"line_end":143,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066030,"byte_end":10066034,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065245,"byte_end":10065310,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065315,"byte_end":10065318,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065323,"byte_end":10065394,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065399,"byte_end":10065435,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065440,"byte_end":10065443,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065448,"byte_end":10065462,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065467,"byte_end":10065470,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065475,"byte_end":10065488,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065493,"byte_end":10065511,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065516,"byte_end":10065519,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065524,"byte_end":10065569,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065574,"byte_end":10065621,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065626,"byte_end":10065629,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065634,"byte_end":10065691,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065696,"byte_end":10065735,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065740,"byte_end":10065745,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065750,"byte_end":10065762,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065767,"byte_end":10065774,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065779,"byte_end":10065786,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065791,"byte_end":10065794,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065799,"byte_end":10065827,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065832,"byte_end":10065835,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065840,"byte_end":10065851,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065856,"byte_end":10065876,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065881,"byte_end":10065897,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065902,"byte_end":10065924,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065929,"byte_end":10065936,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065941,"byte_end":10065944,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065949,"byte_end":10066018,"line_start":176,"line_end":176,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066554,"byte_end":10066563,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066088,"byte_end":10066160,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066165,"byte_end":10066192,"line_start":182,"line_end":182,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066197,"byte_end":10066200,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066205,"byte_end":10066219,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066224,"byte_end":10066227,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066232,"byte_end":10066239,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066244,"byte_end":10066262,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066267,"byte_end":10066270,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066275,"byte_end":10066320,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066325,"byte_end":10066372,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066377,"byte_end":10066380,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066385,"byte_end":10066442,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066447,"byte_end":10066491,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066496,"byte_end":10066501,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066506,"byte_end":10066518,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066523,"byte_end":10066530,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066535,"byte_end":10066542,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067660,"byte_end":10067668,"line_start":232,"line_end":232,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066623,"byte_end":10066687,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066692,"byte_end":10066695,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066700,"byte_end":10066770,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066775,"byte_end":10066787,"line_start":205,"line_end":205,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066792,"byte_end":10066795,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066800,"byte_end":10066832,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066837,"byte_end":10066840,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066845,"byte_end":10066913,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066918,"byte_end":10066987,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10066992,"byte_end":10067035,"line_start":211,"line_end":211,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067040,"byte_end":10067043,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067048,"byte_end":10067062,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067067,"byte_end":10067070,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067075,"byte_end":10067082,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067087,"byte_end":10067105,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067110,"byte_end":10067113,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067118,"byte_end":10067163,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067168,"byte_end":10067215,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067220,"byte_end":10067223,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067228,"byte_end":10067285,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067290,"byte_end":10067344,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067349,"byte_end":10067403,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067408,"byte_end":10067481,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067486,"byte_end":10067502,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067507,"byte_end":10067577,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067582,"byte_end":10067591,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067596,"byte_end":10067601,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067606,"byte_end":10067618,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067623,"byte_end":10067630,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067635,"byte_end":10067642,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068852,"byte_end":10068861,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067794,"byte_end":10067859,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067864,"byte_end":10067867,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067872,"byte_end":10067942,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067947,"byte_end":10067959,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067964,"byte_end":10067967,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10067972,"byte_end":10068004,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068009,"byte_end":10068012,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068017,"byte_end":10068087,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068092,"byte_end":10068168,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068173,"byte_end":10068240,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068245,"byte_end":10068248,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068253,"byte_end":10068267,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068272,"byte_end":10068275,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068280,"byte_end":10068287,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068292,"byte_end":10068310,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068315,"byte_end":10068318,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068323,"byte_end":10068368,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068373,"byte_end":10068420,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068425,"byte_end":10068428,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068433,"byte_end":10068490,"line_start":256,"line_end":256,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068495,"byte_end":10068551,"line_start":257,"line_end":257,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068556,"byte_end":10068608,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068613,"byte_end":10068673,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068678,"byte_end":10068694,"line_start":260,"line_end":260,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068699,"byte_end":10068769,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068774,"byte_end":10068783,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068788,"byte_end":10068793,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068798,"byte_end":10068810,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068815,"byte_end":10068822,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10068827,"byte_end":10068834,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069404,"byte_end":10069413,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069222,"byte_end":10069292,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069293,"byte_end":10069296,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069297,"byte_end":10069356,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069357,"byte_end":10069360,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_link.rs","byte_start":10069361,"byte_end":10069390,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10070121,"byte_end":10070135,"line_start":23,"line_end":23,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069614,"byte_end":10069689,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069690,"byte_end":10069740,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069741,"byte_end":10069744,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::read_to_string`][std].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069745,"byte_end":10069814,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069815,"byte_end":10069818,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::read_to_string","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069819,"byte_end":10069856,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069857,"byte_end":10069860,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069861,"byte_end":10069875,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069876,"byte_end":10069879,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069880,"byte_end":10069893,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069894,"byte_end":10069912,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069913,"byte_end":10069916,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069917,"byte_end":10069962,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10069963,"byte_end":10070019,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10070020,"byte_end":10070078,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10070079,"byte_end":10070091,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10070092,"byte_end":10070099,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_to_string.rs","byte_start":10070100,"byte_end":10070107,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir.rs","byte_start":10070483,"byte_end":10070493,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir.rs","byte_start":10070347,"byte_end":10070388,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir.rs","byte_start":10070389,"byte_end":10070392,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir.rs","byte_start":10070393,"byte_end":10070469,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070907,"byte_end":10070921,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070697,"byte_end":10070782,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070783,"byte_end":10070786,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070787,"byte_end":10070851,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070852,"byte_end":10070855,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_dir_all.rs","byte_start":10070856,"byte_end":10070893,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071458,"byte_end":10071469,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071129,"byte_end":10071168,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071169,"byte_end":10071172,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071173,"byte_end":10071251,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071252,"byte_end":10071328,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071329,"byte_end":10071342,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071343,"byte_end":10071346,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071347,"byte_end":10071408,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071409,"byte_end":10071412,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\remove_file.rs","byte_start":10071413,"byte_end":10071444,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071937,"byte_end":10071943,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071674,"byte_end":10071751,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071752,"byte_end":10071776,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071777,"byte_end":10071780,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071781,"byte_end":10071850,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071851,"byte_end":10071854,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\rename.rs","byte_start":10071855,"byte_end":10071923,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072419,"byte_end":10072434,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072233,"byte_end":10072292,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072293,"byte_end":10072296,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072297,"byte_end":10072362,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072363,"byte_end":10072366,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\set_permissions.rs","byte_start":10072367,"byte_end":10072405,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072863,"byte_end":10072879,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072686,"byte_end":10072734,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072735,"byte_end":10072738,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072739,"byte_end":10072805,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072806,"byte_end":10072809,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_metadata.rs","byte_start":10072810,"byte_end":10072849,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073489,"byte_end":10073494,"line_start":22,"line_end":22,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<impl AsRef<Path>: AsRef<Path>,\n                   impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<Path>,\n                                                  impl AsRef<[u8]>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073083,"byte_end":10073158,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073159,"byte_end":10073192,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073193,"byte_end":10073196,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::write`][std].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073197,"byte_end":10073257,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073258,"byte_end":10073261,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073262,"byte_end":10073290,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073291,"byte_end":10073294,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073295,"byte_end":10073309,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073310,"byte_end":10073313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073314,"byte_end":10073327,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073328,"byte_end":10073346,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073347,"byte_end":10073350,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073351,"byte_end":10073396,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073397,"byte_end":10073446,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073447,"byte_end":10073459,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073460,"byte_end":10073467,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\write.rs","byte_start":10073468,"byte_end":10073475,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074255,"byte_end":10074259,"line_start":23,"line_end":23,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<impl AsRef<Path>: AsRef<Path>,\n                  impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                 impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits\n of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10073767,"byte_end":10073863,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ of the original file to the destination file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10073864,"byte_end":10073913,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10073914,"byte_end":10073966,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10073967,"byte_end":10073970,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::copy`][std].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10073971,"byte_end":10074030,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074031,"byte_end":10074034,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::copy","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074035,"byte_end":10074062,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074063,"byte_end":10074066,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074067,"byte_end":10074081,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074082,"byte_end":10074085,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074086,"byte_end":10074099,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074100,"byte_end":10074118,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074119,"byte_end":10074122,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074123,"byte_end":10074168,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074169,"byte_end":10074211,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074212,"byte_end":10074224,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074225,"byte_end":10074232,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\copy.rs","byte_start":10074233,"byte_end":10074240,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074813,"byte_end":10074824,"line_start":14,"line_end":14,"column_start":14,"column_end":25},"name":"symlink_dir","qualname":"::fs::symlink_dir::symlink_dir","value":"pub async fn symlink_dir<impl AsRef<Path>: AsRef<Path>,\n                         impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                        impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory symlink on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new directory symlink on the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074528,"byte_end":10074582,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074583,"byte_end":10074586,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a directory symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074587,"byte_end":10074661,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ path.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074662,"byte_end":10074671,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074672,"byte_end":10074675,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_dir`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074676,"byte_end":10074750,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074751,"byte_end":10074754,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_dir","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_dir.rs","byte_start":10074755,"byte_end":10074799,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075389,"byte_end":10075401,"line_start":14,"line_end":14,"column_start":14,"column_end":26},"name":"symlink_file","qualname":"::fs::symlink_file::symlink_file","value":"pub async fn symlink_file<impl AsRef<Path>: AsRef<Path>,\n                          impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                         impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new file symbolic link on the filesystem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075106,"byte_end":10075161,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075162,"byte_end":10075165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a file symbolic link pointing to the `src`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075166,"byte_end":10075235,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ path.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075236,"byte_end":10075245,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075246,"byte_end":10075249,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::windows::fs::symlink_file`][std]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075250,"byte_end":10075325,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075326,"byte_end":10075329,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::windows::fs::symlink_file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\symlink_file.rs","byte_start":10075330,"byte_end":10075375,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32363,"byte_end":32369,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32328,"byte_end":32358,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32423,"byte_end":32427,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32380,"byte_end":32418,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32589,"byte_end":32593,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1199},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32446,"byte_end":32512,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32517,"byte_end":32584,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32299,"byte_end":32308,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32235,"byte_end":32272,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32756,"byte_end":32766,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32711,"byte_end":32748,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33169,"byte_end":33179,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32885,"byte_end":32970,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32975,"byte_end":33046,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33051,"byte_end":33124,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33129,"byte_end":33157,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33557,"byte_end":33568,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33436,"byte_end":33503,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33508,"byte_end":33531,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33536,"byte_end":33545,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34802,"byte_end":34808,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34750,"byte_end":34790,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34938,"byte_end":34945,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34859,"byte_end":34930,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075929,"byte_end":10075934,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075700,"byte_end":10075741,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075742,"byte_end":10075745,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075746,"byte_end":10075823,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075892,"byte_end":10075917,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":124},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":1363},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1586},{"krate":0,"index":1612},{"krate":0,"index":1773},{"krate":0,"index":1791},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1862},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":3223}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35459,"byte_end":35536,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35537,"byte_end":35540,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35541,"byte_end":35612,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35613,"byte_end":35693,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35694,"byte_end":35768,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35769,"byte_end":35772,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35773,"byte_end":35803,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35804,"byte_end":35807,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35808,"byte_end":35888,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35889,"byte_end":35966,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35967,"byte_end":36044,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36045,"byte_end":36125,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36126,"byte_end":36204,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36205,"byte_end":36270,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36271,"byte_end":36274,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36275,"byte_end":36347,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36348,"byte_end":36415,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36416,"byte_end":36495,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36496,"byte_end":36570,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36571,"byte_end":36645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36646,"byte_end":36663,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36664,"byte_end":36667,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36668,"byte_end":36732,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36733,"byte_end":36808,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36809,"byte_end":36884,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36885,"byte_end":36962,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36963,"byte_end":36966,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36967,"byte_end":37043,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37044,"byte_end":37119,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37120,"byte_end":37200,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37201,"byte_end":37272,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37273,"byte_end":37342,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37343,"byte_end":37346,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37347,"byte_end":37419,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37420,"byte_end":37500,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37501,"byte_end":37554,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37555,"byte_end":37558,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37559,"byte_end":37572,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37573,"byte_end":37613,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37614,"byte_end":37638,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37639,"byte_end":37642,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37643,"byte_end":37661,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37662,"byte_end":37701,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37702,"byte_end":37751,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37752,"byte_end":37785,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37786,"byte_end":37789,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37790,"byte_end":37820,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37821,"byte_end":37864,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37865,"byte_end":37868,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37869,"byte_end":37919,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37920,"byte_end":37934,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37935,"byte_end":37940,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37941,"byte_end":37948,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37949,"byte_end":37952,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37953,"byte_end":37982,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37983,"byte_end":38023,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38024,"byte_end":38060,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38061,"byte_end":38102,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38103,"byte_end":38106,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38107,"byte_end":38142,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38143,"byte_end":38146,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38147,"byte_end":38228,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38229,"byte_end":38303,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38304,"byte_end":38382,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38383,"byte_end":38427,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38428,"byte_end":38431,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38432,"byte_end":38502,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38503,"byte_end":38581,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38582,"byte_end":38660,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38661,"byte_end":38738,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38739,"byte_end":38742,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38743,"byte_end":38818,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38819,"byte_end":38857,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38858,"byte_end":38861,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38862,"byte_end":38875,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38876,"byte_end":38930,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38931,"byte_end":38955,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38956,"byte_end":38959,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38960,"byte_end":38978,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38979,"byte_end":39018,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39019,"byte_end":39064,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39065,"byte_end":39108,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39109,"byte_end":39148,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39149,"byte_end":39152,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39153,"byte_end":39187,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39188,"byte_end":39233,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39234,"byte_end":39237,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39238,"byte_end":39269,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39270,"byte_end":39284,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39285,"byte_end":39290,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39291,"byte_end":39298,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39299,"byte_end":39302,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39303,"byte_end":39384,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39385,"byte_end":39463,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39464,"byte_end":39526,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39527,"byte_end":39530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39531,"byte_end":39544,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39545,"byte_end":39597,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39598,"byte_end":39622,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39623,"byte_end":39626,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39627,"byte_end":39645,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39646,"byte_end":39685,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39686,"byte_end":39733,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39734,"byte_end":39743,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39744,"byte_end":39791,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39792,"byte_end":39795,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39796,"byte_end":39838,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39839,"byte_end":39880,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39881,"byte_end":39884,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39885,"byte_end":39945,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39946,"byte_end":39980,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39981,"byte_end":39984,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39985,"byte_end":40075,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40076,"byte_end":40079,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40080,"byte_end":40094,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40095,"byte_end":40100,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40101,"byte_end":40108,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40109,"byte_end":40112,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40113,"byte_end":40158,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40159,"byte_end":40201,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40202,"byte_end":40247,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40248,"byte_end":40287,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40288,"byte_end":40327,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40328,"byte_end":40331,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40332,"byte_end":40376,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40377,"byte_end":40380,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40381,"byte_end":40463,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40464,"byte_end":40543,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40544,"byte_end":40618,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40619,"byte_end":40692,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40693,"byte_end":40753,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40754,"byte_end":40757,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40758,"byte_end":40799,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40800,"byte_end":40803,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40804,"byte_end":40872,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40873,"byte_end":40942,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40943,"byte_end":41009,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41010,"byte_end":41073,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41074,"byte_end":41141,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41142,"byte_end":41211,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41212,"byte_end":41282,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41283,"byte_end":41361,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41362,"byte_end":41387,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41388,"byte_end":41391,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41392,"byte_end":41468,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41469,"byte_end":41472,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41473,"byte_end":41504,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41505,"byte_end":41508,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41509,"byte_end":41589,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41590,"byte_end":41666,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41667,"byte_end":41714,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41715,"byte_end":41718,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41719,"byte_end":41792,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41793,"byte_end":41869,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41870,"byte_end":41946,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41947,"byte_end":41950,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41951,"byte_end":41972,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41973,"byte_end":41996,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41997,"byte_end":42019,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42020,"byte_end":42023,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42024,"byte_end":42046,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42047,"byte_end":42050,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42051,"byte_end":42127,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42128,"byte_end":42175,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42176,"byte_end":42179,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42180,"byte_end":42214,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42215,"byte_end":42251,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42252,"byte_end":42292,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42293,"byte_end":42335,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42336,"byte_end":42409,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42410,"byte_end":42493,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42494,"byte_end":42577,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42578,"byte_end":42605,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42606,"byte_end":42639,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42640,"byte_end":42667,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42668,"byte_end":42695,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42696,"byte_end":42727,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42728,"byte_end":42798,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42799,"byte_end":42875,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42876,"byte_end":42905,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45583,"byte_end":45595,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44906,"byte_end":44937,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44938,"byte_end":44941,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44942,"byte_end":45014,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45015,"byte_end":45093,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45094,"byte_end":45180,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45181,"byte_end":45258,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45259,"byte_end":45270,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45271,"byte_end":45274,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45275,"byte_end":45343,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45344,"byte_end":45368,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45369,"byte_end":45372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45373,"byte_end":45415,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45416,"byte_end":45466,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45467,"byte_end":45520,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45521,"byte_end":45572,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46693,"byte_end":46706,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45613,"byte_end":45698,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45703,"byte_end":45744,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45749,"byte_end":45752,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45757,"byte_end":45804,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45809,"byte_end":45812,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45817,"byte_end":45876,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45881,"byte_end":45939,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45944,"byte_end":46025,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46030,"byte_end":46056,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46061,"byte_end":46064,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46069,"byte_end":46140,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46145,"byte_end":46207,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46212,"byte_end":46283,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46288,"byte_end":46369,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46374,"byte_end":46450,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46455,"byte_end":46506,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46511,"byte_end":46514,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46519,"byte_end":46590,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46595,"byte_end":46598,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46603,"byte_end":46642,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46647,"byte_end":46685,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47609,"byte_end":47616,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46784,"byte_end":46858,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46863,"byte_end":46930,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46935,"byte_end":46938,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46943,"byte_end":47014,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47019,"byte_end":47088,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47093,"byte_end":47167,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47172,"byte_end":47249,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47254,"byte_end":47324,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47329,"byte_end":47382,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47387,"byte_end":47390,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47395,"byte_end":47467,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47472,"byte_end":47494,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47499,"byte_end":47502,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47507,"byte_end":47546,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47551,"byte_end":47601,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50930,"byte_end":50939,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49243,"byte_end":49273,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49274,"byte_end":49277,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49278,"byte_end":49357,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49358,"byte_end":49432,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49433,"byte_end":49512,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49513,"byte_end":49590,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49591,"byte_end":49602,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49603,"byte_end":49606,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49607,"byte_end":49684,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49685,"byte_end":49703,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49704,"byte_end":49707,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49708,"byte_end":49788,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49789,"byte_end":49862,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49863,"byte_end":49942,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49943,"byte_end":49987,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49988,"byte_end":49991,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49992,"byte_end":50057,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50058,"byte_end":50138,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50139,"byte_end":50218,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50219,"byte_end":50292,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50293,"byte_end":50366,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50367,"byte_end":50388,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50389,"byte_end":50392,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50393,"byte_end":50477,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50478,"byte_end":50502,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50503,"byte_end":50506,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50507,"byte_end":50580,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50581,"byte_end":50660,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50661,"byte_end":50664,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50665,"byte_end":50730,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50731,"byte_end":50752,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50753,"byte_end":50756,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50757,"byte_end":50796,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50797,"byte_end":50833,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50834,"byte_end":50873,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50874,"byte_end":50919,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51429,"byte_end":51438,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50946,"byte_end":50999,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51004,"byte_end":51007,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51012,"byte_end":51083,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51088,"byte_end":51161,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51166,"byte_end":51191,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51196,"byte_end":51199,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51204,"byte_end":51279,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51284,"byte_end":51353,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51358,"byte_end":51421,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54034,"byte_end":54043,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53552,"byte_end":53582,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53583,"byte_end":53586,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53587,"byte_end":53661,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53662,"byte_end":53732,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53733,"byte_end":53802,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53803,"byte_end":53806,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53807,"byte_end":53872,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53873,"byte_end":53894,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53895,"byte_end":53898,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53899,"byte_end":53935,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53936,"byte_end":53977,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53978,"byte_end":54023,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54685,"byte_end":54695,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54050,"byte_end":54107,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54112,"byte_end":54115,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54120,"byte_end":54193,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54198,"byte_end":54224,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54229,"byte_end":54232,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54237,"byte_end":54312,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54317,"byte_end":54373,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54378,"byte_end":54381,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54386,"byte_end":54398,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54403,"byte_end":54406,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54411,"byte_end":54481,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54486,"byte_end":54560,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54565,"byte_end":54639,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54644,"byte_end":54677,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55218,"byte_end":55231,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54762,"byte_end":54805,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54810,"byte_end":54813,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54818,"byte_end":54867,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54872,"byte_end":54942,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54947,"byte_end":55019,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55024,"byte_end":55095,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55100,"byte_end":55116,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55121,"byte_end":55124,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55129,"byte_end":55141,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55146,"byte_end":55149,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55154,"byte_end":55210,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58522,"byte_end":58532,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56659,"byte_end":56691,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56692,"byte_end":56695,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56696,"byte_end":56778,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56779,"byte_end":56854,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56855,"byte_end":56922,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56923,"byte_end":56926,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56927,"byte_end":57007,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57008,"byte_end":57026,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57027,"byte_end":57030,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57031,"byte_end":57102,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57103,"byte_end":57117,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57118,"byte_end":57121,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57122,"byte_end":57190,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57191,"byte_end":57271,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57272,"byte_end":57351,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57352,"byte_end":57425,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57426,"byte_end":57499,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57500,"byte_end":57521,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57522,"byte_end":57525,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57526,"byte_end":57610,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57611,"byte_end":57635,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57636,"byte_end":57639,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57640,"byte_end":57722,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57723,"byte_end":57806,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57807,"byte_end":57810,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57811,"byte_end":57895,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57896,"byte_end":57980,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57981,"byte_end":58059,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58060,"byte_end":58139,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58140,"byte_end":58201,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58202,"byte_end":58205,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58206,"byte_end":58272,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58273,"byte_end":58295,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58296,"byte_end":58299,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58300,"byte_end":58338,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58339,"byte_end":58383,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58384,"byte_end":58423,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58424,"byte_end":58463,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58464,"byte_end":58511,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58916,"byte_end":58926,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58539,"byte_end":58593,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58598,"byte_end":58601,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58606,"byte_end":58667,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58672,"byte_end":58675,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58680,"byte_end":58742,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58747,"byte_end":58805,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58810,"byte_end":58877,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58882,"byte_end":58908,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59467,"byte_end":59477,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59054,"byte_end":59125,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59130,"byte_end":59152,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59157,"byte_end":59160,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59165,"byte_end":59211,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59216,"byte_end":59219,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59224,"byte_end":59288,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59293,"byte_end":59351,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59356,"byte_end":59424,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59429,"byte_end":59459,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62763,"byte_end":62776,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59559,"byte_end":59633,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59638,"byte_end":59686,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59691,"byte_end":59694,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59699,"byte_end":59770,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59775,"byte_end":59851,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59856,"byte_end":59932,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59937,"byte_end":60012,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60017,"byte_end":60088,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60093,"byte_end":60169,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60174,"byte_end":60202,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60207,"byte_end":60210,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60215,"byte_end":60276,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60281,"byte_end":60352,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60357,"byte_end":60429,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60434,"byte_end":60509,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60514,"byte_end":60587,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60592,"byte_end":60667,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60672,"byte_end":60744,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60749,"byte_end":60760,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60765,"byte_end":60768,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60773,"byte_end":60847,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60852,"byte_end":60924,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60929,"byte_end":60998,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61003,"byte_end":61071,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61076,"byte_end":61137,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61142,"byte_end":61145,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61150,"byte_end":61168,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61173,"byte_end":61176,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61181,"byte_end":61251,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61256,"byte_end":61259,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61264,"byte_end":61327,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61332,"byte_end":61401,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61406,"byte_end":61481,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61486,"byte_end":61559,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61564,"byte_end":61615,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61620,"byte_end":61623,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61628,"byte_end":61698,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61703,"byte_end":61778,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61783,"byte_end":61855,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61860,"byte_end":61930,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61935,"byte_end":62010,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62015,"byte_end":62018,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62023,"byte_end":62104,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62109,"byte_end":62184,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62189,"byte_end":62256,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62261,"byte_end":62264,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62269,"byte_end":62281,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62286,"byte_end":62289,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62294,"byte_end":62365,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62370,"byte_end":62436,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62441,"byte_end":62515,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62520,"byte_end":62584,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62589,"byte_end":62628,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62633,"byte_end":62636,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62641,"byte_end":62653,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62658,"byte_end":62661,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62666,"byte_end":62741,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62746,"byte_end":62755,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63889,"byte_end":63908,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62858,"byte_end":62929,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62934,"byte_end":62937,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62942,"byte_end":63009,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63014,"byte_end":63084,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63089,"byte_end":63159,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63164,"byte_end":63167,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63172,"byte_end":63254,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63259,"byte_end":63311,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63316,"byte_end":63319,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63324,"byte_end":63385,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63390,"byte_end":63393,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63398,"byte_end":63460,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63465,"byte_end":63523,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63528,"byte_end":63595,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63600,"byte_end":63626,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63631,"byte_end":63634,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63639,"byte_end":63649,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63654,"byte_end":63657,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63662,"byte_end":63734,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63739,"byte_end":63809,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63814,"byte_end":63826,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63831,"byte_end":63834,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63839,"byte_end":63881,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64676,"byte_end":64693,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64206,"byte_end":64276,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64281,"byte_end":64300,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64305,"byte_end":64308,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64313,"byte_end":64382,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64387,"byte_end":64462,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64467,"byte_end":64535,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64540,"byte_end":64543,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64548,"byte_end":64595,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64600,"byte_end":64603,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64608,"byte_end":64668,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71933,"byte_end":71940,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70985,"byte_end":71065,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71066,"byte_end":71069,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71070,"byte_end":71144,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71145,"byte_end":71220,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71221,"byte_end":71299,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71300,"byte_end":71376,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71377,"byte_end":71454,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71455,"byte_end":71458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71459,"byte_end":71523,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71524,"byte_end":71527,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71528,"byte_end":71543,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71544,"byte_end":71585,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71586,"byte_end":71627,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71628,"byte_end":71669,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71670,"byte_end":71677,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71678,"byte_end":71681,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71682,"byte_end":71760,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71761,"byte_end":71839,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71840,"byte_end":71921,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72142,"byte_end":72145,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72056,"byte_end":72116,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72121,"byte_end":72130,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72591,"byte_end":72597,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72410,"byte_end":72472,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72477,"byte_end":72480,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72485,"byte_end":72565,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72570,"byte_end":72579,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72825,"byte_end":72833,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72754,"byte_end":72799,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72804,"byte_end":72813,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72979,"byte_end":72985,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72886,"byte_end":72953,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72958,"byte_end":72967,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73439,"byte_end":73449,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73345,"byte_end":73413,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73418,"byte_end":73427,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73927,"byte_end":73931,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73829,"byte_end":73901,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73906,"byte_end":73915,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74337,"byte_end":74348,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74189,"byte_end":74261,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74266,"byte_end":74269,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74274,"byte_end":74311,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74316,"byte_end":74325,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74860,"byte_end":74875,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74711,"byte_end":74784,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74789,"byte_end":74792,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74797,"byte_end":74834,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74839,"byte_end":74848,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76098,"byte_end":76107,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75258,"byte_end":75351,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75356,"byte_end":75372,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75377,"byte_end":75380,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75385,"byte_end":75473,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75478,"byte_end":75569,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75574,"byte_end":75577,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75582,"byte_end":75677,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75682,"byte_end":75766,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75771,"byte_end":75847,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75852,"byte_end":75855,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75860,"byte_end":75872,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75877,"byte_end":75880,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75885,"byte_end":75981,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75986,"byte_end":76065,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76070,"byte_end":76079,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76553,"byte_end":76565,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76175,"byte_end":76281,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76286,"byte_end":76302,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76307,"byte_end":76310,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76315,"byte_end":76327,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76332,"byte_end":76335,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76340,"byte_end":76436,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76441,"byte_end":76520,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76525,"byte_end":76534,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76927,"byte_end":76946,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76653,"byte_end":76754,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76759,"byte_end":76762,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76767,"byte_end":76878,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76883,"byte_end":76901,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76906,"byte_end":76915,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77284,"byte_end":77306,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77038,"byte_end":77143,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77148,"byte_end":77170,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77175,"byte_end":77178,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77183,"byte_end":77195,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77200,"byte_end":77203,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77208,"byte_end":77258,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77263,"byte_end":77272,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78151,"byte_end":78160,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78039,"byte_end":78125,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78130,"byte_end":78139,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78427,"byte_end":78432,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78228,"byte_end":78288,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78293,"byte_end":78296,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78301,"byte_end":78401,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78406,"byte_end":78415,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78761,"byte_end":78768,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78482,"byte_end":78539,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78544,"byte_end":78547,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78552,"byte_end":78603,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78608,"byte_end":78611,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78616,"byte_end":78628,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78633,"byte_end":78636,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78641,"byte_end":78735,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78740,"byte_end":78749,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79378,"byte_end":79388,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78905,"byte_end":78958,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78963,"byte_end":78966,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78971,"byte_end":79022,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79027,"byte_end":79030,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79035,"byte_end":79140,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79145,"byte_end":79221,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79226,"byte_end":79229,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79234,"byte_end":79246,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79251,"byte_end":79254,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79259,"byte_end":79352,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79357,"byte_end":79366,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79992,"byte_end":80003,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79572,"byte_end":79648,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79653,"byte_end":79656,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79661,"byte_end":79770,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79775,"byte_end":79826,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79831,"byte_end":79834,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79839,"byte_end":79851,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79856,"byte_end":79859,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79864,"byte_end":79959,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79964,"byte_end":79973,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80383,"byte_end":80392,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80155,"byte_end":80261,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80266,"byte_end":80269,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80274,"byte_end":80286,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80291,"byte_end":80294,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80299,"byte_end":80357,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80362,"byte_end":80371,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096731,"byte_end":10096739,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096487,"byte_end":10096515,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096516,"byte_end":10096519,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096520,"byte_end":10096599,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096600,"byte_end":10096634,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096891,"byte_end":10096899,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096777,"byte_end":10096813,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096818,"byte_end":10096821,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096826,"byte_end":10096876,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097066,"byte_end":10097074,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":1368},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096952,"byte_end":10096987,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096992,"byte_end":10096995,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097000,"byte_end":10097051,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097510,"byte_end":10097521,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097127,"byte_end":10097184,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097189,"byte_end":10097192,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097197,"byte_end":10097211,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097216,"byte_end":10097219,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097224,"byte_end":10097231,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097236,"byte_end":10097264,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097269,"byte_end":10097272,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097277,"byte_end":10097323,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097328,"byte_end":10097375,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097380,"byte_end":10097383,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097388,"byte_end":10097443,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097448,"byte_end":10097480,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097485,"byte_end":10097492,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097961,"byte_end":10097972,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097578,"byte_end":10097635,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097640,"byte_end":10097643,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097648,"byte_end":10097662,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097667,"byte_end":10097670,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097675,"byte_end":10097682,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097687,"byte_end":10097715,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097720,"byte_end":10097723,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097728,"byte_end":10097775,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097780,"byte_end":10097826,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097831,"byte_end":10097834,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097839,"byte_end":10097894,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097899,"byte_end":10097931,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10097936,"byte_end":10097943,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098390,"byte_end":10098393,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098029,"byte_end":10098067,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098072,"byte_end":10098075,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098080,"byte_end":10098127,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098132,"byte_end":10098135,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098140,"byte_end":10098154,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098159,"byte_end":10098162,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098167,"byte_end":10098174,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098179,"byte_end":10098207,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098212,"byte_end":10098215,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098220,"byte_end":10098290,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098295,"byte_end":10098298,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098303,"byte_end":10098335,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098340,"byte_end":10098372,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099771,"byte_end":10099776,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099536,"byte_end":10099590,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099591,"byte_end":10099594,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099595,"byte_end":10099666,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099852,"byte_end":10099857,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099803,"byte_end":10099837,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099951,"byte_end":10099959,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099882,"byte_end":10099936,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100060,"byte_end":10100068,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099991,"byte_end":10100045,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100172,"byte_end":10100183,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100100,"byte_end":10100157,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100291,"byte_end":10100303,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100218,"byte_end":10100276,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100418,"byte_end":10100421,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10100339,"byte_end":10100403,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101278,"byte_end":10101286,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101037,"byte_end":10101081,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101086,"byte_end":10101089,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101094,"byte_end":10101108,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101113,"byte_end":10101116,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101121,"byte_end":10101128,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101133,"byte_end":10101158,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101163,"byte_end":10101166,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101171,"byte_end":10101208,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101213,"byte_end":10101254,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101259,"byte_end":10101266,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101697,"byte_end":10101708,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101343,"byte_end":10101394,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101399,"byte_end":10101402,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101407,"byte_end":10101421,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101426,"byte_end":10101429,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101434,"byte_end":10101441,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101446,"byte_end":10101471,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101476,"byte_end":10101479,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101484,"byte_end":10101525,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101530,"byte_end":10101573,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101578,"byte_end":10101624,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101629,"byte_end":10101673,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101678,"byte_end":10101685,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102165,"byte_end":10102176,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101800,"byte_end":10101861,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101866,"byte_end":10101869,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101874,"byte_end":10101888,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101893,"byte_end":10101896,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101901,"byte_end":10101908,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101913,"byte_end":10101938,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101943,"byte_end":10101946,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101951,"byte_end":10101992,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10101997,"byte_end":10102041,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102046,"byte_end":10102089,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102094,"byte_end":10102141,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102146,"byte_end":10102153,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102597,"byte_end":10102611,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102269,"byte_end":10102333,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102338,"byte_end":10102341,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102346,"byte_end":10102360,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102365,"byte_end":10102368,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102373,"byte_end":10102380,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102385,"byte_end":10102410,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102415,"byte_end":10102418,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102423,"byte_end":10102467,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102472,"byte_end":10102519,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102524,"byte_end":10102573,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102578,"byte_end":10102585,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10103014,"byte_end":10103029,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102681,"byte_end":10102746,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102751,"byte_end":10102754,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102759,"byte_end":10102773,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102778,"byte_end":10102781,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102786,"byte_end":10102793,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102798,"byte_end":10102823,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102828,"byte_end":10102831,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102836,"byte_end":10102881,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102886,"byte_end":10102934,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102939,"byte_end":10102990,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10102995,"byte_end":10103002,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10149914,"byte_end":10149920,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1849}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10150999,"byte_end":10151005,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10153115,"byte_end":10153120,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1854}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10153777,"byte_end":10153782,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10155649,"byte_end":10155655,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1859}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10156723,"byte_end":10156729,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20499,"byte_end":20525,"line_start":120,"line_end":120,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10158386,"byte_end":10158394,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1971}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10158523,"byte_end":10158532,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1974}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10158846,"byte_end":10158851,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159477,"byte_end":10159487,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159374,"byte_end":10159449,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159454,"byte_end":10159465,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159894,"byte_end":10159901,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159570,"byte_end":10159619,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159624,"byte_end":10159627,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159632,"byte_end":10159644,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159649,"byte_end":10159652,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159657,"byte_end":10159731,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159736,"byte_end":10159786,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159791,"byte_end":10159855,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159860,"byte_end":10159882,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160402,"byte_end":10160412,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160300,"byte_end":10160374,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160379,"byte_end":10160390,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":11151},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10163281,"byte_end":10163285,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":11156}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10166573,"byte_end":10166588,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2763}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10169298,"byte_end":10169308,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10172199,"byte_end":10172208,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10173608,"byte_end":10173613,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10175453,"byte_end":10175458,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10177531,"byte_end":10177543,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10178663,"byte_end":10178668,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10181497,"byte_end":10181501,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10183804,"byte_end":10183812,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10185709,"byte_end":10185719,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10187156,"byte_end":10187163,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10188452,"byte_end":10188459,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10189790,"byte_end":10189798,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10191138,"byte_end":10191146,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10192427,"byte_end":10192435,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10193730,"byte_end":10193738,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10195101,"byte_end":10195109,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10196402,"byte_end":10196410,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10197870,"byte_end":10197879,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10199273,"byte_end":10199282,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10200629,"byte_end":10200640,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10202001,"byte_end":10202012,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10203313,"byte_end":10203324,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10204636,"byte_end":10204647,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10206028,"byte_end":10206039,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10207333,"byte_end":10207344,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10208822,"byte_end":10208834,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10210228,"byte_end":10210240,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10211899,"byte_end":10211910,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10213465,"byte_end":10213479,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10214771,"byte_end":10214775,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10215863,"byte_end":10215875,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2817}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10216871,"byte_end":10216875,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10218999,"byte_end":10219012,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2827},{"krate":0,"index":2828}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10220854,"byte_end":10220859,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10223666,"byte_end":10223675,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10225017,"byte_end":10225026,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10226426,"byte_end":10226434,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10227695,"byte_end":10227703,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10229018,"byte_end":10229027,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10230340,"byte_end":10230349,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10231689,"byte_end":10231698,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10233033,"byte_end":10233042,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10234419,"byte_end":10234428,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10235815,"byte_end":10235824,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10237279,"byte_end":10237289,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10238679,"byte_end":10238689,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10240021,"byte_end":10240033,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10241360,"byte_end":10241372,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10242726,"byte_end":10242738,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10244087,"byte_end":10244099,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10245490,"byte_end":10245502,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10246903,"byte_end":10246915,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10248382,"byte_end":10248395,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10249797,"byte_end":10249810,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10250830,"byte_end":10250835,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10252125,"byte_end":10252133,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253494,"byte_end":10253503,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":11101},{"krate":0,"index":11102},{"krate":0,"index":11103},{"krate":0,"index":11104}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253839,"byte_end":10253842,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253697,"byte_end":10253789,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253794,"byte_end":10253827,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254004,"byte_end":10254017,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253927,"byte_end":10253992,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254371,"byte_end":10254378,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254234,"byte_end":10254280,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254285,"byte_end":10254288,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254293,"byte_end":10254359,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254570,"byte_end":10254577,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254425,"byte_end":10254479,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254484,"byte_end":10254487,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254492,"byte_end":10254558,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254788,"byte_end":10254799,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254636,"byte_end":10254697,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254702,"byte_end":10254705,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254710,"byte_end":10254776,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255030,"byte_end":10255040,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254879,"byte_end":10254942,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254947,"byte_end":10254950,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10254955,"byte_end":10255018,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255244,"byte_end":10255250,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255084,"byte_end":10255140,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255145,"byte_end":10255148,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255153,"byte_end":10255232,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":11068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259189,"byte_end":10259198,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":11070}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259477,"byte_end":10259480,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259323,"byte_end":10259380,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259385,"byte_end":10259388,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259393,"byte_end":10259465,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259812,"byte_end":10259825,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259612,"byte_end":10259697,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259702,"byte_end":10259715,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259720,"byte_end":10259723,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259728,"byte_end":10259800,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260282,"byte_end":10260289,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260137,"byte_end":10260187,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260192,"byte_end":10260195,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260200,"byte_end":10260270,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260509,"byte_end":10260516,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260356,"byte_end":10260414,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260419,"byte_end":10260422,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260427,"byte_end":10260497,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260751,"byte_end":10260762,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260591,"byte_end":10260656,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260661,"byte_end":10260664,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260669,"byte_end":10260739,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10261026,"byte_end":10261036,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260871,"byte_end":10260938,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260943,"byte_end":10260946,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10260951,"byte_end":10261014,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11022},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264613,"byte_end":10264622,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":11024},{"krate":0,"index":11025},{"krate":0,"index":11026}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264930,"byte_end":10264933,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264788,"byte_end":10264880,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264885,"byte_end":10264918,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10265095,"byte_end":10265108,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10265018,"byte_end":10265083,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266190,"byte_end":10266197,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266132,"byte_end":10266178,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266388,"byte_end":10266395,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266244,"byte_end":10266298,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266303,"byte_end":10266306,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266311,"byte_end":10266376,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266605,"byte_end":10266616,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266454,"byte_end":10266515,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266520,"byte_end":10266523,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266528,"byte_end":10266593,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266847,"byte_end":10266857,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266696,"byte_end":10266759,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266764,"byte_end":10266767,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266772,"byte_end":10266835,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266969,"byte_end":10266975,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10266901,"byte_end":10266957,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269389,"byte_end":10269394,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10976},{"krate":0,"index":10977},{"krate":0,"index":10978}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269835,"byte_end":10269842,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269761,"byte_end":10269823,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270174,"byte_end":10270181,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269911,"byte_end":10269981,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269986,"byte_end":10269989,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269994,"byte_end":10270067,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270072,"byte_end":10270145,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270150,"byte_end":10270162,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270540,"byte_end":10270551,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270270,"byte_end":10270347,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270352,"byte_end":10270355,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270360,"byte_end":10270433,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270438,"byte_end":10270511,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270516,"byte_end":10270528,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270748,"byte_end":10270758,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270680,"byte_end":10270736,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10274151,"byte_end":10274155,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10277960,"byte_end":10277968,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10279777,"byte_end":10279782,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2906}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280461,"byte_end":10280466,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10931},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10281707,"byte_end":10281712,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10934},{"krate":0,"index":10935}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10881},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283146,"byte_end":10283151,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10883},{"krate":0,"index":10884},{"krate":0,"index":10885},{"krate":0,"index":10886}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283998,"byte_end":10284007,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283508,"byte_end":10283548,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283553,"byte_end":10283556,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283561,"byte_end":10283575,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283580,"byte_end":10283583,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283588,"byte_end":10283595,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283600,"byte_end":10283634,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283639,"byte_end":10283674,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283679,"byte_end":10283682,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283687,"byte_end":10283770,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283775,"byte_end":10283815,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283820,"byte_end":10283823,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283828,"byte_end":10283881,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283886,"byte_end":10283929,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283934,"byte_end":10283939,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283944,"byte_end":10283956,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283961,"byte_end":10283968,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283973,"byte_end":10283980,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284234,"byte_end":10284241,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284167,"byte_end":10284222,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284360,"byte_end":10284367,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284301,"byte_end":10284348,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284654,"byte_end":10284664,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284419,"byte_end":10284480,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284485,"byte_end":10284488,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284493,"byte_end":10284556,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284561,"byte_end":10284642,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285550,"byte_end":10285564,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284757,"byte_end":10284799,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284804,"byte_end":10284807,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284812,"byte_end":10284836,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284841,"byte_end":10284844,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284849,"byte_end":10284910,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284915,"byte_end":10284982,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284987,"byte_end":10285060,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285065,"byte_end":10285148,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285153,"byte_end":10285156,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285161,"byte_end":10285233,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285238,"byte_end":10285307,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285312,"byte_end":10285356,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285361,"byte_end":10285364,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285369,"byte_end":10285443,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285448,"byte_end":10285522,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10285527,"byte_end":10285538,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287292,"byte_end":10287304,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2910}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286504,"byte_end":10286563,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286564,"byte_end":10286567,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286568,"byte_end":10286647,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286648,"byte_end":10286724,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286725,"byte_end":10286787,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286788,"byte_end":10286791,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286792,"byte_end":10286805,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286806,"byte_end":10286809,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286810,"byte_end":10286817,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286818,"byte_end":10286862,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286863,"byte_end":10286914,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286915,"byte_end":10286972,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286973,"byte_end":10286976,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10286977,"byte_end":10287014,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287015,"byte_end":10287018,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287019,"byte_end":10287046,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287047,"byte_end":10287086,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287087,"byte_end":10287117,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287118,"byte_end":10287121,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287122,"byte_end":10287159,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287160,"byte_end":10287163,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287164,"byte_end":10287203,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287204,"byte_end":10287234,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287235,"byte_end":10287247,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287248,"byte_end":10287255,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10287256,"byte_end":10287263,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288601,"byte_end":10288607,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288367,"byte_end":10288450,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288451,"byte_end":10288454,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288455,"byte_end":10288529,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288530,"byte_end":10288593,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10830},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10293663,"byte_end":10293667,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10770},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10294884,"byte_end":10294891,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10297096,"byte_end":10297105,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10718},{"krate":0,"index":10719},{"krate":0,"index":10720}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10671},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302129,"byte_end":10302135,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10673},{"krate":0,"index":10674}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10634},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302151,"byte_end":10302157,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10636},{"krate":0,"index":10637}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10585},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302173,"byte_end":10302180,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10587},{"krate":0,"index":10588},{"krate":0,"index":10590},{"krate":0,"index":10591}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10536},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302205,"byte_end":10302212,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10538},{"krate":0,"index":10539},{"krate":0,"index":10541},{"krate":0,"index":10542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10487},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302237,"byte_end":10302244,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10492},{"krate":0,"index":10493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10438},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302269,"byte_end":10302277,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10440},{"krate":0,"index":10441},{"krate":0,"index":10443},{"krate":0,"index":10444}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10389},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302305,"byte_end":10302312,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10391},{"krate":0,"index":10392},{"krate":0,"index":10394},{"krate":0,"index":10395}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10340},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302337,"byte_end":10302344,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10342},{"krate":0,"index":10343},{"krate":0,"index":10345},{"krate":0,"index":10346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10291},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302369,"byte_end":10302376,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10296},{"krate":0,"index":10297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10242},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302401,"byte_end":10302409,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10247},{"krate":0,"index":10248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10193},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302437,"byte_end":10302446,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":10195},{"krate":0,"index":10196},{"krate":0,"index":10198},{"krate":0,"index":10199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302474,"byte_end":10302483,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":10146},{"krate":0,"index":10147},{"krate":0,"index":10149},{"krate":0,"index":10150}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10095},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302511,"byte_end":10302520,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10100},{"krate":0,"index":10101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10046},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302548,"byte_end":10302558,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":10048},{"krate":0,"index":10049},{"krate":0,"index":10051},{"krate":0,"index":10052}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9997},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302589,"byte_end":10302598,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9999},{"krate":0,"index":10000},{"krate":0,"index":10002},{"krate":0,"index":10003}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9948},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302626,"byte_end":10302635,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9950},{"krate":0,"index":9951},{"krate":0,"index":9953},{"krate":0,"index":9954}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9899},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302663,"byte_end":10302672,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9901},{"krate":0,"index":9902},{"krate":0,"index":9904},{"krate":0,"index":9905}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9850},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":10302700,"byte_end":10302710,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9852},{"krate":0,"index":9853},{"krate":0,"index":9855},{"krate":0,"index":9856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9796},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10303227,"byte_end":10303235,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9799},{"krate":0,"index":9800},{"krate":0,"index":9801},{"krate":0,"index":9802},{"krate":0,"index":9803}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9739},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10307191,"byte_end":10307200,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9742},{"krate":0,"index":9743},{"krate":0,"index":9744},{"krate":0,"index":9745}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9678},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10315520,"byte_end":10315532,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9681},{"krate":0,"index":9682},{"krate":0,"index":9683},{"krate":0,"index":9684},{"krate":0,"index":9685}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9617},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10317942,"byte_end":10317951,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9620},{"krate":0,"index":9621},{"krate":0,"index":9622},{"krate":0,"index":9623},{"krate":0,"index":9624}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10320293,"byte_end":10320299,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3075}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10320985,"byte_end":10320991,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9568},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10322030,"byte_end":10322038,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9571},{"krate":0,"index":9572}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10323184,"byte_end":10323188,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3079}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10324029,"byte_end":10324033,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9518},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325470,"byte_end":10325475,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521},{"krate":0,"index":9522},{"krate":0,"index":9523}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326336,"byte_end":10326348,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325824,"byte_end":10325867,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325872,"byte_end":10325875,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325880,"byte_end":10325894,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325899,"byte_end":10325902,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325907,"byte_end":10325914,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325919,"byte_end":10325953,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325958,"byte_end":10325993,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325998,"byte_end":10326001,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326006,"byte_end":10326089,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326094,"byte_end":10326141,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326146,"byte_end":10326149,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326154,"byte_end":10326216,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326221,"byte_end":10326267,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326272,"byte_end":10326277,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326282,"byte_end":10326294,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326299,"byte_end":10326306,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326311,"byte_end":10326318,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327385,"byte_end":10327402,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326560,"byte_end":10326605,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326610,"byte_end":10326613,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326618,"byte_end":10326642,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326647,"byte_end":10326650,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326655,"byte_end":10326719,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326724,"byte_end":10326797,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326802,"byte_end":10326878,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326883,"byte_end":10326955,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326960,"byte_end":10326980,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326985,"byte_end":10326988,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326993,"byte_end":10327065,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327070,"byte_end":10327139,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327144,"byte_end":10327188,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327193,"byte_end":10327196,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327201,"byte_end":10327273,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327278,"byte_end":10327347,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10327352,"byte_end":10327373,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9478},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328559,"byte_end":10328563,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9480},{"krate":0,"index":9481}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329153,"byte_end":10329158,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328850,"byte_end":10328903,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328908,"byte_end":10328954,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328959,"byte_end":10328962,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328967,"byte_end":10328977,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328982,"byte_end":10328985,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328990,"byte_end":10329067,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329072,"byte_end":10329141,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329477,"byte_end":10329486,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329206,"byte_end":10329277,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329282,"byte_end":10329356,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329361,"byte_end":10329436,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329441,"byte_end":10329465,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329609,"byte_end":10329616,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329551,"byte_end":10329597,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329908,"byte_end":10329915,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329663,"byte_end":10329717,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329722,"byte_end":10329725,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329730,"byte_end":10329803,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329808,"byte_end":10329880,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329885,"byte_end":10329896,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330226,"byte_end":10330237,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10329974,"byte_end":10330035,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330040,"byte_end":10330043,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330048,"byte_end":10330121,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330126,"byte_end":10330198,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330203,"byte_end":10330214,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330383,"byte_end":10330393,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330317,"byte_end":10330371,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9427},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10332377,"byte_end":10332382,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":9430},{"krate":0,"index":9431},{"krate":0,"index":9432}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9374},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10333520,"byte_end":10333528,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":9377},{"krate":0,"index":9378},{"krate":0,"index":9379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9314},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10334969,"byte_end":10334977,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":9318},{"krate":0,"index":9319},{"krate":0,"index":9320}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9264},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339738,"byte_end":10339745,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9223},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339761,"byte_end":10339768,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9174},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339784,"byte_end":10339792,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":9176},{"krate":0,"index":9177},{"krate":0,"index":9179},{"krate":0,"index":9180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339817,"byte_end":10339825,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":9127},{"krate":0,"index":9128},{"krate":0,"index":9130},{"krate":0,"index":9131}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9076},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339850,"byte_end":10339858,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9081},{"krate":0,"index":9082}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9027},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339883,"byte_end":10339892,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9032},{"krate":0,"index":9033}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8978},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339920,"byte_end":10339928,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8980},{"krate":0,"index":8981},{"krate":0,"index":8983},{"krate":0,"index":8984}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8929},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339953,"byte_end":10339961,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8931},{"krate":0,"index":8932},{"krate":0,"index":8934},{"krate":0,"index":8935}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8880},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10339986,"byte_end":10339994,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8882},{"krate":0,"index":8883},{"krate":0,"index":8885},{"krate":0,"index":8886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8831},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340019,"byte_end":10340028,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8833},{"krate":0,"index":8834},{"krate":0,"index":8836},{"krate":0,"index":8837}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8782},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340056,"byte_end":10340066,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8784},{"krate":0,"index":8785},{"krate":0,"index":8787},{"krate":0,"index":8788}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8733},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340094,"byte_end":10340104,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8735},{"krate":0,"index":8736},{"krate":0,"index":8738},{"krate":0,"index":8739}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8684},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340132,"byte_end":10340142,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8686},{"krate":0,"index":8687},{"krate":0,"index":8689},{"krate":0,"index":8690}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8635},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340170,"byte_end":10340181,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8637},{"krate":0,"index":8638},{"krate":0,"index":8640},{"krate":0,"index":8641}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8586},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340212,"byte_end":10340222,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8588},{"krate":0,"index":8589},{"krate":0,"index":8591},{"krate":0,"index":8592}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8537},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340250,"byte_end":10340260,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8539},{"krate":0,"index":8540},{"krate":0,"index":8542},{"krate":0,"index":8543}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8488},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340288,"byte_end":10340298,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8493},{"krate":0,"index":8494}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8439},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":10340326,"byte_end":10340337,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8444},{"krate":0,"index":8445}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3681}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81310,"byte_end":81328,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81330,"byte_end":81368,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81369,"byte_end":81372,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81373,"byte_end":81456,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81457,"byte_end":81522,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81523,"byte_end":81526,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81527,"byte_end":81545,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81546,"byte_end":81549,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81550,"byte_end":81638,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81639,"byte_end":81708,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81709,"byte_end":81797,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81798,"byte_end":81856,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81857,"byte_end":81920,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81921,"byte_end":81986,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81988,"byte_end":81991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81992,"byte_end":82024,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82025,"byte_end":82053,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82054,"byte_end":82082,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82083,"byte_end":82117,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82118,"byte_end":82148,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82149,"byte_end":82183,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83405,"byte_end":83418,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82817,"byte_end":82894,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82895,"byte_end":82898,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82899,"byte_end":82908,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82909,"byte_end":82912,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82913,"byte_end":82990,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82991,"byte_end":82994,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82995,"byte_end":83008,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83009,"byte_end":83012,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83013,"byte_end":83090,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83091,"byte_end":83163,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83164,"byte_end":83233,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83234,"byte_end":83237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83238,"byte_end":83317,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83318,"byte_end":83394,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89858,"byte_end":89875,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89891,"byte_end":89895,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89956,"byte_end":89962,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90034,"byte_end":90049,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90160,"byte_end":90168,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90105,"byte_end":90144,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90410,"byte_end":90420,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90710,"byte_end":90713,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90757,"byte_end":90761,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90686,"byte_end":90695,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3286}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\lookup_host.rs","byte_start":10341210,"byte_end":10341221,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":3294},{"krate":0,"index":3338},{"krate":0,"index":3373},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":12842},{"krate":0,"index":3458},{"krate":0,"index":3569}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":10341374,"byte_end":10341395,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343249,"byte_end":10343260,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3693}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344759,"byte_end":10344763,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343343,"byte_end":10343419,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343424,"byte_end":10343427,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343432,"byte_end":10343493,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343498,"byte_end":10343501,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343506,"byte_end":10343581,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343586,"byte_end":10343662,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343667,"byte_end":10343678,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343683,"byte_end":10343686,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343691,"byte_end":10343766,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343771,"byte_end":10343847,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343852,"byte_end":10343925,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343930,"byte_end":10344003,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344008,"byte_end":10344060,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344065,"byte_end":10344068,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344073,"byte_end":10344136,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344141,"byte_end":10344144,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344149,"byte_end":10344222,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344227,"byte_end":10344236,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344241,"byte_end":10344244,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344249,"byte_end":10344303,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344308,"byte_end":10344355,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344360,"byte_end":10344363,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344368,"byte_end":10344382,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344387,"byte_end":10344390,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344395,"byte_end":10344408,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344413,"byte_end":10344445,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344450,"byte_end":10344453,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344458,"byte_end":10344474,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344479,"byte_end":10344482,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344487,"byte_end":10344505,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344510,"byte_end":10344549,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344554,"byte_end":10344620,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344625,"byte_end":10344628,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344633,"byte_end":10344660,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344665,"byte_end":10344668,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344673,"byte_end":10344700,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344705,"byte_end":10344719,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344724,"byte_end":10344729,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10344734,"byte_end":10344741,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346329,"byte_end":10346335,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345474,"byte_end":10345531,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345536,"byte_end":10345539,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345544,"byte_end":10345619,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345624,"byte_end":10345694,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345699,"byte_end":10345728,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345733,"byte_end":10345736,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345741,"byte_end":10345788,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345793,"byte_end":10345796,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345801,"byte_end":10345815,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345820,"byte_end":10345823,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345828,"byte_end":10345841,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345846,"byte_end":10345878,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345883,"byte_end":10345886,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345891,"byte_end":10345907,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345912,"byte_end":10345915,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345920,"byte_end":10345938,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345943,"byte_end":10345982,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10345987,"byte_end":10346053,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346058,"byte_end":10346061,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346066,"byte_end":10346105,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346110,"byte_end":10346180,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346185,"byte_end":10346248,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346253,"byte_end":10346262,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346267,"byte_end":10346270,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346275,"byte_end":10346289,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346294,"byte_end":10346299,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346304,"byte_end":10346311,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347003,"byte_end":10347014,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346625,"byte_end":10346688,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346693,"byte_end":10346696,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346701,"byte_end":10346777,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346782,"byte_end":10346856,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346861,"byte_end":10346937,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10346942,"byte_end":10346991,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349060,"byte_end":10349068,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347622,"byte_end":10347683,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347688,"byte_end":10347691,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347696,"byte_end":10347768,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347773,"byte_end":10347849,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347854,"byte_end":10347927,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347932,"byte_end":10347954,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347959,"byte_end":10347962,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10347967,"byte_end":10348041,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348046,"byte_end":10348122,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348127,"byte_end":10348192,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348197,"byte_end":10348252,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348257,"byte_end":10348260,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348265,"byte_end":10348268,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348273,"byte_end":10348287,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348292,"byte_end":10348295,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348300,"byte_end":10348318,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348323,"byte_end":10348349,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348354,"byte_end":10348386,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348391,"byte_end":10348394,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348399,"byte_end":10348417,"line_start":202,"line_end":202,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348422,"byte_end":10348473,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348478,"byte_end":10348549,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348554,"byte_end":10348598,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348603,"byte_end":10348663,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348668,"byte_end":10348682,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348687,"byte_end":10348692,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348697,"byte_end":10348704,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348709,"byte_end":10348712,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348717,"byte_end":10348729,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348734,"byte_end":10348737,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348742,"byte_end":10348802,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348807,"byte_end":10348810,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348815,"byte_end":10348885,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348890,"byte_end":10348963,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10348968,"byte_end":10349048,"line_start":217,"line_end":217,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350162,"byte_end":10350172,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349436,"byte_end":10349497,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349502,"byte_end":10349505,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349510,"byte_end":10349583,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349588,"byte_end":10349622,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349627,"byte_end":10349630,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349635,"byte_end":10349649,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349654,"byte_end":10349657,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349662,"byte_end":10349680,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349685,"byte_end":10349717,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349722,"byte_end":10349725,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349730,"byte_end":10349746,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349751,"byte_end":10349806,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349811,"byte_end":10349814,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349819,"byte_end":10349837,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349842,"byte_end":10349881,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349886,"byte_end":10349952,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349957,"byte_end":10349960,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10349965,"byte_end":10350007,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350012,"byte_end":10350101,"line_start":247,"line_end":247,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350106,"byte_end":10350109,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350114,"byte_end":10350128,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350133,"byte_end":10350138,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350143,"byte_end":10350150,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350865,"byte_end":10350868,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350248,"byte_end":10350306,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350311,"byte_end":10350314,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350319,"byte_end":10350379,"line_start":258,"line_end":258,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350384,"byte_end":10350387,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350392,"byte_end":10350429,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350434,"byte_end":10350437,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350442,"byte_end":10350456,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350461,"byte_end":10350464,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350469,"byte_end":10350482,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350487,"byte_end":10350519,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350524,"byte_end":10350527,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350532,"byte_end":10350548,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350553,"byte_end":10350556,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350561,"byte_end":10350579,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350584,"byte_end":10350623,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350628,"byte_end":10350690,"line_start":271,"line_end":271,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350695,"byte_end":10350698,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350703,"byte_end":10350760,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350765,"byte_end":10350805,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350810,"byte_end":10350813,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350818,"byte_end":10350831,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350836,"byte_end":10350841,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350846,"byte_end":10350853,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351497,"byte_end":10351504,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350930,"byte_end":10350988,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10350993,"byte_end":10350996,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351001,"byte_end":10351077,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351082,"byte_end":10351103,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351108,"byte_end":10351111,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351116,"byte_end":10351130,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351135,"byte_end":10351138,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351143,"byte_end":10351156,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351161,"byte_end":10351193,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351198,"byte_end":10351201,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351206,"byte_end":10351222,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351227,"byte_end":10351230,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351235,"byte_end":10351253,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351258,"byte_end":10351297,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351302,"byte_end":10351365,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351370,"byte_end":10351373,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351378,"byte_end":10351436,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351441,"byte_end":10351444,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351449,"byte_end":10351463,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351468,"byte_end":10351473,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351478,"byte_end":10351485,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355630,"byte_end":10355639,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3695}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356503,"byte_end":10356509,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355708,"byte_end":10355752,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355757,"byte_end":10355760,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355765,"byte_end":10355820,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355825,"byte_end":10355828,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355833,"byte_end":10355846,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355851,"byte_end":10355854,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355859,"byte_end":10355932,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355937,"byte_end":10355977,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355982,"byte_end":10355985,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355990,"byte_end":10356004,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356009,"byte_end":10356012,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356017,"byte_end":10356066,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356071,"byte_end":10356074,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356079,"byte_end":10356092,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356097,"byte_end":10356127,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356132,"byte_end":10356135,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356140,"byte_end":10356156,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356161,"byte_end":10356164,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356169,"byte_end":10356187,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356192,"byte_end":10356231,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356236,"byte_end":10356289,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356294,"byte_end":10356336,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356341,"byte_end":10356368,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356373,"byte_end":10356376,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356381,"byte_end":10356424,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356429,"byte_end":10356450,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356455,"byte_end":10356469,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356474,"byte_end":10356479,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356484,"byte_end":10356491,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357426,"byte_end":10357432,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356634,"byte_end":10356678,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356683,"byte_end":10356686,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356691,"byte_end":10356747,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356752,"byte_end":10356755,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356760,"byte_end":10356773,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356778,"byte_end":10356781,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356786,"byte_end":10356859,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356864,"byte_end":10356904,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356909,"byte_end":10356912,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356917,"byte_end":10356931,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356936,"byte_end":10356939,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356944,"byte_end":10356993,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10356998,"byte_end":10357001,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357006,"byte_end":10357019,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357024,"byte_end":10357054,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357059,"byte_end":10357062,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357067,"byte_end":10357083,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357088,"byte_end":10357091,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357096,"byte_end":10357114,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357119,"byte_end":10357158,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357163,"byte_end":10357212,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357217,"byte_end":10357259,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357264,"byte_end":10357291,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357296,"byte_end":10357299,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357304,"byte_end":10357347,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357352,"byte_end":10357373,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357378,"byte_end":10357392,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357397,"byte_end":10357402,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357407,"byte_end":10357414,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358247,"byte_end":10358260,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357557,"byte_end":10357607,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357612,"byte_end":10357615,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357620,"byte_end":10357685,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357690,"byte_end":10357725,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357730,"byte_end":10357733,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357738,"byte_end":10357752,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357757,"byte_end":10357760,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357765,"byte_end":10357778,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357783,"byte_end":10357813,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357818,"byte_end":10357821,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357826,"byte_end":10357842,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357847,"byte_end":10357850,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357855,"byte_end":10357873,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357878,"byte_end":10357917,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357922,"byte_end":10357975,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357980,"byte_end":10357983,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10357988,"byte_end":10358030,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358035,"byte_end":10358071,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358076,"byte_end":10358103,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358108,"byte_end":10358111,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358116,"byte_end":10358160,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358165,"byte_end":10358186,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358191,"byte_end":10358194,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358199,"byte_end":10358213,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358218,"byte_end":10358223,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358228,"byte_end":10358235,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358959,"byte_end":10358968,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358360,"byte_end":10358421,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358426,"byte_end":10358429,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358434,"byte_end":10358448,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358453,"byte_end":10358456,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358461,"byte_end":10358474,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358479,"byte_end":10358509,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358514,"byte_end":10358517,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358522,"byte_end":10358538,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358543,"byte_end":10358546,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358551,"byte_end":10358569,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358574,"byte_end":10358613,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358618,"byte_end":10358671,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358676,"byte_end":10358679,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358684,"byte_end":10358726,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358731,"byte_end":10358767,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358772,"byte_end":10358817,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358822,"byte_end":10358849,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358854,"byte_end":10358857,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358862,"byte_end":10358906,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358911,"byte_end":10358925,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358930,"byte_end":10358935,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10358940,"byte_end":10358947,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361294,"byte_end":10361314,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361142,"byte_end":10361198,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361203,"byte_end":10361206,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361211,"byte_end":10361282,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362637,"byte_end":10362653,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361410,"byte_end":10361470,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361475,"byte_end":10361478,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361483,"byte_end":10361557,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361562,"byte_end":10361573,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361578,"byte_end":10361581,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361586,"byte_end":10361658,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361663,"byte_end":10361737,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361742,"byte_end":10361810,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361815,"byte_end":10361837,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361842,"byte_end":10361845,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361850,"byte_end":10361925,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10361930,"byte_end":10362001,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362006,"byte_end":10362082,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362087,"byte_end":10362106,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362111,"byte_end":10362186,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362191,"byte_end":10362266,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362271,"byte_end":10362287,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362292,"byte_end":10362357,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362362,"byte_end":10362427,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362432,"byte_end":10362504,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362509,"byte_end":10362554,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362559,"byte_end":10362562,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362567,"byte_end":10362625,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362890,"byte_end":10362910,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362735,"byte_end":10362794,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362799,"byte_end":10362802,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10362807,"byte_end":10362878,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364239,"byte_end":10364255,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363006,"byte_end":10363069,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363074,"byte_end":10363077,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363082,"byte_end":10363156,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363161,"byte_end":10363172,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363177,"byte_end":10363180,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363185,"byte_end":10363257,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363262,"byte_end":10363336,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363341,"byte_end":10363409,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363414,"byte_end":10363436,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363441,"byte_end":10363444,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363449,"byte_end":10363524,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363529,"byte_end":10363603,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363608,"byte_end":10363684,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363689,"byte_end":10363708,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363713,"byte_end":10363788,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363793,"byte_end":10363868,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363873,"byte_end":10363889,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363894,"byte_end":10363959,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10363964,"byte_end":10364029,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364034,"byte_end":10364106,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364111,"byte_end":10364156,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364161,"byte_end":10364164,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364169,"byte_end":10364227,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364963,"byte_end":10364973,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364337,"byte_end":10364378,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364383,"byte_end":10364386,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364391,"byte_end":10364440,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364445,"byte_end":10364448,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364453,"byte_end":10364467,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364472,"byte_end":10364475,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364480,"byte_end":10364493,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364498,"byte_end":10364528,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364533,"byte_end":10364536,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364541,"byte_end":10364557,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364562,"byte_end":10364565,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364570,"byte_end":10364588,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364593,"byte_end":10364632,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364637,"byte_end":10364690,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364695,"byte_end":10364698,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364703,"byte_end":10364745,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364750,"byte_end":10364777,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364782,"byte_end":10364861,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364866,"byte_end":10364910,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364915,"byte_end":10364929,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364934,"byte_end":10364939,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10364944,"byte_end":10364951,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365803,"byte_end":10365807,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365055,"byte_end":10365096,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365101,"byte_end":10365104,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365109,"byte_end":10365176,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365181,"byte_end":10365257,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365262,"byte_end":10365274,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365279,"byte_end":10365282,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365287,"byte_end":10365301,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365306,"byte_end":10365309,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365314,"byte_end":10365349,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365354,"byte_end":10365357,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365362,"byte_end":10365375,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365380,"byte_end":10365410,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365415,"byte_end":10365418,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365423,"byte_end":10365439,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365444,"byte_end":10365447,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365452,"byte_end":10365470,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365475,"byte_end":10365514,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365519,"byte_end":10365572,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365577,"byte_end":10365580,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365585,"byte_end":10365627,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365632,"byte_end":10365659,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365664,"byte_end":10365667,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365672,"byte_end":10365716,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365721,"byte_end":10365742,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365747,"byte_end":10365750,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365755,"byte_end":10365769,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365774,"byte_end":10365779,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365784,"byte_end":10365791,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366875,"byte_end":10366882,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365894,"byte_end":10365969,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365974,"byte_end":10365977,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10365982,"byte_end":10366052,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366057,"byte_end":10366126,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366131,"byte_end":10366165,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366170,"byte_end":10366173,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366178,"byte_end":10366206,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366211,"byte_end":10366214,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366219,"byte_end":10366289,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366294,"byte_end":10366370,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366375,"byte_end":10366387,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366392,"byte_end":10366395,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366400,"byte_end":10366414,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366419,"byte_end":10366422,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366427,"byte_end":10366452,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366457,"byte_end":10366460,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366465,"byte_end":10366478,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366483,"byte_end":10366513,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366518,"byte_end":10366521,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366526,"byte_end":10366542,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366547,"byte_end":10366550,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366555,"byte_end":10366573,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366578,"byte_end":10366617,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366622,"byte_end":10366675,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366680,"byte_end":10366683,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366688,"byte_end":10366730,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366735,"byte_end":10366784,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366789,"byte_end":10366808,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366813,"byte_end":10366816,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366821,"byte_end":10366835,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366840,"byte_end":10366845,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10366850,"byte_end":10366857,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368180,"byte_end":10368186,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367032,"byte_end":10367076,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367081,"byte_end":10367084,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367089,"byte_end":10367163,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367168,"byte_end":10367242,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367247,"byte_end":10367318,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367323,"byte_end":10367378,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367383,"byte_end":10367386,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367391,"byte_end":10367439,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367444,"byte_end":10367447,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367452,"byte_end":10367528,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367533,"byte_end":10367608,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367613,"byte_end":10367659,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367664,"byte_end":10367667,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367672,"byte_end":10367686,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367691,"byte_end":10367694,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367699,"byte_end":10367726,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367731,"byte_end":10367734,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367739,"byte_end":10367752,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367757,"byte_end":10367787,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367792,"byte_end":10367795,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367800,"byte_end":10367816,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367821,"byte_end":10367824,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367829,"byte_end":10367847,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367852,"byte_end":10367891,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367896,"byte_end":10367949,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367954,"byte_end":10367957,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10367962,"byte_end":10368004,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368009,"byte_end":10368036,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368041,"byte_end":10368044,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368049,"byte_end":10368093,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368098,"byte_end":10368119,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368124,"byte_end":10368127,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368132,"byte_end":10368146,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368151,"byte_end":10368156,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368161,"byte_end":10368168,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370532,"byte_end":10370540,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370199,"byte_end":10370263,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370264,"byte_end":10370267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370268,"byte_end":10370356,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370357,"byte_end":10370384,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370385,"byte_end":10370388,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370389,"byte_end":10370417,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370418,"byte_end":10370451,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370452,"byte_end":10370503,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371154,"byte_end":10371163,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370562,"byte_end":10370627,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370628,"byte_end":10370631,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370632,"byte_end":10370718,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370719,"byte_end":10370771,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370772,"byte_end":10370775,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370776,"byte_end":10370857,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370858,"byte_end":10370893,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370894,"byte_end":10370897,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370898,"byte_end":10370926,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370927,"byte_end":10370960,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10370961,"byte_end":10371008,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371009,"byte_end":10371071,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371072,"byte_end":10371125,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372479,"byte_end":10372488,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371337,"byte_end":10371411,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371416,"byte_end":10371489,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371494,"byte_end":10371508,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371513,"byte_end":10371516,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371521,"byte_end":10371592,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371597,"byte_end":10371671,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371676,"byte_end":10371700,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371705,"byte_end":10371708,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371713,"byte_end":10371786,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371791,"byte_end":10371794,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371799,"byte_end":10371813,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371818,"byte_end":10371821,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371826,"byte_end":10371839,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371844,"byte_end":10371879,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371884,"byte_end":10371914,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371919,"byte_end":10371922,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371927,"byte_end":10371960,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371965,"byte_end":10371968,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371973,"byte_end":10371991,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371996,"byte_end":10372035,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372040,"byte_end":10372109,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372114,"byte_end":10372162,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372167,"byte_end":10372197,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372202,"byte_end":10372247,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372252,"byte_end":10372255,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372260,"byte_end":10372282,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372287,"byte_end":10372332,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372337,"byte_end":10372355,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372360,"byte_end":10372363,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372368,"byte_end":10372382,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372387,"byte_end":10372392,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372397,"byte_end":10372404,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372409,"byte_end":10372412,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372417,"byte_end":10372467,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373948,"byte_end":10373952,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372650,"byte_end":10372720,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372725,"byte_end":10372794,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372799,"byte_end":10372838,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372843,"byte_end":10372846,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372851,"byte_end":10372919,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372924,"byte_end":10372927,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372932,"byte_end":10372972,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372977,"byte_end":10372980,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10372985,"byte_end":10372999,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373004,"byte_end":10373007,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373012,"byte_end":10373025,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373030,"byte_end":10373060,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373065,"byte_end":10373097,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373102,"byte_end":10373128,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373133,"byte_end":10373136,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373141,"byte_end":10373159,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373164,"byte_end":10373215,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373220,"byte_end":10373248,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373253,"byte_end":10373322,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373327,"byte_end":10373375,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373380,"byte_end":10373383,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373388,"byte_end":10373417,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373422,"byte_end":10373451,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373456,"byte_end":10373459,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373464,"byte_end":10373491,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373496,"byte_end":10373543,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373548,"byte_end":10373551,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373556,"byte_end":10373580,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373585,"byte_end":10373644,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373649,"byte_end":10373688,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373693,"byte_end":10373696,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373701,"byte_end":10373715,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373720,"byte_end":10373725,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373730,"byte_end":10373737,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373742,"byte_end":10373745,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373750,"byte_end":10373815,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373820,"byte_end":10373823,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373828,"byte_end":10373874,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10373879,"byte_end":10373930,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376482,"byte_end":10376495,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3711}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376131,"byte_end":10376197,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376198,"byte_end":10376201,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376202,"byte_end":10376289,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376290,"byte_end":10376324,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376325,"byte_end":10376328,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376329,"byte_end":10376357,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376358,"byte_end":10376401,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376402,"byte_end":10376453,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10377221,"byte_end":10377235,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376528,"byte_end":10376595,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376596,"byte_end":10376599,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376600,"byte_end":10376687,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376688,"byte_end":10376765,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376766,"byte_end":10376823,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376824,"byte_end":10376827,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376828,"byte_end":10376914,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376915,"byte_end":10376950,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376951,"byte_end":10376954,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376955,"byte_end":10376983,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10376984,"byte_end":10377027,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10377028,"byte_end":10377075,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10377076,"byte_end":10377138,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10377139,"byte_end":10377192,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378200,"byte_end":10378212,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378068,"byte_end":10378150,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378151,"byte_end":10378171,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378213,"byte_end":10378230,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378232,"byte_end":10378250,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378796,"byte_end":10378803,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378533,"byte_end":10378602,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378607,"byte_end":10378671,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378676,"byte_end":10378728,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378733,"byte_end":10378736,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378741,"byte_end":10378784,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380053,"byte_end":10380062,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378910,"byte_end":10378984,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378989,"byte_end":10379062,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379067,"byte_end":10379081,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379086,"byte_end":10379089,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379094,"byte_end":10379165,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379170,"byte_end":10379244,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379249,"byte_end":10379273,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379278,"byte_end":10379281,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379286,"byte_end":10379359,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379364,"byte_end":10379367,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379372,"byte_end":10379386,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379391,"byte_end":10379394,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379399,"byte_end":10379412,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379417,"byte_end":10379452,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379457,"byte_end":10379487,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379492,"byte_end":10379495,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379500,"byte_end":10379533,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379538,"byte_end":10379541,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379546,"byte_end":10379564,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379569,"byte_end":10379608,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379613,"byte_end":10379678,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379683,"byte_end":10379736,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379741,"byte_end":10379771,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379776,"byte_end":10379821,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379826,"byte_end":10379829,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379834,"byte_end":10379856,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379861,"byte_end":10379906,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379911,"byte_end":10379929,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379934,"byte_end":10379937,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379942,"byte_end":10379956,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379961,"byte_end":10379966,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379971,"byte_end":10379978,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379983,"byte_end":10379986,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10379991,"byte_end":10380041,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381527,"byte_end":10381531,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380228,"byte_end":10380298,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380303,"byte_end":10380372,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380377,"byte_end":10380416,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380421,"byte_end":10380424,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380429,"byte_end":10380497,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380502,"byte_end":10380505,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380510,"byte_end":10380550,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380555,"byte_end":10380558,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380563,"byte_end":10380577,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380582,"byte_end":10380585,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380590,"byte_end":10380603,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380608,"byte_end":10380638,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380643,"byte_end":10380675,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380680,"byte_end":10380706,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380711,"byte_end":10380714,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380719,"byte_end":10380737,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380742,"byte_end":10380793,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380798,"byte_end":10380826,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380831,"byte_end":10380896,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380901,"byte_end":10380954,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380959,"byte_end":10380962,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10380967,"byte_end":10380996,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381001,"byte_end":10381030,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381035,"byte_end":10381038,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381043,"byte_end":10381070,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381075,"byte_end":10381122,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381127,"byte_end":10381130,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381135,"byte_end":10381159,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381164,"byte_end":10381223,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381228,"byte_end":10381267,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381272,"byte_end":10381275,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381280,"byte_end":10381294,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381299,"byte_end":10381304,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381309,"byte_end":10381316,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381321,"byte_end":10381324,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381329,"byte_end":10381394,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381399,"byte_end":10381402,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381407,"byte_end":10381453,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381458,"byte_end":10381509,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382206,"byte_end":10382213,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381943,"byte_end":10382012,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382017,"byte_end":10382081,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382086,"byte_end":10382138,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382143,"byte_end":10382146,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382151,"byte_end":10382194,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382518,"byte_end":10382524,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382319,"byte_end":10382391,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382396,"byte_end":10382465,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382470,"byte_end":10382506,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386596,"byte_end":10386605,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3727}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10388126,"byte_end":10388133,"line_start":116,"line_end":116,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386684,"byte_end":10386728,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386733,"byte_end":10386736,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386741,"byte_end":10386815,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386820,"byte_end":10386890,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386895,"byte_end":10386968,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386973,"byte_end":10387045,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387050,"byte_end":10387121,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387126,"byte_end":10387180,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387185,"byte_end":10387188,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387193,"byte_end":10387269,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387274,"byte_end":10387283,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387288,"byte_end":10387291,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387296,"byte_end":10387350,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387355,"byte_end":10387402,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387407,"byte_end":10387410,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387415,"byte_end":10387429,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387434,"byte_end":10387437,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387442,"byte_end":10387455,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387460,"byte_end":10387490,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387495,"byte_end":10387528,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387533,"byte_end":10387559,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387564,"byte_end":10387567,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387572,"byte_end":10387590,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387595,"byte_end":10387646,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387651,"byte_end":10387679,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387684,"byte_end":10387753,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387758,"byte_end":10387761,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387766,"byte_end":10387793,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387798,"byte_end":10387847,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387852,"byte_end":10387855,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387860,"byte_end":10387874,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387879,"byte_end":10387884,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387889,"byte_end":10387896,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387901,"byte_end":10387904,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387909,"byte_end":10387980,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387985,"byte_end":10387988,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10387993,"byte_end":10388050,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10388055,"byte_end":10388108,"line_start":115,"line_end":115,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390857,"byte_end":10390865,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10389740,"byte_end":10389797,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10389802,"byte_end":10389805,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10389810,"byte_end":10389880,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10389885,"byte_end":10389961,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10389966,"byte_end":10390037,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390042,"byte_end":10390064,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390069,"byte_end":10390072,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390077,"byte_end":10390091,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390096,"byte_end":10390099,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390104,"byte_end":10390122,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390127,"byte_end":10390153,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390158,"byte_end":10390188,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390193,"byte_end":10390196,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390201,"byte_end":10390219,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390224,"byte_end":10390275,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390280,"byte_end":10390354,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390359,"byte_end":10390401,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390406,"byte_end":10390460,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390465,"byte_end":10390479,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390484,"byte_end":10390489,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390494,"byte_end":10390501,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390506,"byte_end":10390509,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390514,"byte_end":10390526,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390531,"byte_end":10390534,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390539,"byte_end":10390599,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390604,"byte_end":10390607,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390612,"byte_end":10390682,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390687,"byte_end":10390760,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10390765,"byte_end":10390845,"line_start":193,"line_end":193,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392507,"byte_end":10392515,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391058,"byte_end":10391126,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391131,"byte_end":10391134,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391139,"byte_end":10391223,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391228,"byte_end":10391294,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391299,"byte_end":10391302,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391307,"byte_end":10391321,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391326,"byte_end":10391329,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391334,"byte_end":10391341,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391346,"byte_end":10391372,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391377,"byte_end":10391399,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391404,"byte_end":10391436,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391441,"byte_end":10391473,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391478,"byte_end":10391513,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391518,"byte_end":10391521,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391526,"byte_end":10391544,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391549,"byte_end":10391600,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391605,"byte_end":10391638,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391643,"byte_end":10391710,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391715,"byte_end":10391756,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391761,"byte_end":10391854,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391859,"byte_end":10391916,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391921,"byte_end":10391932,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10391937,"byte_end":10391998,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392003,"byte_end":10392065,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392070,"byte_end":10392136,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392141,"byte_end":10392188,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392193,"byte_end":10392239,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392244,"byte_end":10392287,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392292,"byte_end":10392306,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392311,"byte_end":10392316,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392321,"byte_end":10392328,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392333,"byte_end":10392373,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392378,"byte_end":10392426,"line_start":232,"line_end":232,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10392431,"byte_end":10392495,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393425,"byte_end":10393435,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393026,"byte_end":10393085,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393090,"byte_end":10393093,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393098,"byte_end":10393112,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393117,"byte_end":10393120,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393125,"byte_end":10393138,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393143,"byte_end":10393173,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393178,"byte_end":10393181,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393186,"byte_end":10393250,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393255,"byte_end":10393316,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393321,"byte_end":10393324,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393329,"byte_end":10393372,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393377,"byte_end":10393389,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393394,"byte_end":10393401,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393406,"byte_end":10393413,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393914,"byte_end":10393923,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393511,"byte_end":10393575,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393580,"byte_end":10393583,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393588,"byte_end":10393602,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393607,"byte_end":10393610,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393615,"byte_end":10393628,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393633,"byte_end":10393663,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393668,"byte_end":10393671,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393676,"byte_end":10393740,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393745,"byte_end":10393806,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393811,"byte_end":10393814,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393819,"byte_end":10393861,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393866,"byte_end":10393878,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393883,"byte_end":10393890,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393895,"byte_end":10393902,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395414,"byte_end":10395423,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10393998,"byte_end":10394073,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394078,"byte_end":10394151,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394156,"byte_end":10394170,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394175,"byte_end":10394178,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394183,"byte_end":10394245,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394250,"byte_end":10394322,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394327,"byte_end":10394391,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394396,"byte_end":10394450,"line_start":295,"line_end":295,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394455,"byte_end":10394458,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394463,"byte_end":10394481,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394486,"byte_end":10394489,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394494,"byte_end":10394519,"line_start":299,"line_end":299,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394524,"byte_end":10394527,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394532,"byte_end":10394583,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394588,"byte_end":10394671,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394676,"byte_end":10394731,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394736,"byte_end":10394739,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394744,"byte_end":10394756,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394761,"byte_end":10394764,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394769,"byte_end":10394844,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394849,"byte_end":10394852,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394857,"byte_end":10394871,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394876,"byte_end":10394879,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394884,"byte_end":10394897,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394902,"byte_end":10394937,"line_start":312,"line_end":312,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394942,"byte_end":10394972,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394977,"byte_end":10394980,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10394985,"byte_end":10395018,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395023,"byte_end":10395026,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395031,"byte_end":10395049,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395054,"byte_end":10395093,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395098,"byte_end":10395163,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395168,"byte_end":10395198,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395203,"byte_end":10395248,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395253,"byte_end":10395256,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395261,"byte_end":10395283,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395288,"byte_end":10395330,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395335,"byte_end":10395353,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395358,"byte_end":10395361,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395366,"byte_end":10395380,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395385,"byte_end":10395390,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10395395,"byte_end":10395402,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398495,"byte_end":10398500,"line_start":416,"line_end":416,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396230,"byte_end":10396277,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396282,"byte_end":10396285,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396290,"byte_end":10396364,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396369,"byte_end":10396444,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396449,"byte_end":10396487,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396492,"byte_end":10396495,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396500,"byte_end":10396514,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396519,"byte_end":10396522,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396527,"byte_end":10396597,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396602,"byte_end":10396616,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396621,"byte_end":10396624,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396629,"byte_end":10396642,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396647,"byte_end":10396675,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396680,"byte_end":10396710,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396715,"byte_end":10396741,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396746,"byte_end":10396762,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396767,"byte_end":10396770,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396775,"byte_end":10396793,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396798,"byte_end":10396849,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396854,"byte_end":10396919,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396924,"byte_end":10396927,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396932,"byte_end":10396946,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10396951,"byte_end":10397036,"line_start":378,"line_end":378,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397041,"byte_end":10397044,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397049,"byte_end":10397085,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397090,"byte_end":10397135,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397140,"byte_end":10397214,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397219,"byte_end":10397281,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397286,"byte_end":10397336,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397341,"byte_end":10397371,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397376,"byte_end":10397437,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397442,"byte_end":10397463,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397468,"byte_end":10397544,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397549,"byte_end":10397582,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397587,"byte_end":10397608,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397613,"byte_end":10397644,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397649,"byte_end":10397694,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397699,"byte_end":10397720,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397725,"byte_end":10397742,"line_start":394,"line_end":394,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397747,"byte_end":10397750,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397755,"byte_end":10397768,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397773,"byte_end":10397776,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397781,"byte_end":10397817,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397822,"byte_end":10397897,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397902,"byte_end":10397964,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10397969,"byte_end":10398025,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398030,"byte_end":10398060,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398065,"byte_end":10398119,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398124,"byte_end":10398145,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398150,"byte_end":10398226,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398231,"byte_end":10398263,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398268,"byte_end":10398289,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398294,"byte_end":10398325,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398330,"byte_end":10398375,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398380,"byte_end":10398401,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398406,"byte_end":10398423,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398428,"byte_end":10398441,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398446,"byte_end":10398455,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398460,"byte_end":10398465,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398470,"byte_end":10398477,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400020,"byte_end":10400028,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398657,"byte_end":10398700,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398705,"byte_end":10398708,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398713,"byte_end":10398790,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398795,"byte_end":10398824,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398829,"byte_end":10398832,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398837,"byte_end":10398851,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398856,"byte_end":10398859,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398864,"byte_end":10398877,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398882,"byte_end":10398912,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398917,"byte_end":10398943,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398948,"byte_end":10398964,"line_start":431,"line_end":431,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398969,"byte_end":10398972,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10398977,"byte_end":10398995,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399000,"byte_end":10399051,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399056,"byte_end":10399084,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399089,"byte_end":10399154,"line_start":436,"line_end":436,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399159,"byte_end":10399162,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399167,"byte_end":10399203,"line_start":438,"line_end":438,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399208,"byte_end":10399211,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399216,"byte_end":10399230,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399235,"byte_end":10399284,"line_start":441,"line_end":441,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399289,"byte_end":10399326,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399331,"byte_end":10399334,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399339,"byte_end":10399409,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399414,"byte_end":10399472,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399477,"byte_end":10399522,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399527,"byte_end":10399553,"line_start":447,"line_end":447,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399558,"byte_end":10399594,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399599,"byte_end":10399625,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399630,"byte_end":10399647,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399652,"byte_end":10399724,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399729,"byte_end":10399758,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399763,"byte_end":10399780,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399785,"byte_end":10399812,"line_start":454,"line_end":454,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399817,"byte_end":10399858,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399863,"byte_end":10399880,"line_start":456,"line_end":456,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399885,"byte_end":10399898,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399903,"byte_end":10399912,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399917,"byte_end":10399920,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399925,"byte_end":10399961,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399966,"byte_end":10399980,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399985,"byte_end":10399990,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10399995,"byte_end":10400002,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401400,"byte_end":10401415,"line_start":498,"line_end":498,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400129,"byte_end":10400158,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400163,"byte_end":10400166,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400171,"byte_end":10400245,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400250,"byte_end":10400324,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400329,"byte_end":10400402,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400407,"byte_end":10400417,"line_start":474,"line_end":474,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400422,"byte_end":10400425,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400430,"byte_end":10400498,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400503,"byte_end":10400574,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400579,"byte_end":10400638,"line_start":478,"line_end":478,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400643,"byte_end":10400703,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400708,"byte_end":10400711,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400716,"byte_end":10400791,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400796,"byte_end":10400871,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400876,"byte_end":10400944,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400949,"byte_end":10400952,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400957,"byte_end":10400975,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400980,"byte_end":10400983,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10400988,"byte_end":10401013,"line_start":487,"line_end":487,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401018,"byte_end":10401021,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401026,"byte_end":10401091,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401096,"byte_end":10401163,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401168,"byte_end":10401223,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401228,"byte_end":10401231,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401236,"byte_end":10401248,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401253,"byte_end":10401256,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401261,"byte_end":10401336,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401341,"byte_end":10401344,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401349,"byte_end":10401388,"line_start":497,"line_end":497,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403751,"byte_end":10403759,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401548,"byte_end":10401624,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401629,"byte_end":10401654,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401659,"byte_end":10401662,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401667,"byte_end":10401743,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401748,"byte_end":10401816,"line_start":506,"line_end":506,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401821,"byte_end":10401895,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401900,"byte_end":10401955,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401960,"byte_end":10401963,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10401968,"byte_end":10402038,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402043,"byte_end":10402046,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402051,"byte_end":10402092,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402097,"byte_end":10402132,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402137,"byte_end":10402140,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402145,"byte_end":10402157,"line_start":515,"line_end":515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402162,"byte_end":10402165,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402170,"byte_end":10402241,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402246,"byte_end":10402322,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402327,"byte_end":10402401,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402406,"byte_end":10402455,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402460,"byte_end":10402463,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402468,"byte_end":10402482,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402487,"byte_end":10402490,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402495,"byte_end":10402508,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402513,"byte_end":10402543,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402548,"byte_end":10402574,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402579,"byte_end":10402595,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402600,"byte_end":10402603,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402608,"byte_end":10402626,"line_start":529,"line_end":529,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402631,"byte_end":10402682,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402687,"byte_end":10402715,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402720,"byte_end":10402785,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402790,"byte_end":10402793,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402798,"byte_end":10402812,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402817,"byte_end":10402866,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402871,"byte_end":10402908,"line_start":536,"line_end":536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402913,"byte_end":10402916,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402921,"byte_end":10402994,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10402999,"byte_end":10403045,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403050,"byte_end":10403086,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403091,"byte_end":10403094,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403099,"byte_end":10403169,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403174,"byte_end":10403232,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403237,"byte_end":10403282,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403287,"byte_end":10403318,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403323,"byte_end":10403349,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403354,"byte_end":10403403,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403408,"byte_end":10403425,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403430,"byte_end":10403502,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403507,"byte_end":10403536,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403541,"byte_end":10403558,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403563,"byte_end":10403590,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403595,"byte_end":10403636,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403641,"byte_end":10403658,"line_start":554,"line_end":554,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403663,"byte_end":10403676,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403681,"byte_end":10403690,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403695,"byte_end":10403698,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403703,"byte_end":10403717,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403722,"byte_end":10403727,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10403732,"byte_end":10403739,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10406343,"byte_end":10406355,"line_start":627,"line_end":627,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408234,"byte_end":10408242,"line_start":687,"line_end":687,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10406993,"byte_end":10407036,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407041,"byte_end":10407044,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407049,"byte_end":10407126,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407131,"byte_end":10407161,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407166,"byte_end":10407169,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407174,"byte_end":10407188,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407193,"byte_end":10407196,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407201,"byte_end":10407214,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407219,"byte_end":10407249,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407254,"byte_end":10407280,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407285,"byte_end":10407301,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407306,"byte_end":10407309,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407314,"byte_end":10407332,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407337,"byte_end":10407388,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407393,"byte_end":10407421,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407426,"byte_end":10407491,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407496,"byte_end":10407499,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407504,"byte_end":10407518,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407523,"byte_end":10407572,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407577,"byte_end":10407614,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407619,"byte_end":10407622,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407627,"byte_end":10407698,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407703,"byte_end":10407761,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407766,"byte_end":10407818,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407823,"byte_end":10407849,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407854,"byte_end":10407880,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407885,"byte_end":10407902,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407907,"byte_end":10407979,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10407984,"byte_end":10408013,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408018,"byte_end":10408035,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408040,"byte_end":10408067,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408072,"byte_end":10408113,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408118,"byte_end":10408135,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408140,"byte_end":10408153,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408158,"byte_end":10408167,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408172,"byte_end":10408175,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408180,"byte_end":10408194,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408199,"byte_end":10408204,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408209,"byte_end":10408216,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409603,"byte_end":10409619,"line_start":721,"line_end":721,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408343,"byte_end":10408373,"line_start":692,"line_end":692,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408378,"byte_end":10408381,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408386,"byte_end":10408460,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408465,"byte_end":10408539,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408544,"byte_end":10408617,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408622,"byte_end":10408632,"line_start":697,"line_end":697,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408637,"byte_end":10408640,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408645,"byte_end":10408720,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408725,"byte_end":10408793,"line_start":700,"line_end":700,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408798,"byte_end":10408870,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408875,"byte_end":10408906,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408911,"byte_end":10408914,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408919,"byte_end":10408994,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10408999,"byte_end":10409074,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409079,"byte_end":10409147,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409152,"byte_end":10409155,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409160,"byte_end":10409178,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409183,"byte_end":10409186,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409191,"byte_end":10409216,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409221,"byte_end":10409224,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409229,"byte_end":10409294,"line_start":712,"line_end":712,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409299,"byte_end":10409366,"line_start":713,"line_end":713,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409371,"byte_end":10409426,"line_start":714,"line_end":714,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409431,"byte_end":10409434,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409439,"byte_end":10409451,"line_start":716,"line_end":716,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409456,"byte_end":10409459,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409464,"byte_end":10409539,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409544,"byte_end":10409547,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409552,"byte_end":10409591,"line_start":720,"line_end":720,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411348,"byte_end":10411357,"line_start":773,"line_end":773,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409753,"byte_end":10409823,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409828,"byte_end":10409840,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409845,"byte_end":10409848,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409853,"byte_end":10409925,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409930,"byte_end":10409973,"line_start":729,"line_end":729,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409978,"byte_end":10409981,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10409986,"byte_end":10410040,"line_start":731,"line_end":731,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410045,"byte_end":10410048,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410053,"byte_end":10410065,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410070,"byte_end":10410073,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410078,"byte_end":10410152,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410157,"byte_end":10410227,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410232,"byte_end":10410281,"line_start":737,"line_end":737,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410286,"byte_end":10410289,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410294,"byte_end":10410308,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410313,"byte_end":10410316,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410321,"byte_end":10410334,"line_start":741,"line_end":741,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410339,"byte_end":10410369,"line_start":742,"line_end":742,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410374,"byte_end":10410400,"line_start":743,"line_end":743,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410405,"byte_end":10410421,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410426,"byte_end":10410429,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410434,"byte_end":10410452,"line_start":746,"line_end":746,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410457,"byte_end":10410508,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410513,"byte_end":10410541,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410546,"byte_end":10410611,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410616,"byte_end":10410619,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410624,"byte_end":10410638,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410643,"byte_end":10410692,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410697,"byte_end":10410734,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410739,"byte_end":10410742,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410747,"byte_end":10410818,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410823,"byte_end":10410881,"line_start":756,"line_end":756,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410886,"byte_end":10410938,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410943,"byte_end":10410969,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10410974,"byte_end":10411000,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411005,"byte_end":10411022,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411027,"byte_end":10411099,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411104,"byte_end":10411133,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411138,"byte_end":10411155,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411160,"byte_end":10411187,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411192,"byte_end":10411233,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411238,"byte_end":10411255,"line_start":766,"line_end":766,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411260,"byte_end":10411273,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411278,"byte_end":10411287,"line_start":768,"line_end":768,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411292,"byte_end":10411295,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411300,"byte_end":10411314,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411319,"byte_end":10411324,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411329,"byte_end":10411336,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412808,"byte_end":10412812,"line_start":818,"line_end":818,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411551,"byte_end":10411621,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411626,"byte_end":10411695,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411700,"byte_end":10411739,"line_start":783,"line_end":783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411744,"byte_end":10411747,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411752,"byte_end":10411826,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411831,"byte_end":10411891,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411896,"byte_end":10411899,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411904,"byte_end":10411918,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411923,"byte_end":10411926,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411931,"byte_end":10411944,"line_start":790,"line_end":790,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411949,"byte_end":10411979,"line_start":791,"line_end":791,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10411984,"byte_end":10412016,"line_start":792,"line_end":792,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412021,"byte_end":10412047,"line_start":793,"line_end":793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412052,"byte_end":10412055,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412060,"byte_end":10412078,"line_start":795,"line_end":795,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412083,"byte_end":10412134,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412139,"byte_end":10412167,"line_start":797,"line_end":797,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412172,"byte_end":10412241,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412246,"byte_end":10412249,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412254,"byte_end":10412283,"line_start":800,"line_end":800,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412288,"byte_end":10412317,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412322,"byte_end":10412325,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412330,"byte_end":10412357,"line_start":803,"line_end":803,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412362,"byte_end":10412406,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412411,"byte_end":10412414,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412419,"byte_end":10412443,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412448,"byte_end":10412504,"line_start":807,"line_end":807,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412509,"byte_end":10412548,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412553,"byte_end":10412556,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412561,"byte_end":10412575,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412580,"byte_end":10412585,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412590,"byte_end":10412597,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412602,"byte_end":10412605,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412610,"byte_end":10412675,"line_start":814,"line_end":814,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412680,"byte_end":10412683,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412688,"byte_end":10412734,"line_start":816,"line_end":816,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10412739,"byte_end":10412790,"line_start":817,"line_end":817,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413907,"byte_end":10413914,"line_start":852,"line_end":852,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413375,"byte_end":10413437,"line_start":834,"line_end":834,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413442,"byte_end":10413445,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413450,"byte_end":10413514,"line_start":836,"line_end":836,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413519,"byte_end":10413522,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413527,"byte_end":10413570,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413575,"byte_end":10413578,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413583,"byte_end":10413597,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413602,"byte_end":10413605,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413610,"byte_end":10413623,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413628,"byte_end":10413658,"line_start":843,"line_end":843,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413663,"byte_end":10413666,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413671,"byte_end":10413735,"line_start":845,"line_end":845,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413740,"byte_end":10413801,"line_start":846,"line_end":846,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413806,"byte_end":10413809,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413814,"byte_end":10413854,"line_start":848,"line_end":848,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413859,"byte_end":10413871,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413876,"byte_end":10413883,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413888,"byte_end":10413895,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414711,"byte_end":10414722,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10413981,"byte_end":10414043,"line_start":856,"line_end":856,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414048,"byte_end":10414051,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414056,"byte_end":10414125,"line_start":858,"line_end":858,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414130,"byte_end":10414203,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414208,"byte_end":10414281,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414286,"byte_end":10414361,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414366,"byte_end":10414384,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414389,"byte_end":10414392,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414397,"byte_end":10414411,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414416,"byte_end":10414419,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414424,"byte_end":10414437,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414442,"byte_end":10414472,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414477,"byte_end":10414480,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414485,"byte_end":10414549,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414554,"byte_end":10414615,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414620,"byte_end":10414623,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414628,"byte_end":10414658,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414663,"byte_end":10414675,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414680,"byte_end":10414687,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414692,"byte_end":10414699,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415367,"byte_end":10415373,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414813,"byte_end":10414885,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414890,"byte_end":10414901,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414906,"byte_end":10414909,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414914,"byte_end":10414977,"line_start":883,"line_end":883,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414982,"byte_end":10414985,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10414990,"byte_end":10415031,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415036,"byte_end":10415039,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415044,"byte_end":10415058,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415063,"byte_end":10415066,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415071,"byte_end":10415084,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415089,"byte_end":10415119,"line_start":890,"line_end":890,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415124,"byte_end":10415127,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415132,"byte_end":10415196,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415201,"byte_end":10415262,"line_start":893,"line_end":893,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415267,"byte_end":10415270,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415275,"byte_end":10415314,"line_start":895,"line_end":895,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415319,"byte_end":10415331,"line_start":896,"line_end":896,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415336,"byte_end":10415343,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415348,"byte_end":10415355,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416352,"byte_end":10416362,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415528,"byte_end":10415604,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415609,"byte_end":10415612,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415617,"byte_end":10415710,"line_start":907,"line_end":907,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415715,"byte_end":10415808,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415813,"byte_end":10415848,"line_start":909,"line_end":909,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415853,"byte_end":10415856,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415861,"byte_end":10415954,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10415959,"byte_end":10416026,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416031,"byte_end":10416034,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416039,"byte_end":10416053,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416058,"byte_end":10416061,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416066,"byte_end":10416079,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416084,"byte_end":10416114,"line_start":917,"line_end":917,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416119,"byte_end":10416122,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416127,"byte_end":10416191,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416196,"byte_end":10416257,"line_start":920,"line_end":920,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416262,"byte_end":10416265,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416270,"byte_end":10416299,"line_start":922,"line_end":922,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416304,"byte_end":10416316,"line_start":923,"line_end":923,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416321,"byte_end":10416328,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416333,"byte_end":10416340,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417336,"byte_end":10417339,"line_start":962,"line_end":962,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416824,"byte_end":10416882,"line_start":944,"line_end":944,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416887,"byte_end":10416890,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416895,"byte_end":10416955,"line_start":946,"line_end":946,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416960,"byte_end":10416963,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10416968,"byte_end":10417003,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417008,"byte_end":10417011,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417016,"byte_end":10417030,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417035,"byte_end":10417038,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417043,"byte_end":10417056,"line_start":952,"line_end":952,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417061,"byte_end":10417091,"line_start":953,"line_end":953,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417096,"byte_end":10417099,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417104,"byte_end":10417168,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417173,"byte_end":10417234,"line_start":956,"line_end":956,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417239,"byte_end":10417242,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417247,"byte_end":10417283,"line_start":958,"line_end":958,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417288,"byte_end":10417300,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417305,"byte_end":10417312,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417317,"byte_end":10417324,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417896,"byte_end":10417903,"line_start":983,"line_end":983,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417401,"byte_end":10417459,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417464,"byte_end":10417467,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417472,"byte_end":10417548,"line_start":968,"line_end":968,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417553,"byte_end":10417574,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417579,"byte_end":10417582,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417587,"byte_end":10417601,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417606,"byte_end":10417609,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417614,"byte_end":10417627,"line_start":973,"line_end":973,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417632,"byte_end":10417662,"line_start":974,"line_end":974,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417667,"byte_end":10417670,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417675,"byte_end":10417739,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417744,"byte_end":10417805,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417810,"byte_end":10417813,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417818,"byte_end":10417843,"line_start":979,"line_end":979,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417848,"byte_end":10417860,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417865,"byte_end":10417872,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10417877,"byte_end":10417884,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418495,"byte_end":10418500,"line_start":997,"line_end":997,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418118,"byte_end":10418154,"line_start":989,"line_end":989,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418159,"byte_end":10418236,"line_start":990,"line_end":990,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418241,"byte_end":10418287,"line_start":991,"line_end":991,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418292,"byte_end":10418295,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418300,"byte_end":10418379,"line_start":993,"line_end":993,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418384,"byte_end":10418427,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418432,"byte_end":10418435,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418440,"byte_end":10418483,"line_start":996,"line_end":996,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419149,"byte_end":10419159,"line_start":1012,"line_end":1012,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418585,"byte_end":10418662,"line_start":1001,"line_end":1001,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418667,"byte_end":10418713,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418718,"byte_end":10418721,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418726,"byte_end":10418804,"line_start":1004,"line_end":1004,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418809,"byte_end":10418857,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418862,"byte_end":10418865,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418870,"byte_end":10418948,"line_start":1007,"line_end":1007,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10418953,"byte_end":10419029,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419034,"byte_end":10419037,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419042,"byte_end":10419075,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419080,"byte_end":10419137,"line_start":1011,"line_end":1011,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426464,"byte_end":10426473,"line_start":120,"line_end":120,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3734}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10427010,"byte_end":10427014,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426552,"byte_end":10426624,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426629,"byte_end":10426653,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426658,"byte_end":10426661,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426666,"byte_end":10426679,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426684,"byte_end":10426687,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426692,"byte_end":10426705,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426710,"byte_end":10426740,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426745,"byte_end":10426761,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426766,"byte_end":10426769,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426774,"byte_end":10426792,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426797,"byte_end":10426836,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426841,"byte_end":10426899,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426904,"byte_end":10426925,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426930,"byte_end":10426951,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426956,"byte_end":10426970,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426975,"byte_end":10426980,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426985,"byte_end":10426992,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429253,"byte_end":10429261,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10427847,"byte_end":10427921,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10427926,"byte_end":10427929,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10427934,"byte_end":10428004,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428009,"byte_end":10428085,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428090,"byte_end":10428161,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428166,"byte_end":10428188,"line_start":177,"line_end":177,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428193,"byte_end":10428196,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428201,"byte_end":10428273,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428278,"byte_end":10428353,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428358,"byte_end":10428411,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428416,"byte_end":10428419,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428424,"byte_end":10428436,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428441,"byte_end":10428444,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428449,"byte_end":10428509,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428514,"byte_end":10428517,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428522,"byte_end":10428592,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428597,"byte_end":10428670,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428675,"byte_end":10428755,"line_start":189,"line_end":189,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428760,"byte_end":10428763,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428768,"byte_end":10428781,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428786,"byte_end":10428789,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428794,"byte_end":10428807,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428812,"byte_end":10428842,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428847,"byte_end":10428884,"line_start":195,"line_end":195,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428889,"byte_end":10428892,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428897,"byte_end":10428917,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428922,"byte_end":10428963,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10428968,"byte_end":10429029,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429034,"byte_end":10429086,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429091,"byte_end":10429127,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429132,"byte_end":10429178,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429183,"byte_end":10429200,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429205,"byte_end":10429217,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429222,"byte_end":10429229,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429234,"byte_end":10429241,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429933,"byte_end":10429943,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429407,"byte_end":10429466,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429471,"byte_end":10429474,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429479,"byte_end":10429492,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429497,"byte_end":10429500,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429505,"byte_end":10429518,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429523,"byte_end":10429553,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429558,"byte_end":10429595,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429600,"byte_end":10429603,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429608,"byte_end":10429628,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429633,"byte_end":10429674,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429679,"byte_end":10429740,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429745,"byte_end":10429789,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429794,"byte_end":10429835,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429840,"byte_end":10429880,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429885,"byte_end":10429897,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429902,"byte_end":10429909,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10429914,"byte_end":10429921,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430863,"byte_end":10430870,"line_start":257,"line_end":257,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430019,"byte_end":10430093,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430098,"byte_end":10430171,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430176,"byte_end":10430187,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430192,"byte_end":10430195,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430200,"byte_end":10430213,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430218,"byte_end":10430221,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430226,"byte_end":10430239,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430244,"byte_end":10430274,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430279,"byte_end":10430316,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430321,"byte_end":10430324,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430329,"byte_end":10430349,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430354,"byte_end":10430395,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430400,"byte_end":10430485,"line_start":245,"line_end":245,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430490,"byte_end":10430493,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430498,"byte_end":10430569,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430574,"byte_end":10430611,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430616,"byte_end":10430644,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430649,"byte_end":10430677,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430682,"byte_end":10430723,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430728,"byte_end":10430754,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430759,"byte_end":10430804,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430809,"byte_end":10430821,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430826,"byte_end":10430833,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10430838,"byte_end":10430845,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433677,"byte_end":10433682,"line_start":335,"line_end":335,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431393,"byte_end":10431440,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431445,"byte_end":10431448,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431453,"byte_end":10431526,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431531,"byte_end":10431605,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431610,"byte_end":10431648,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431653,"byte_end":10431656,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431661,"byte_end":10431732,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431737,"byte_end":10431800,"line_start":283,"line_end":283,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431805,"byte_end":10431837,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431842,"byte_end":10431845,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431850,"byte_end":10431864,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431869,"byte_end":10431872,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431877,"byte_end":10431946,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431951,"byte_end":10431973,"line_start":289,"line_end":289,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431978,"byte_end":10431981,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10431986,"byte_end":10431999,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432004,"byte_end":10432040,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432045,"byte_end":10432075,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432080,"byte_end":10432083,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432088,"byte_end":10432106,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432111,"byte_end":10432150,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432155,"byte_end":10432217,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432222,"byte_end":10432270,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432275,"byte_end":10432278,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432283,"byte_end":10432297,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432302,"byte_end":10432387,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432392,"byte_end":10432395,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432400,"byte_end":10432436,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432441,"byte_end":10432528,"line_start":304,"line_end":304,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432533,"byte_end":10432565,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432570,"byte_end":10432611,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432616,"byte_end":10432670,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432675,"byte_end":10432705,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432710,"byte_end":10432772,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432777,"byte_end":10432798,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432803,"byte_end":10432850,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432855,"byte_end":10432932,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432937,"byte_end":10432968,"line_start":313,"line_end":313,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10432973,"byte_end":10433011,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433016,"byte_end":10433037,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433042,"byte_end":10433059,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433064,"byte_end":10433077,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433082,"byte_end":10433085,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433090,"byte_end":10433126,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433131,"byte_end":10433165,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433170,"byte_end":10433225,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433230,"byte_end":10433260,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433265,"byte_end":10433318,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433323,"byte_end":10433344,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433349,"byte_end":10433396,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433401,"byte_end":10433478,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433483,"byte_end":10433514,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433519,"byte_end":10433557,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433562,"byte_end":10433583,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433588,"byte_end":10433605,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433610,"byte_end":10433623,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433628,"byte_end":10433637,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433642,"byte_end":10433647,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433652,"byte_end":10433659,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435284,"byte_end":10435292,"line_start":383,"line_end":383,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433839,"byte_end":10433882,"line_start":340,"line_end":340,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433887,"byte_end":10433890,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433895,"byte_end":10433964,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10433969,"byte_end":10434025,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434030,"byte_end":10434033,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434038,"byte_end":10434112,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434117,"byte_end":10434182,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434187,"byte_end":10434219,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434224,"byte_end":10434227,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434232,"byte_end":10434246,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434251,"byte_end":10434254,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434259,"byte_end":10434272,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434277,"byte_end":10434307,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434312,"byte_end":10434328,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434333,"byte_end":10434336,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434341,"byte_end":10434359,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434364,"byte_end":10434403,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434408,"byte_end":10434430,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434435,"byte_end":10434497,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434502,"byte_end":10434550,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434555,"byte_end":10434558,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434563,"byte_end":10434577,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434582,"byte_end":10434631,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434636,"byte_end":10434673,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434678,"byte_end":10434681,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434686,"byte_end":10434756,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434761,"byte_end":10434819,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434824,"byte_end":10434875,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434880,"byte_end":10434906,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434911,"byte_end":10434937,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434942,"byte_end":10434959,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10434964,"byte_end":10435036,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435041,"byte_end":10435070,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435075,"byte_end":10435092,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435097,"byte_end":10435124,"line_start":374,"line_end":374,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435129,"byte_end":10435163,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435168,"byte_end":10435185,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435190,"byte_end":10435203,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435208,"byte_end":10435217,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435222,"byte_end":10435225,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435230,"byte_end":10435244,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435249,"byte_end":10435254,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435259,"byte_end":10435266,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436312,"byte_end":10436316,"line_start":419,"line_end":419,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435393,"byte_end":10435462,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435467,"byte_end":10435484,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435489,"byte_end":10435492,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435497,"byte_end":10435569,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435574,"byte_end":10435631,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435636,"byte_end":10435639,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435644,"byte_end":10435681,"line_start":394,"line_end":394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435686,"byte_end":10435689,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435694,"byte_end":10435706,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435711,"byte_end":10435714,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435719,"byte_end":10435787,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435792,"byte_end":10435826,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435831,"byte_end":10435834,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435839,"byte_end":10435853,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435858,"byte_end":10435861,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435866,"byte_end":10435879,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435884,"byte_end":10435902,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435907,"byte_end":10435937,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435942,"byte_end":10435945,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435950,"byte_end":10435968,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10435973,"byte_end":10436012,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436017,"byte_end":10436039,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436044,"byte_end":10436106,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436111,"byte_end":10436159,"line_start":411,"line_end":411,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436164,"byte_end":10436167,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436172,"byte_end":10436197,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436202,"byte_end":10436245,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436250,"byte_end":10436253,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436258,"byte_end":10436272,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436277,"byte_end":10436282,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436287,"byte_end":10436294,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437404,"byte_end":10437413,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436497,"byte_end":10436570,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436575,"byte_end":10436606,"line_start":427,"line_end":427,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436611,"byte_end":10436614,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436619,"byte_end":10436691,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436696,"byte_end":10436753,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436758,"byte_end":10436761,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436766,"byte_end":10436841,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436846,"byte_end":10436921,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436926,"byte_end":10436963,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436968,"byte_end":10436971,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436976,"byte_end":10436994,"line_start":436,"line_end":436,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10436999,"byte_end":10437002,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437007,"byte_end":10437032,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437037,"byte_end":10437040,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437045,"byte_end":10437106,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437111,"byte_end":10437169,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437174,"byte_end":10437229,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437234,"byte_end":10437237,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437242,"byte_end":10437254,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437259,"byte_end":10437262,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437267,"byte_end":10437342,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437347,"byte_end":10437350,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437355,"byte_end":10437392,"line_start":448,"line_end":448,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439157,"byte_end":10439165,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437592,"byte_end":10437663,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437668,"byte_end":10437682,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437687,"byte_end":10437690,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437695,"byte_end":10437766,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437771,"byte_end":10437835,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437840,"byte_end":10437843,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437848,"byte_end":10437861,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437866,"byte_end":10437869,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437874,"byte_end":10437946,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10437951,"byte_end":10438001,"line_start":464,"line_end":464,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438006,"byte_end":10438051,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438056,"byte_end":10438059,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438064,"byte_end":10438078,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438083,"byte_end":10438086,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438091,"byte_end":10438104,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438109,"byte_end":10438139,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438144,"byte_end":10438160,"line_start":471,"line_end":471,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438165,"byte_end":10438168,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438173,"byte_end":10438191,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438196,"byte_end":10438235,"line_start":474,"line_end":474,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438240,"byte_end":10438268,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438273,"byte_end":10438335,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438340,"byte_end":10438343,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438348,"byte_end":10438376,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438381,"byte_end":10438429,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438434,"byte_end":10438437,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438442,"byte_end":10438456,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438461,"byte_end":10438510,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438515,"byte_end":10438552,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438557,"byte_end":10438560,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438565,"byte_end":10438635,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438640,"byte_end":10438698,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438703,"byte_end":10438754,"line_start":487,"line_end":487,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438759,"byte_end":10438785,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438790,"byte_end":10438816,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438821,"byte_end":10438838,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438843,"byte_end":10438915,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438920,"byte_end":10438949,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438954,"byte_end":10438971,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10438976,"byte_end":10439003,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439008,"byte_end":10439042,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439047,"byte_end":10439064,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439069,"byte_end":10439082,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439087,"byte_end":10439096,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439101,"byte_end":10439104,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439109,"byte_end":10439123,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439128,"byte_end":10439133,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439138,"byte_end":10439145,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440978,"byte_end":10440986,"line_start":557,"line_end":557,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439325,"byte_end":10439368,"line_start":509,"line_end":509,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439373,"byte_end":10439376,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439381,"byte_end":10439458,"line_start":511,"line_end":511,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439463,"byte_end":10439492,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439497,"byte_end":10439500,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439505,"byte_end":10439579,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439584,"byte_end":10439649,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439654,"byte_end":10439686,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439691,"byte_end":10439694,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439699,"byte_end":10439713,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439718,"byte_end":10439721,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439726,"byte_end":10439739,"line_start":520,"line_end":520,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439744,"byte_end":10439774,"line_start":521,"line_end":521,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439779,"byte_end":10439795,"line_start":522,"line_end":522,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439800,"byte_end":10439803,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439808,"byte_end":10439826,"line_start":524,"line_end":524,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439831,"byte_end":10439870,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439875,"byte_end":10439903,"line_start":526,"line_end":526,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439908,"byte_end":10439970,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10439975,"byte_end":10440023,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440028,"byte_end":10440031,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440036,"byte_end":10440050,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440055,"byte_end":10440104,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440109,"byte_end":10440146,"line_start":532,"line_end":532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440151,"byte_end":10440154,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440159,"byte_end":10440231,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440236,"byte_end":10440275,"line_start":535,"line_end":535,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440280,"byte_end":10440316,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440321,"byte_end":10440324,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440329,"byte_end":10440399,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440404,"byte_end":10440462,"line_start":539,"line_end":539,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440467,"byte_end":10440512,"line_start":540,"line_end":540,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440517,"byte_end":10440543,"line_start":541,"line_end":541,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440548,"byte_end":10440600,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440605,"byte_end":10440631,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440636,"byte_end":10440653,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440658,"byte_end":10440730,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440735,"byte_end":10440764,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440769,"byte_end":10440786,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440791,"byte_end":10440818,"line_start":548,"line_end":548,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440823,"byte_end":10440857,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440862,"byte_end":10440879,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440884,"byte_end":10440897,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440902,"byte_end":10440911,"line_start":552,"line_end":552,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440916,"byte_end":10440919,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440924,"byte_end":10440938,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440943,"byte_end":10440948,"line_start":555,"line_end":555,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10440953,"byte_end":10440960,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442199,"byte_end":10442203,"line_start":592,"line_end":592,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441087,"byte_end":10441163,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441168,"byte_end":10441243,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441248,"byte_end":10441251,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441256,"byte_end":10441329,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441334,"byte_end":10441408,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441413,"byte_end":10441464,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441469,"byte_end":10441472,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441477,"byte_end":10441549,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441554,"byte_end":10441611,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441616,"byte_end":10441619,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441624,"byte_end":10441661,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441666,"byte_end":10441669,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441674,"byte_end":10441687,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441692,"byte_end":10441722,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441727,"byte_end":10441743,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441748,"byte_end":10441751,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441756,"byte_end":10441774,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441779,"byte_end":10441818,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441823,"byte_end":10441845,"line_start":580,"line_end":580,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441850,"byte_end":10441912,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441917,"byte_end":10441965,"line_start":582,"line_end":582,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441970,"byte_end":10441973,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10441978,"byte_end":10442012,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442017,"byte_end":10442062,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442067,"byte_end":10442070,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442075,"byte_end":10442132,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442137,"byte_end":10442140,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442145,"byte_end":10442159,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442164,"byte_end":10442169,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442174,"byte_end":10442181,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443328,"byte_end":10443337,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442388,"byte_end":10442467,"line_start":599,"line_end":599,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442472,"byte_end":10442511,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442516,"byte_end":10442519,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442524,"byte_end":10442608,"line_start":602,"line_end":602,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442613,"byte_end":10442669,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442674,"byte_end":10442677,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442682,"byte_end":10442766,"line_start":605,"line_end":605,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442771,"byte_end":10442853,"line_start":606,"line_end":606,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442858,"byte_end":10442879,"line_start":607,"line_end":607,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442884,"byte_end":10442887,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442892,"byte_end":10442910,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442915,"byte_end":10442918,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442923,"byte_end":10442948,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442953,"byte_end":10442956,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10442961,"byte_end":10443017,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443022,"byte_end":10443093,"line_start":614,"line_end":614,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443098,"byte_end":10443153,"line_start":615,"line_end":615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443158,"byte_end":10443161,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443166,"byte_end":10443178,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443183,"byte_end":10443186,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443191,"byte_end":10443266,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443271,"byte_end":10443274,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443279,"byte_end":10443316,"line_start":621,"line_end":621,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445758,"byte_end":10445766,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10443931,"byte_end":10444005,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444010,"byte_end":10444081,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444086,"byte_end":10444101,"line_start":642,"line_end":642,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444106,"byte_end":10444109,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444114,"byte_end":10444190,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444195,"byte_end":10444264,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444269,"byte_end":10444320,"line_start":646,"line_end":646,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444325,"byte_end":10444328,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444333,"byte_end":10444403,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444408,"byte_end":10444472,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444477,"byte_end":10444480,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444485,"byte_end":10444499,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444504,"byte_end":10444507,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444512,"byte_end":10444525,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444530,"byte_end":10444560,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444565,"byte_end":10444581,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444586,"byte_end":10444589,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444594,"byte_end":10444612,"line_start":657,"line_end":657,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444617,"byte_end":10444656,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444661,"byte_end":10444689,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444694,"byte_end":10444756,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444761,"byte_end":10444809,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444814,"byte_end":10444817,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444822,"byte_end":10444836,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444841,"byte_end":10444890,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444895,"byte_end":10444932,"line_start":665,"line_end":665,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444937,"byte_end":10444940,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10444945,"byte_end":10445017,"line_start":667,"line_end":667,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445022,"byte_end":10445061,"line_start":668,"line_end":668,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445066,"byte_end":10445102,"line_start":669,"line_end":669,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445107,"byte_end":10445110,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445115,"byte_end":10445185,"line_start":671,"line_end":671,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445190,"byte_end":10445248,"line_start":672,"line_end":672,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445253,"byte_end":10445298,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445303,"byte_end":10445329,"line_start":674,"line_end":674,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445334,"byte_end":10445386,"line_start":675,"line_end":675,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445391,"byte_end":10445417,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445422,"byte_end":10445439,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445444,"byte_end":10445516,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445521,"byte_end":10445550,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445555,"byte_end":10445572,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445577,"byte_end":10445604,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445609,"byte_end":10445643,"line_start":682,"line_end":682,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445648,"byte_end":10445665,"line_start":683,"line_end":683,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445670,"byte_end":10445683,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445688,"byte_end":10445697,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445702,"byte_end":10445705,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445710,"byte_end":10445724,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445729,"byte_end":10445734,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10445739,"byte_end":10445746,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10447845,"byte_end":10447857,"line_start":744,"line_end":744,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10450285,"byte_end":10450302,"line_start":808,"line_end":808,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451989,"byte_end":10451996,"line_start":857,"line_end":857,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10450944,"byte_end":10451018,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451023,"byte_end":10451051,"line_start":828,"line_end":828,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451056,"byte_end":10451059,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451064,"byte_end":10451139,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451144,"byte_end":10451184,"line_start":831,"line_end":831,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451189,"byte_end":10451192,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451197,"byte_end":10451269,"line_start":833,"line_end":833,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451274,"byte_end":10451337,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451342,"byte_end":10451345,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451350,"byte_end":10451424,"line_start":836,"line_end":836,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451429,"byte_end":10451480,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451485,"byte_end":10451488,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451493,"byte_end":10451541,"line_start":839,"line_end":839,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451546,"byte_end":10451549,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451554,"byte_end":10451567,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451572,"byte_end":10451575,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451580,"byte_end":10451593,"line_start":843,"line_end":843,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451598,"byte_end":10451628,"line_start":844,"line_end":844,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451633,"byte_end":10451649,"line_start":845,"line_end":845,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451654,"byte_end":10451657,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451662,"byte_end":10451680,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451685,"byte_end":10451724,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451729,"byte_end":10451791,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451796,"byte_end":10451870,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451875,"byte_end":10451878,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451883,"byte_end":10451922,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451927,"byte_end":10451930,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451935,"byte_end":10451949,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451954,"byte_end":10451959,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10451964,"byte_end":10451971,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453047,"byte_end":10453059,"line_start":886,"line_end":886,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452390,"byte_end":10452449,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452454,"byte_end":10452457,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452462,"byte_end":10452546,"line_start":871,"line_end":871,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452551,"byte_end":10452633,"line_start":872,"line_end":872,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452638,"byte_end":10452659,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452664,"byte_end":10452667,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452672,"byte_end":10452690,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452695,"byte_end":10452698,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452703,"byte_end":10452728,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452733,"byte_end":10452736,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452741,"byte_end":10452798,"line_start":879,"line_end":879,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452803,"byte_end":10452862,"line_start":880,"line_end":880,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452867,"byte_end":10452922,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452927,"byte_end":10452930,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452935,"byte_end":10452947,"line_start":883,"line_end":883,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452952,"byte_end":10452955,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10452960,"byte_end":10453035,"line_start":885,"line_end":885,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454859,"byte_end":10454870,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453308,"byte_end":10453383,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453388,"byte_end":10453428,"line_start":898,"line_end":898,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453433,"byte_end":10453436,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453441,"byte_end":10453495,"line_start":900,"line_end":900,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453500,"byte_end":10453503,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453508,"byte_end":10453521,"line_start":902,"line_end":902,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453526,"byte_end":10453529,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453534,"byte_end":10453586,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453591,"byte_end":10453594,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453599,"byte_end":10453663,"line_start":906,"line_end":906,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453668,"byte_end":10453742,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453747,"byte_end":10453815,"line_start":908,"line_end":908,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453820,"byte_end":10453823,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453828,"byte_end":10453889,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453894,"byte_end":10453897,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453902,"byte_end":10453915,"line_start":912,"line_end":912,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453920,"byte_end":10453923,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453928,"byte_end":10453941,"line_start":914,"line_end":914,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453946,"byte_end":10453976,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10453981,"byte_end":10454007,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454012,"byte_end":10454028,"line_start":917,"line_end":917,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454033,"byte_end":10454036,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454041,"byte_end":10454059,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454064,"byte_end":10454115,"line_start":920,"line_end":920,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454120,"byte_end":10454182,"line_start":921,"line_end":921,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454187,"byte_end":10454190,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454195,"byte_end":10454239,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454244,"byte_end":10454247,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454252,"byte_end":10454266,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454271,"byte_end":10454308,"line_start":926,"line_end":926,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454313,"byte_end":10454316,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454321,"byte_end":10454385,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454390,"byte_end":10454419,"line_start":929,"line_end":929,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454424,"byte_end":10454476,"line_start":930,"line_end":930,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454481,"byte_end":10454507,"line_start":931,"line_end":931,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454512,"byte_end":10454529,"line_start":932,"line_end":932,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454534,"byte_end":10454606,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454611,"byte_end":10454658,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454663,"byte_end":10454692,"line_start":935,"line_end":935,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454697,"byte_end":10454714,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454719,"byte_end":10454766,"line_start":937,"line_end":937,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454771,"byte_end":10454784,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454789,"byte_end":10454798,"line_start":939,"line_end":939,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454803,"byte_end":10454806,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454811,"byte_end":10454825,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454830,"byte_end":10454835,"line_start":942,"line_end":942,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10454840,"byte_end":10454847,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456142,"byte_end":10456151,"line_start":982,"line_end":982,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455294,"byte_end":10455367,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455372,"byte_end":10455416,"line_start":958,"line_end":958,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455421,"byte_end":10455424,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455429,"byte_end":10455502,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455507,"byte_end":10455581,"line_start":961,"line_end":961,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455586,"byte_end":10455637,"line_start":962,"line_end":962,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455642,"byte_end":10455645,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455650,"byte_end":10455663,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455668,"byte_end":10455671,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455676,"byte_end":10455689,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455694,"byte_end":10455724,"line_start":967,"line_end":967,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455729,"byte_end":10455745,"line_start":968,"line_end":968,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455750,"byte_end":10455753,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455758,"byte_end":10455776,"line_start":970,"line_end":970,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455781,"byte_end":10455820,"line_start":971,"line_end":971,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455825,"byte_end":10455887,"line_start":972,"line_end":972,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455892,"byte_end":10455895,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455900,"byte_end":10455936,"line_start":974,"line_end":974,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10455941,"byte_end":10456001,"line_start":975,"line_end":975,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456006,"byte_end":10456009,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456014,"byte_end":10456075,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456080,"byte_end":10456083,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456088,"byte_end":10456102,"line_start":979,"line_end":979,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456107,"byte_end":10456112,"line_start":980,"line_end":980,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456117,"byte_end":10456124,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457039,"byte_end":10457053,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456355,"byte_end":10456411,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456416,"byte_end":10456419,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456424,"byte_end":10456508,"line_start":991,"line_end":991,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456513,"byte_end":10456595,"line_start":992,"line_end":992,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456600,"byte_end":10456621,"line_start":993,"line_end":993,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456626,"byte_end":10456629,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456634,"byte_end":10456652,"line_start":995,"line_end":995,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456657,"byte_end":10456660,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456665,"byte_end":10456690,"line_start":997,"line_end":997,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456695,"byte_end":10456698,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456703,"byte_end":10456759,"line_start":999,"line_end":999,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456764,"byte_end":10456854,"line_start":1000,"line_end":1000,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456859,"byte_end":10456914,"line_start":1001,"line_end":1001,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456919,"byte_end":10456922,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456927,"byte_end":10456939,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456944,"byte_end":10456947,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10456952,"byte_end":10457027,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459447,"byte_end":10459460,"line_start":1076,"line_end":1076,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457701,"byte_end":10457772,"line_start":1028,"line_end":1028,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457777,"byte_end":10457829,"line_start":1029,"line_end":1029,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457834,"byte_end":10457837,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457842,"byte_end":10457918,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457923,"byte_end":10457992,"line_start":1032,"line_end":1032,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10457997,"byte_end":10458048,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458053,"byte_end":10458056,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458061,"byte_end":10458131,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458136,"byte_end":10458200,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458205,"byte_end":10458208,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458213,"byte_end":10458227,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458232,"byte_end":10458235,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458240,"byte_end":10458253,"line_start":1040,"line_end":1040,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458258,"byte_end":10458288,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458293,"byte_end":10458309,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458314,"byte_end":10458317,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458322,"byte_end":10458340,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458345,"byte_end":10458384,"line_start":1045,"line_end":1045,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458389,"byte_end":10458417,"line_start":1046,"line_end":1046,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458422,"byte_end":10458484,"line_start":1047,"line_end":1047,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458489,"byte_end":10458492,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458497,"byte_end":10458511,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458516,"byte_end":10458565,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458570,"byte_end":10458607,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458612,"byte_end":10458615,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458620,"byte_end":10458692,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458697,"byte_end":10458736,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458741,"byte_end":10458777,"line_start":1055,"line_end":1055,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458782,"byte_end":10458785,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458790,"byte_end":10458860,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458865,"byte_end":10458923,"line_start":1058,"line_end":1058,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458928,"byte_end":10458978,"line_start":1059,"line_end":1059,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10458983,"byte_end":10459018,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459023,"byte_end":10459075,"line_start":1061,"line_end":1061,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459080,"byte_end":10459106,"line_start":1062,"line_end":1062,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459111,"byte_end":10459128,"line_start":1063,"line_end":1063,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459133,"byte_end":10459205,"line_start":1064,"line_end":1064,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459210,"byte_end":10459239,"line_start":1065,"line_end":1065,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459244,"byte_end":10459261,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459266,"byte_end":10459293,"line_start":1067,"line_end":1067,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459298,"byte_end":10459332,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459337,"byte_end":10459354,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459359,"byte_end":10459372,"line_start":1070,"line_end":1070,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459377,"byte_end":10459386,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459391,"byte_end":10459394,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459399,"byte_end":10459413,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459418,"byte_end":10459423,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459428,"byte_end":10459435,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460720,"byte_end":10460729,"line_start":1112,"line_end":1112,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459643,"byte_end":10459719,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459724,"byte_end":10459800,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459805,"byte_end":10459823,"line_start":1084,"line_end":1084,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459828,"byte_end":10459831,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459836,"byte_end":10459847,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459852,"byte_end":10459855,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459860,"byte_end":10459935,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10459940,"byte_end":10460018,"line_start":1089,"line_end":1089,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460023,"byte_end":10460071,"line_start":1090,"line_end":1090,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460076,"byte_end":10460143,"line_start":1091,"line_end":1091,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460148,"byte_end":10460216,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460221,"byte_end":10460224,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460229,"byte_end":10460243,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460248,"byte_end":10460251,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460256,"byte_end":10460269,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460274,"byte_end":10460304,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460309,"byte_end":10460325,"line_start":1098,"line_end":1098,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460330,"byte_end":10460333,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460338,"byte_end":10460356,"line_start":1100,"line_end":1100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460361,"byte_end":10460400,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460405,"byte_end":10460467,"line_start":1102,"line_end":1102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460472,"byte_end":10460475,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460480,"byte_end":10460516,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460521,"byte_end":10460581,"line_start":1105,"line_end":1105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460586,"byte_end":10460589,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460594,"byte_end":10460653,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460658,"byte_end":10460661,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460666,"byte_end":10460680,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460685,"byte_end":10460690,"line_start":1110,"line_end":1110,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460695,"byte_end":10460702,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462078,"byte_end":10462092,"line_start":1145,"line_end":1145,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10460933,"byte_end":10461009,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461014,"byte_end":10461063,"line_start":1120,"line_end":1120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461068,"byte_end":10461071,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461076,"byte_end":10461087,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461092,"byte_end":10461095,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461100,"byte_end":10461184,"line_start":1124,"line_end":1124,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461189,"byte_end":10461271,"line_start":1125,"line_end":1125,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461276,"byte_end":10461296,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461301,"byte_end":10461304,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461309,"byte_end":10461384,"line_start":1128,"line_end":1128,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461389,"byte_end":10461462,"line_start":1129,"line_end":1129,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461467,"byte_end":10461515,"line_start":1130,"line_end":1130,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461520,"byte_end":10461587,"line_start":1131,"line_end":1131,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461592,"byte_end":10461660,"line_start":1132,"line_end":1132,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461665,"byte_end":10461668,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461673,"byte_end":10461691,"line_start":1134,"line_end":1134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461696,"byte_end":10461699,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461704,"byte_end":10461729,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461734,"byte_end":10461737,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461742,"byte_end":10461798,"line_start":1138,"line_end":1138,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461803,"byte_end":10461893,"line_start":1139,"line_end":1139,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461898,"byte_end":10461953,"line_start":1140,"line_end":1140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461958,"byte_end":10461961,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461966,"byte_end":10461978,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461983,"byte_end":10461986,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10461991,"byte_end":10462066,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462957,"byte_end":10462966,"line_start":1172,"line_end":1172,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462740,"byte_end":10462804,"line_start":1167,"line_end":1167,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462809,"byte_end":10462812,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462817,"byte_end":10462883,"line_start":1169,"line_end":1169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462888,"byte_end":10462891,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10462896,"byte_end":10462945,"line_start":1171,"line_end":1171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463212,"byte_end":10463225,"line_start":1180,"line_end":1180,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463035,"byte_end":10463099,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463104,"byte_end":10463107,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463112,"byte_end":10463183,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463188,"byte_end":10463200,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463554,"byte_end":10463571,"line_start":1189,"line_end":1189,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463308,"byte_end":10463377,"line_start":1184,"line_end":1184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463382,"byte_end":10463385,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463390,"byte_end":10463464,"line_start":1186,"line_end":1186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463469,"byte_end":10463472,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463477,"byte_end":10463542,"line_start":1188,"line_end":1188,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463901,"byte_end":10463922,"line_start":1200,"line_end":1200,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463648,"byte_end":10463717,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463722,"byte_end":10463725,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463730,"byte_end":10463804,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463809,"byte_end":10463812,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463817,"byte_end":10463827,"line_start":1197,"line_end":1197,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463832,"byte_end":10463835,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10463840,"byte_end":10463889,"line_start":1199,"line_end":1199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464255,"byte_end":10464271,"line_start":1209,"line_end":1209,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464013,"byte_end":10464081,"line_start":1204,"line_end":1204,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464086,"byte_end":10464089,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464094,"byte_end":10464167,"line_start":1206,"line_end":1206,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464172,"byte_end":10464175,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464180,"byte_end":10464243,"line_start":1208,"line_end":1208,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464740,"byte_end":10464760,"line_start":1222,"line_end":1222,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464346,"byte_end":10464414,"line_start":1213,"line_end":1213,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464419,"byte_end":10464422,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464427,"byte_end":10464497,"line_start":1215,"line_end":1215,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464502,"byte_end":10464576,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464581,"byte_end":10464643,"line_start":1217,"line_end":1217,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464648,"byte_end":10464651,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464656,"byte_end":10464666,"line_start":1219,"line_end":1219,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464671,"byte_end":10464674,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464679,"byte_end":10464728,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465099,"byte_end":10465116,"line_start":1231,"line_end":1231,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464851,"byte_end":10464922,"line_start":1226,"line_end":1226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464927,"byte_end":10464930,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10464935,"byte_end":10465009,"line_start":1228,"line_end":1228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465014,"byte_end":10465017,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465022,"byte_end":10465087,"line_start":1230,"line_end":1230,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465450,"byte_end":10465471,"line_start":1242,"line_end":1242,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465193,"byte_end":10465264,"line_start":1235,"line_end":1235,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465269,"byte_end":10465272,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465277,"byte_end":10465353,"line_start":1237,"line_end":1237,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465358,"byte_end":10465361,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465366,"byte_end":10465376,"line_start":1239,"line_end":1239,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465381,"byte_end":10465384,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465389,"byte_end":10465438,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466068,"byte_end":10466071,"line_start":1265,"line_end":1265,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465562,"byte_end":10465620,"line_start":1246,"line_end":1246,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465625,"byte_end":10465628,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465633,"byte_end":10465693,"line_start":1248,"line_end":1248,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465698,"byte_end":10465701,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465706,"byte_end":10465743,"line_start":1250,"line_end":1250,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465748,"byte_end":10465751,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465756,"byte_end":10465770,"line_start":1252,"line_end":1252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465775,"byte_end":10465778,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465783,"byte_end":10465796,"line_start":1254,"line_end":1254,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465801,"byte_end":10465831,"line_start":1255,"line_end":1255,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465836,"byte_end":10465854,"line_start":1256,"line_end":1256,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465859,"byte_end":10465862,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465867,"byte_end":10465907,"line_start":1258,"line_end":1258,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465912,"byte_end":10465968,"line_start":1259,"line_end":1259,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465973,"byte_end":10465976,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10465981,"byte_end":10466015,"line_start":1261,"line_end":1261,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466020,"byte_end":10466032,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466037,"byte_end":10466044,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466049,"byte_end":10466056,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466619,"byte_end":10466626,"line_start":1287,"line_end":1287,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466133,"byte_end":10466191,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466196,"byte_end":10466199,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466204,"byte_end":10466280,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466285,"byte_end":10466306,"line_start":1272,"line_end":1272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466311,"byte_end":10466314,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466319,"byte_end":10466333,"line_start":1274,"line_end":1274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466338,"byte_end":10466341,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466346,"byte_end":10466359,"line_start":1276,"line_end":1276,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466364,"byte_end":10466394,"line_start":1277,"line_end":1277,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466399,"byte_end":10466417,"line_start":1278,"line_end":1278,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466422,"byte_end":10466425,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466430,"byte_end":10466470,"line_start":1280,"line_end":1280,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466475,"byte_end":10466531,"line_start":1281,"line_end":1281,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466536,"byte_end":10466558,"line_start":1282,"line_end":1282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466563,"byte_end":10466566,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466571,"byte_end":10466583,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466588,"byte_end":10466595,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466600,"byte_end":10466607,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467134,"byte_end":10467151,"line_start":1298,"line_end":1298,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466704,"byte_end":10466762,"line_start":1291,"line_end":1291,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466767,"byte_end":10466770,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466775,"byte_end":10466849,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466854,"byte_end":10466927,"line_start":1294,"line_end":1294,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10466932,"byte_end":10467004,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467009,"byte_end":10467079,"line_start":1296,"line_end":1296,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467084,"byte_end":10467122,"line_start":1297,"line_end":1297,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467606,"byte_end":10467623,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467290,"byte_end":10467350,"line_start":1302,"line_end":1302,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467355,"byte_end":10467358,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467363,"byte_end":10467437,"line_start":1304,"line_end":1304,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467442,"byte_end":10467515,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467520,"byte_end":10467594,"line_start":1306,"line_end":1306,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467980,"byte_end":10467998,"line_start":1316,"line_end":1316,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467756,"byte_end":10467815,"line_start":1311,"line_end":1311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467820,"byte_end":10467823,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467828,"byte_end":10467898,"line_start":1313,"line_end":1313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467903,"byte_end":10467906,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10467911,"byte_end":10467968,"line_start":1315,"line_end":1315,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468364,"byte_end":10468382,"line_start":1325,"line_end":1325,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468138,"byte_end":10468199,"line_start":1320,"line_end":1320,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468204,"byte_end":10468207,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468212,"byte_end":10468282,"line_start":1322,"line_end":1322,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468287,"byte_end":10468290,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468295,"byte_end":10468352,"line_start":1324,"line_end":1324,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469019,"byte_end":10469029,"line_start":1348,"line_end":1348,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468516,"byte_end":10468563,"line_start":1329,"line_end":1329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468568,"byte_end":10468571,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468576,"byte_end":10468590,"line_start":1331,"line_end":1331,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468595,"byte_end":10468602,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468607,"byte_end":10468637,"line_start":1333,"line_end":1333,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468642,"byte_end":10468658,"line_start":1334,"line_end":1334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468663,"byte_end":10468666,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468671,"byte_end":10468689,"line_start":1336,"line_end":1336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468694,"byte_end":10468733,"line_start":1337,"line_end":1337,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468738,"byte_end":10468764,"line_start":1338,"line_end":1338,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468769,"byte_end":10468829,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468834,"byte_end":10468837,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468842,"byte_end":10468894,"line_start":1341,"line_end":1341,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468899,"byte_end":10468944,"line_start":1342,"line_end":1342,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468949,"byte_end":10468958,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468963,"byte_end":10468966,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468971,"byte_end":10468985,"line_start":1345,"line_end":1345,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10468990,"byte_end":10468995,"line_start":1346,"line_end":1346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469000,"byte_end":10469007,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":108331,"byte_end":108337,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":108268,"byte_end":108321,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":108390,"byte_end":108395,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":108352,"byte_end":108380,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3833},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","parent":null,"children":[{"krate":0,"index":3834},{"krate":0,"index":3903},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":3929},{"krate":0,"index":3934},{"krate":0,"index":3973},{"krate":0,"index":4041},{"krate":0,"index":4045},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":4048},{"krate":0,"index":4055},{"krate":0,"index":4057},{"krate":0,"index":4062},{"krate":0,"index":3987},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":4005},{"krate":0,"index":4009},{"krate":0,"index":4011},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21850,"byte_end":21877,"line_start":189,"line_end":189,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21953,"byte_end":21970,"line_start":191,"line_end":191,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10471662,"byte_end":10471729,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10471730,"byte_end":10471733,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10471734,"byte_end":10471814,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10471815,"byte_end":10471912,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10471913,"byte_end":10472004,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472005,"byte_end":10472101,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472102,"byte_end":10472185,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472186,"byte_end":10472189,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472190,"byte_end":10472242,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472243,"byte_end":10472246,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472247,"byte_end":10472261,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472262,"byte_end":10472265,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472266,"byte_end":10472345,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472346,"byte_end":10472366,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472367,"byte_end":10472370,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472371,"byte_end":10472384,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472385,"byte_end":10472417,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472418,"byte_end":10472421,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472422,"byte_end":10472440,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472441,"byte_end":10472504,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is similar as with the standard library's `Command` type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472505,"byte_end":10472582,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/     let mut child = Command::new(\"echo\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472583,"byte_end":10472627,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/         .arg(\"hello\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472628,"byte_end":10472653,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/         .arg(\"world\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472654,"byte_end":10472679,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472680,"byte_end":10472700,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472701,"byte_end":10472740,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472741,"byte_end":10472744,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Await until the command completes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472745,"byte_end":10472789,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/     let status = child.wait().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472790,"byte_end":10472831,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472832,"byte_end":10472888,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472889,"byte_end":10472903,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472904,"byte_end":10472909,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472910,"byte_end":10472917,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472918,"byte_end":10472921,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10472922,"byte_end":10472999,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473000,"byte_end":10473042,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473043,"byte_end":10473046,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473047,"byte_end":10473060,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473061,"byte_end":10473093,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473094,"byte_end":10473097,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473098,"byte_end":10473116,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473117,"byte_end":10473180,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473181,"byte_end":10473254,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473255,"byte_end":10473300,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473301,"byte_end":10473368,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473369,"byte_end":10473407,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473408,"byte_end":10473411,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473412,"byte_end":10473447,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473448,"byte_end":10473451,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473452,"byte_end":10473493,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473494,"byte_end":10473546,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473547,"byte_end":10473561,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473562,"byte_end":10473567,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473568,"byte_end":10473575,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473576,"byte_end":10473579,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473580,"byte_end":10473620,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473621,"byte_end":10473624,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473625,"byte_end":10473638,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473639,"byte_end":10473687,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473688,"byte_end":10473720,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473721,"byte_end":10473724,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473725,"byte_end":10473753,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473754,"byte_end":10473757,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473758,"byte_end":10473776,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473777,"byte_end":10473840,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473841,"byte_end":10473883,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473884,"byte_end":10473887,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473888,"byte_end":10473967,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10473968,"byte_end":10474045,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474046,"byte_end":10474122,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474123,"byte_end":10474202,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474203,"byte_end":10474277,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474278,"byte_end":10474313,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474314,"byte_end":10474317,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474318,"byte_end":10474353,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474354,"byte_end":10474401,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474402,"byte_end":10474405,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474406,"byte_end":10474446,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474447,"byte_end":10474508,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474509,"byte_end":10474512,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474513,"byte_end":10474569,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474570,"byte_end":10474573,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474574,"byte_end":10474645,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474646,"byte_end":10474712,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474713,"byte_end":10474746,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/         let status = child.wait().await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474747,"byte_end":10474790,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474791,"byte_end":10474853,"line_start":87,"line_end":87,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474854,"byte_end":10474857,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474858,"byte_end":10474911,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474912,"byte_end":10474923,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474924,"byte_end":10474927,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474928,"byte_end":10474986,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10474987,"byte_end":10475026,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475027,"byte_end":10475036,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475037,"byte_end":10475040,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475041,"byte_end":10475055,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475056,"byte_end":10475061,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475062,"byte_end":10475069,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475070,"byte_end":10475073,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ With some coordination, we can also pipe the output of one command into","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475074,"byte_end":10475149,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ another.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475150,"byte_end":10475162,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475163,"byte_end":10475166,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475167,"byte_end":10475180,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/ use tokio::join;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475181,"byte_end":10475201,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475202,"byte_end":10475234,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475235,"byte_end":10475265,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475266,"byte_end":10475294,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475295,"byte_end":10475298,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475299,"byte_end":10475317,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475318,"byte_end":10475381,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/     let mut echo = Command::new(\"echo\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475382,"byte_end":10475425,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/         .arg(\"hello world!\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475426,"byte_end":10475458,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/         .stdout(Stdio::piped())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475459,"byte_end":10475494,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475495,"byte_end":10475515,"line_start":114,"line_end":114,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn echo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475516,"byte_end":10475560,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475561,"byte_end":10475564,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     let tr_stdin: Stdio = echo","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475565,"byte_end":10475599,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/         .stdout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475600,"byte_end":10475619,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/         .take()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475620,"byte_end":10475639,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475640,"byte_end":10475661,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/         .try_into()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475662,"byte_end":10475685,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/         .expect(\"failed to convert to Stdio\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475686,"byte_end":10475736,"line_start":122,"line_end":122,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475737,"byte_end":10475740,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/     let tr = Command::new(\"tr\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475741,"byte_end":10475776,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/         .arg(\"a-z\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475777,"byte_end":10475800,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/         .arg(\"A-Z\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475801,"byte_end":10475824,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/         .stdin(tr_stdin)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475825,"byte_end":10475853,"line_start":127,"line_end":127,"column_start":1,"column_end":29}},{"value":"/         .stdout(Stdio::piped())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475854,"byte_end":10475889,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475890,"byte_end":10475910,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn tr\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475911,"byte_end":10475953,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475954,"byte_end":10475957,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     let (echo_result, tr_output) = join!(echo.wait(), tr.wait_with_output());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10475958,"byte_end":10476039,"line_start":132,"line_end":132,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476040,"byte_end":10476043,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/     assert!(echo_result.unwrap().success());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476044,"byte_end":10476092,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476093,"byte_end":10476096,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     let tr_output = tr_output.expect(\"failed to await tr\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476097,"byte_end":10476160,"line_start":136,"line_end":136,"column_start":1,"column_end":64}},{"value":"/     assert!(tr_output.status.success());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476161,"byte_end":10476205,"line_start":137,"line_end":137,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476206,"byte_end":10476209,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(tr_output.stdout, b\"HELLO WORLD!\\n\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476210,"byte_end":10476266,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476267,"byte_end":10476270,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476271,"byte_end":10476285,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476286,"byte_end":10476291,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476292,"byte_end":10476299,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476300,"byte_end":10476303,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476304,"byte_end":10476317,"line_start":145,"line_end":145,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476318,"byte_end":10476321,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476322,"byte_end":10476350,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476351,"byte_end":10476354,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476355,"byte_end":10476430,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476431,"byte_end":10476504,"line_start":150,"line_end":150,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476505,"byte_end":10476585,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476586,"byte_end":10476589,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476590,"byte_end":10476666,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476667,"byte_end":10476741,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476742,"byte_end":10476757,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476758,"byte_end":10476761,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476762,"byte_end":10476783,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476784,"byte_end":10476787,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476788,"byte_end":10476866,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476867,"byte_end":10476947,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10476948,"byte_end":10477030,"line_start":161,"line_end":161,"column_start":1,"column_end":83}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477031,"byte_end":10477114,"line_start":162,"line_end":162,"column_start":1,"column_end":84}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477115,"byte_end":10477196,"line_start":163,"line_end":163,"column_start":1,"column_end":82}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477197,"byte_end":10477220,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477221,"byte_end":10477224,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477225,"byte_end":10477305,"line_start":166,"line_end":166,"column_start":1,"column_end":81}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477306,"byte_end":10477390,"line_start":167,"line_end":167,"column_start":1,"column_end":85}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477391,"byte_end":10477451,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477452,"byte_end":10477455,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477456,"byte_end":10477541,"line_start":170,"line_end":170,"column_start":1,"column_end":86}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477542,"byte_end":10477606,"line_start":171,"line_end":171,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477607,"byte_end":10477610,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477611,"byte_end":10477651,"line_start":173,"line_end":173,"column_start":1,"column_end":41}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477652,"byte_end":10477720,"line_start":174,"line_end":174,"column_start":1,"column_end":69}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10477721,"byte_end":10477757,"line_start":175,"line_end":175,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478886,"byte_end":10478893,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4037},{"krate":0,"index":4038}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478374,"byte_end":10478471,"line_start":209,"line_end":209,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478472,"byte_end":10478564,"line_start":210,"line_end":210,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478565,"byte_end":10478651,"line_start":211,"line_end":211,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478652,"byte_end":10478682,"line_start":212,"line_end":212,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478683,"byte_end":10478686,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478687,"byte_end":10478772,"line_start":214,"line_end":214,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478773,"byte_end":10478776,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478777,"byte_end":10478829,"line_start":216,"line_end":216,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10478830,"byte_end":10478857,"line_start":217,"line_end":217,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480243,"byte_end":10480246,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479134,"byte_end":10479193,"line_start":232,"line_end":232,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479198,"byte_end":10479259,"line_start":233,"line_end":233,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479264,"byte_end":10479267,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479272,"byte_end":10479305,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479310,"byte_end":10479357,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479362,"byte_end":10479415,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479420,"byte_end":10479508,"line_start":238,"line_end":238,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479513,"byte_end":10479516,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479521,"byte_end":10479582,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479587,"byte_end":10479623,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479628,"byte_end":10479631,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479636,"byte_end":10479708,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479713,"byte_end":10479735,"line_start":244,"line_end":244,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479740,"byte_end":10479743,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479748,"byte_end":10479811,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479816,"byte_end":10479863,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479868,"byte_end":10479927,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479932,"byte_end":10479971,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479976,"byte_end":10479979,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479984,"byte_end":10479998,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480003,"byte_end":10480006,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480011,"byte_end":10480027,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480032,"byte_end":10480035,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480040,"byte_end":10480053,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480058,"byte_end":10480090,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480095,"byte_end":10480132,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480137,"byte_end":10480144,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480149,"byte_end":10480152,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480157,"byte_end":10480231,"line_start":260,"line_end":260,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481093,"byte_end":10481096,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480345,"byte_end":10480389,"line_start":265,"line_end":265,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480394,"byte_end":10480397,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480402,"byte_end":10480461,"line_start":267,"line_end":267,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480466,"byte_end":10480469,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480474,"byte_end":10480487,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480492,"byte_end":10480530,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480535,"byte_end":10480566,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480571,"byte_end":10480578,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480583,"byte_end":10480586,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480591,"byte_end":10480610,"line_start":274,"line_end":274,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480615,"byte_end":10480618,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480623,"byte_end":10480636,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480641,"byte_end":10480679,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480684,"byte_end":10480700,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480705,"byte_end":10480733,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480738,"byte_end":10480745,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480750,"byte_end":10480753,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480758,"byte_end":10480802,"line_start":282,"line_end":282,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480807,"byte_end":10480810,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480815,"byte_end":10480846,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480851,"byte_end":10480854,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480859,"byte_end":10480873,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480878,"byte_end":10480881,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480886,"byte_end":10480902,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480907,"byte_end":10480910,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480915,"byte_end":10480928,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480933,"byte_end":10480965,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480970,"byte_end":10480973,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10480978,"byte_end":10481014,"line_start":293,"line_end":293,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481019,"byte_end":10481041,"line_start":294,"line_end":294,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481046,"byte_end":10481069,"line_start":295,"line_end":295,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481074,"byte_end":10481081,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481580,"byte_end":10481584,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481202,"byte_end":10481253,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481258,"byte_end":10481261,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481266,"byte_end":10481308,"line_start":304,"line_end":304,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481313,"byte_end":10481316,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481321,"byte_end":10481350,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481355,"byte_end":10481358,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481363,"byte_end":10481377,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481382,"byte_end":10481385,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481390,"byte_end":10481406,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481411,"byte_end":10481414,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481419,"byte_end":10481432,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481437,"byte_end":10481469,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481474,"byte_end":10481477,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481482,"byte_end":10481518,"line_start":315,"line_end":315,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481523,"byte_end":10481556,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481561,"byte_end":10481568,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482200,"byte_end":10482203,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481756,"byte_end":10481811,"line_start":327,"line_end":327,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481816,"byte_end":10481819,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481824,"byte_end":10481919,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481924,"byte_end":10481970,"line_start":330,"line_end":330,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481975,"byte_end":10481978,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10481983,"byte_end":10481997,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482002,"byte_end":10482005,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482010,"byte_end":10482026,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482031,"byte_end":10482034,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482039,"byte_end":10482052,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482057,"byte_end":10482089,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482094,"byte_end":10482097,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482102,"byte_end":10482138,"line_start":339,"line_end":339,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482143,"byte_end":10482176,"line_start":340,"line_end":340,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482181,"byte_end":10482188,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483077,"byte_end":10483081,"line_start":374,"line_end":374,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482375,"byte_end":10482434,"line_start":351,"line_end":351,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482439,"byte_end":10482442,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482447,"byte_end":10482461,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482466,"byte_end":10482469,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482474,"byte_end":10482490,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482495,"byte_end":10482498,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482503,"byte_end":10482516,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482521,"byte_end":10482553,"line_start":358,"line_end":358,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482558,"byte_end":10482588,"line_start":359,"line_end":359,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482593,"byte_end":10482610,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482615,"byte_end":10482649,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482654,"byte_end":10482657,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482662,"byte_end":10482710,"line_start":363,"line_end":363,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482715,"byte_end":10482755,"line_start":364,"line_end":364,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482760,"byte_end":10482826,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482831,"byte_end":10482851,"line_start":366,"line_end":366,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482856,"byte_end":10482859,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482864,"byte_end":10482906,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482911,"byte_end":10482944,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482949,"byte_end":10482986,"line_start":370,"line_end":370,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10482991,"byte_end":10483015,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483020,"byte_end":10483053,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483058,"byte_end":10483065,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483559,"byte_end":10483569,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483286,"byte_end":10483330,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483335,"byte_end":10483338,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483343,"byte_end":10483357,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483362,"byte_end":10483365,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483370,"byte_end":10483386,"line_start":388,"line_end":388,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483391,"byte_end":10483394,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483399,"byte_end":10483412,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483417,"byte_end":10483449,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483454,"byte_end":10483457,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483462,"byte_end":10483498,"line_start":393,"line_end":393,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483503,"byte_end":10483535,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483540,"byte_end":10483547,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483964,"byte_end":10483973,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483682,"byte_end":10483742,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483747,"byte_end":10483750,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483755,"byte_end":10483769,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483774,"byte_end":10483777,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483782,"byte_end":10483798,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483803,"byte_end":10483806,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483811,"byte_end":10483824,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483829,"byte_end":10483861,"line_start":408,"line_end":408,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483866,"byte_end":10483869,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483874,"byte_end":10483910,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483915,"byte_end":10483940,"line_start":411,"line_end":411,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10483945,"byte_end":10483952,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484818,"byte_end":10484829,"line_start":440,"line_end":440,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484057,"byte_end":10484110,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484115,"byte_end":10484118,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484123,"byte_end":10484155,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484160,"byte_end":10484163,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484168,"byte_end":10484243,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484248,"byte_end":10484317,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484322,"byte_end":10484394,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484399,"byte_end":10484462,"line_start":425,"line_end":425,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484467,"byte_end":10484528,"line_start":426,"line_end":426,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484533,"byte_end":10484536,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484541,"byte_end":10484588,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484593,"byte_end":10484596,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484601,"byte_end":10484615,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484620,"byte_end":10484623,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484628,"byte_end":10484644,"line_start":432,"line_end":432,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484649,"byte_end":10484652,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484657,"byte_end":10484670,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484675,"byte_end":10484707,"line_start":435,"line_end":435,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484712,"byte_end":10484715,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484720,"byte_end":10484756,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484761,"byte_end":10484794,"line_start":438,"line_end":438,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484799,"byte_end":10484806,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485524,"byte_end":10485529,"line_start":464,"line_end":464,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10484942,"byte_end":10485019,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485024,"byte_end":10485027,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485032,"byte_end":10485099,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485104,"byte_end":10485154,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485159,"byte_end":10485162,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485167,"byte_end":10485212,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485217,"byte_end":10485258,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485263,"byte_end":10485266,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485271,"byte_end":10485285,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485290,"byte_end":10485293,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485298,"byte_end":10485314,"line_start":455,"line_end":455,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485319,"byte_end":10485322,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485327,"byte_end":10485340,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485345,"byte_end":10485375,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485380,"byte_end":10485412,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485417,"byte_end":10485420,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485425,"byte_end":10485461,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485466,"byte_end":10485500,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485505,"byte_end":10485512,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486220,"byte_end":10486226,"line_start":488,"line_end":488,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485636,"byte_end":10485715,"line_start":469,"line_end":469,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485720,"byte_end":10485723,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485728,"byte_end":10485795,"line_start":471,"line_end":471,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485800,"byte_end":10485850,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485855,"byte_end":10485858,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485863,"byte_end":10485908,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485913,"byte_end":10485954,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485959,"byte_end":10485962,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485967,"byte_end":10485981,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485986,"byte_end":10485989,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10485994,"byte_end":10486010,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486015,"byte_end":10486018,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486023,"byte_end":10486036,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486041,"byte_end":10486074,"line_start":482,"line_end":482,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486079,"byte_end":10486107,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486112,"byte_end":10486115,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486120,"byte_end":10486156,"line_start":485,"line_end":485,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486161,"byte_end":10486196,"line_start":486,"line_end":486,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486201,"byte_end":10486208,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486919,"byte_end":10486925,"line_start":512,"line_end":512,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486334,"byte_end":10486412,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486417,"byte_end":10486420,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486425,"byte_end":10486492,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486497,"byte_end":10486547,"line_start":496,"line_end":496,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486552,"byte_end":10486555,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486560,"byte_end":10486605,"line_start":498,"line_end":498,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486610,"byte_end":10486651,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486656,"byte_end":10486659,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486664,"byte_end":10486678,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486683,"byte_end":10486686,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486691,"byte_end":10486707,"line_start":503,"line_end":503,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486712,"byte_end":10486715,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486720,"byte_end":10486733,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486738,"byte_end":10486771,"line_start":506,"line_end":506,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486776,"byte_end":10486806,"line_start":507,"line_end":507,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486811,"byte_end":10486814,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486819,"byte_end":10486855,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486860,"byte_end":10486895,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10486900,"byte_end":10486907,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488559,"byte_end":10488571,"line_start":543,"line_end":543,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487033,"byte_end":10487109,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487114,"byte_end":10487175,"line_start":518,"line_end":518,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487180,"byte_end":10487183,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487188,"byte_end":10487265,"line_start":520,"line_end":520,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487270,"byte_end":10487349,"line_start":521,"line_end":521,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487354,"byte_end":10487366,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487371,"byte_end":10487374,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487379,"byte_end":10487392,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487397,"byte_end":10487400,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487405,"byte_end":10487483,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487488,"byte_end":10487568,"line_start":527,"line_end":527,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487573,"byte_end":10487655,"line_start":528,"line_end":528,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487660,"byte_end":10487743,"line_start":529,"line_end":529,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487748,"byte_end":10487829,"line_start":530,"line_end":530,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487834,"byte_end":10487857,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487862,"byte_end":10487865,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Although issuing a `kill` signal to the child process is a synchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487870,"byte_end":10487944,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ operation, the resulting zombie process cannot be `.await`ed inside of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10487949,"byte_end":10488027,"line_start":534,"line_end":534,"column_start":5,"column_end":83}},{"value":"/ destructor to avoid blocking other tasks. The tokio runtime will, on a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488032,"byte_end":10488106,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ best-effort basis, attempt to reap and clean up such processes in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488111,"byte_end":10488184,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ background, but makes no additional guarantees are made with regards","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488189,"byte_end":10488261,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488266,"byte_end":10488326,"line_start":538,"line_end":538,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488331,"byte_end":10488334,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ If stronger guarantees are required, it is recommended to avoid dropping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488339,"byte_end":10488415,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ a [`Child`] handle where possible, and instead utilize `child.wait().await`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488420,"byte_end":10488499,"line_start":541,"line_end":541,"column_start":5,"column_end":84}},{"value":"/ or `child.kill().await` where possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488504,"byte_end":10488547,"line_start":542,"line_end":542,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488970,"byte_end":10488984,"line_start":554,"line_end":554,"column_start":12,"column_end":26},"name":"creation_flags","qualname":"<Command>::creation_flags","value":"pub fn creation_flags(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the [process creation flags][1] to be passed to `CreateProcess`.","sig":null,"attributes":[{"value":"/ Sets the [process creation flags][1] to be passed to `CreateProcess`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488687,"byte_end":10488760,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488765,"byte_end":10488768,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ These will always be ORed with `CREATE_UNICODE_ENVIRONMENT`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488773,"byte_end":10488837,"line_start":550,"line_end":550,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488842,"byte_end":10488845,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488850,"byte_end":10488938,"line_start":552,"line_end":552,"column_start":5,"column_end":93}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10488943,"byte_end":10488958,"line_start":553,"line_end":553,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494211,"byte_end":10494216,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491363,"byte_end":10491433,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491438,"byte_end":10491441,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491446,"byte_end":10491517,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491522,"byte_end":10491525,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491530,"byte_end":10491601,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491606,"byte_end":10491681,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491686,"byte_end":10491761,"line_start":620,"line_end":620,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491766,"byte_end":10491838,"line_start":621,"line_end":621,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491843,"byte_end":10491862,"line_start":622,"line_end":622,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491867,"byte_end":10491870,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491875,"byte_end":10491946,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491951,"byte_end":10491966,"line_start":625,"line_end":625,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491971,"byte_end":10491974,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491979,"byte_end":10491993,"line_start":627,"line_end":627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10491998,"byte_end":10492001,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492006,"byte_end":10492022,"line_start":629,"line_end":629,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492027,"byte_end":10492030,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492035,"byte_end":10492048,"line_start":631,"line_end":631,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492053,"byte_end":10492085,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492090,"byte_end":10492093,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492098,"byte_end":10492149,"line_start":634,"line_end":634,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492154,"byte_end":10492180,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492185,"byte_end":10492205,"line_start":636,"line_end":636,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492210,"byte_end":10492259,"line_start":637,"line_end":637,"column_start":5,"column_end":54}},{"value":"/         .wait()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492264,"byte_end":10492283,"line_start":638,"line_end":638,"column_start":5,"column_end":24}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492288,"byte_end":10492306,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492311,"byte_end":10492358,"line_start":640,"line_end":640,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492363,"byte_end":10492368,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492373,"byte_end":10492380,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492385,"byte_end":10492388,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492393,"byte_end":10492406,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492411,"byte_end":10492414,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492419,"byte_end":10492447,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492452,"byte_end":10492455,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492460,"byte_end":10492535,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492540,"byte_end":10492613,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492618,"byte_end":10492698,"line_start":650,"line_end":650,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492703,"byte_end":10492706,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492711,"byte_end":10492787,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492792,"byte_end":10492866,"line_start":653,"line_end":653,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492871,"byte_end":10492886,"line_start":654,"line_end":654,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492891,"byte_end":10492894,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492899,"byte_end":10492920,"line_start":656,"line_end":656,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492925,"byte_end":10492928,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10492933,"byte_end":10493011,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493016,"byte_end":10493096,"line_start":659,"line_end":659,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493101,"byte_end":10493183,"line_start":660,"line_end":660,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493188,"byte_end":10493271,"line_start":661,"line_end":661,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493276,"byte_end":10493357,"line_start":662,"line_end":662,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493362,"byte_end":10493385,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493390,"byte_end":10493393,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493398,"byte_end":10493478,"line_start":665,"line_end":665,"column_start":5,"column_end":85}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493483,"byte_end":10493567,"line_start":666,"line_end":666,"column_start":5,"column_end":89}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493572,"byte_end":10493632,"line_start":667,"line_end":667,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493637,"byte_end":10493640,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493645,"byte_end":10493730,"line_start":669,"line_end":669,"column_start":5,"column_end":90}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493735,"byte_end":10493799,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493804,"byte_end":10493807,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493812,"byte_end":10493852,"line_start":672,"line_end":672,"column_start":5,"column_end":45}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493857,"byte_end":10493925,"line_start":673,"line_end":673,"column_start":5,"column_end":73}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493930,"byte_end":10493966,"line_start":674,"line_end":674,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493971,"byte_end":10493974,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493979,"byte_end":10493991,"line_start":676,"line_end":676,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10493996,"byte_end":10493999,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494004,"byte_end":10494085,"line_start":678,"line_end":678,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494090,"byte_end":10494167,"line_start":679,"line_end":679,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494172,"byte_end":10494199,"line_start":680,"line_end":680,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496076,"byte_end":10496082,"line_start":731,"line_end":731,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494732,"byte_end":10494805,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494810,"byte_end":10494841,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494846,"byte_end":10494849,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494854,"byte_end":10494925,"line_start":696,"line_end":696,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10494930,"byte_end":10495009,"line_start":697,"line_end":697,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495014,"byte_end":10495052,"line_start":698,"line_end":698,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495057,"byte_end":10495060,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495065,"byte_end":10495136,"line_start":700,"line_end":700,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495141,"byte_end":10495156,"line_start":701,"line_end":701,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495161,"byte_end":10495164,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495169,"byte_end":10495237,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495242,"byte_end":10495291,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495296,"byte_end":10495299,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495304,"byte_end":10495347,"line_start":706,"line_end":706,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495352,"byte_end":10495355,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495360,"byte_end":10495372,"line_start":708,"line_end":708,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495377,"byte_end":10495380,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495385,"byte_end":10495460,"line_start":710,"line_end":710,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495465,"byte_end":10495519,"line_start":711,"line_end":711,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495524,"byte_end":10495527,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495532,"byte_end":10495613,"line_start":713,"line_end":713,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495618,"byte_end":10495695,"line_start":714,"line_end":714,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495700,"byte_end":10495727,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495732,"byte_end":10495735,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495740,"byte_end":10495754,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495759,"byte_end":10495762,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495767,"byte_end":10495783,"line_start":719,"line_end":719,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495788,"byte_end":10495791,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495796,"byte_end":10495809,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495814,"byte_end":10495846,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495851,"byte_end":10495854,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495859,"byte_end":10495910,"line_start":724,"line_end":724,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495915,"byte_end":10495941,"line_start":725,"line_end":725,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495946,"byte_end":10495967,"line_start":726,"line_end":726,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495972,"byte_end":10495990,"line_start":727,"line_end":727,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10495995,"byte_end":10496042,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496047,"byte_end":10496052,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496057,"byte_end":10496064,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498425,"byte_end":10498431,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496564,"byte_end":10496637,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496642,"byte_end":10496675,"line_start":749,"line_end":749,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496680,"byte_end":10496683,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496688,"byte_end":10496750,"line_start":751,"line_end":751,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496755,"byte_end":10496830,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496835,"byte_end":10496909,"line_start":753,"line_end":753,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496914,"byte_end":10496977,"line_start":754,"line_end":754,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10496982,"byte_end":10497023,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497028,"byte_end":10497031,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497036,"byte_end":10497107,"line_start":757,"line_end":757,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497112,"byte_end":10497165,"line_start":758,"line_end":758,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497170,"byte_end":10497240,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497245,"byte_end":10497318,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497323,"byte_end":10497342,"line_start":761,"line_end":761,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497347,"byte_end":10497350,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497355,"byte_end":10497426,"line_start":763,"line_end":763,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497431,"byte_end":10497446,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497451,"byte_end":10497454,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497459,"byte_end":10497527,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497532,"byte_end":10497581,"line_start":767,"line_end":767,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497586,"byte_end":10497589,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497594,"byte_end":10497637,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497642,"byte_end":10497645,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497650,"byte_end":10497662,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497667,"byte_end":10497670,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497675,"byte_end":10497750,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497755,"byte_end":10497809,"line_start":774,"line_end":774,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497814,"byte_end":10497817,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497822,"byte_end":10497903,"line_start":776,"line_end":776,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497908,"byte_end":10497985,"line_start":777,"line_end":777,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10497990,"byte_end":10498017,"line_start":778,"line_end":778,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498022,"byte_end":10498036,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498041,"byte_end":10498044,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498049,"byte_end":10498065,"line_start":781,"line_end":781,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498070,"byte_end":10498073,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498078,"byte_end":10498091,"line_start":783,"line_end":783,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498096,"byte_end":10498128,"line_start":784,"line_end":784,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498133,"byte_end":10498136,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498141,"byte_end":10498164,"line_start":786,"line_end":786,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498169,"byte_end":10498230,"line_start":787,"line_end":787,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498235,"byte_end":10498256,"line_start":788,"line_end":788,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498261,"byte_end":10498279,"line_start":789,"line_end":789,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498284,"byte_end":10498332,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498337,"byte_end":10498391,"line_start":791,"line_end":791,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498396,"byte_end":10498401,"line_start":792,"line_end":792,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498406,"byte_end":10498413,"line_start":793,"line_end":793,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500758,"byte_end":10500763,"line_start":884,"line_end":884,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500245,"byte_end":10500310,"line_start":873,"line_end":873,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500311,"byte_end":10500314,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500315,"byte_end":10500328,"line_start":875,"line_end":875,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500329,"byte_end":10500404,"line_start":876,"line_end":876,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500405,"byte_end":10500478,"line_start":877,"line_end":877,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500479,"byte_end":10500559,"line_start":878,"line_end":878,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500560,"byte_end":10500563,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500564,"byte_end":10500638,"line_start":880,"line_end":880,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500639,"byte_end":10500713,"line_start":881,"line_end":881,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500714,"byte_end":10500729,"line_start":882,"line_end":882,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501238,"byte_end":10501243,"line_start":896,"line_end":896,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4057},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured. To avoid partially moving the `child` and thus blocking\n yourself from calling functions on `child` while using `stdin`, you might\n find it helpful to do:","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500794,"byte_end":10500869,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ been captured. To avoid partially moving the `child` and thus blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500874,"byte_end":10500948,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/ yourself from calling functions on `child` while using `stdin`, you might","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10500953,"byte_end":10501030,"line_start":889,"line_end":889,"column_start":5,"column_end":82}},{"value":"/ find it helpful to do:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501035,"byte_end":10501061,"line_start":890,"line_end":890,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501066,"byte_end":10501069,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501074,"byte_end":10501087,"line_start":892,"line_end":892,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501092,"byte_end":10501168,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ let stdin = child.stdin.take().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501173,"byte_end":10501217,"line_start":894,"line_end":894,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501222,"byte_end":10501229,"line_start":895,"line_end":895,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501728,"byte_end":10501734,"line_start":908,"line_end":908,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4057},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured. You might find it helpful to do","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501270,"byte_end":10501345,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ has been captured. You might find it helpful to do","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501350,"byte_end":10501404,"line_start":899,"line_end":899,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501409,"byte_end":10501412,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501417,"byte_end":10501430,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501435,"byte_end":10501511,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ let stdout = child.stdout.take().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501516,"byte_end":10501562,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501567,"byte_end":10501574,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501579,"byte_end":10501582,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ to avoid partially moving the `child` and thus blocking yourself from calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501587,"byte_end":10501668,"line_start":906,"line_end":906,"column_start":5,"column_end":86}},{"value":"/ functions on `child` while using `stdout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501673,"byte_end":10501719,"line_start":907,"line_end":907,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502219,"byte_end":10502225,"line_start":920,"line_end":920,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4057},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured. You might find it helpful to do","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501762,"byte_end":10501836,"line_start":910,"line_end":910,"column_start":5,"column_end":79}},{"value":"/ has been captured. You might find it helpful to do","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501841,"byte_end":10501895,"line_start":911,"line_end":911,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501900,"byte_end":10501903,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501908,"byte_end":10501921,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10501926,"byte_end":10502002,"line_start":914,"line_end":914,"column_start":5,"column_end":81}},{"value":"/ let stderr = child.stderr.take().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502007,"byte_end":10502053,"line_start":915,"line_end":915,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502058,"byte_end":10502065,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502070,"byte_end":10502073,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ to avoid partially moving the `child` and thus blocking yourself from calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502078,"byte_end":10502159,"line_start":918,"line_end":918,"column_start":5,"column_end":86}},{"value":"/ functions on `child` while using `stderr`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502164,"byte_end":10502210,"line_start":919,"line_end":919,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502617,"byte_end":10502619,"line_start":930,"line_end":930,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child\n while it is still running.","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502268,"byte_end":10502341,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/ while it is still running.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502346,"byte_end":10502376,"line_start":925,"line_end":925,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502381,"byte_end":10502384,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ Once the child has been polled to completion this will return `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502389,"byte_end":10502462,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ This is done to avoid confusion on platforms like Unix where the OS","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502467,"byte_end":10502538,"line_start":928,"line_end":928,"column_start":5,"column_end":76}},{"value":"/ identifier could be reused once the process has completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502543,"byte_end":10502605,"line_start":929,"line_end":929,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503228,"byte_end":10503238,"line_start":944,"line_end":944,"column_start":12,"column_end":22},"name":"start_kill","qualname":"<Child>::start_kill","value":"pub fn start_kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to force the child to exit, but does not wait for the request\n to take effect.","sig":null,"attributes":[{"value":"/ Attempts to force the child to exit, but does not wait for the request","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502798,"byte_end":10502872,"line_start":937,"line_end":937,"column_start":5,"column_end":79}},{"value":"/ to take effect.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502877,"byte_end":10502896,"line_start":938,"line_end":938,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502901,"byte_end":10502904,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, this is the equivalent to sending a SIGKILL. Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502909,"byte_end":10502981,"line_start":940,"line_end":940,"column_start":5,"column_end":77}},{"value":"/ that on Unix platforms it is possible for a zombie process to remain","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502986,"byte_end":10503058,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/ after a kill is sent; to avoid this, the caller should ensure that either","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503063,"byte_end":10503140,"line_start":942,"line_end":942,"column_start":5,"column_end":82}},{"value":"/ `child.wait().await` or `child.try_wait()` is invoked successfully.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503145,"byte_end":10503216,"line_start":943,"line_end":943,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504563,"byte_end":10504567,"line_start":979,"line_end":979,"column_start":18,"column_end":22},"name":"kill","qualname":"<Child>::kill","value":"pub async fn kill<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503559,"byte_end":10503588,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503593,"byte_end":10503596,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503601,"byte_end":10503663,"line_start":956,"line_end":956,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503668,"byte_end":10503671,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ If the child has to be killed remotely, it is possible to do it using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503676,"byte_end":10503749,"line_start":958,"line_end":958,"column_start":5,"column_end":78}},{"value":"/ a combination of the select! macro and a oneshot channel. In the following","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503754,"byte_end":10503832,"line_start":959,"line_end":959,"column_start":5,"column_end":83}},{"value":"/ example, the child will run until completion unless a message is sent on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503837,"byte_end":10503913,"line_start":960,"line_end":960,"column_start":5,"column_end":81}},{"value":"/ the oneshot channel. If that happens, the child is killed immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503918,"byte_end":10503991,"line_start":961,"line_end":961,"column_start":5,"column_end":78}},{"value":"/ using the `.kill()` method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10503996,"byte_end":10504027,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504032,"byte_end":10504035,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504040,"byte_end":10504053,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504058,"byte_end":10504090,"line_start":965,"line_end":965,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::oneshot::channel;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504095,"byte_end":10504133,"line_start":966,"line_end":966,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504138,"byte_end":10504141,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504146,"byte_end":10504164,"line_start":968,"line_end":968,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504169,"byte_end":10504190,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/     let (send, recv) = channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504195,"byte_end":10504238,"line_start":970,"line_end":970,"column_start":5,"column_end":48}},{"value":"/     let mut child = Command::new(\"sleep\").arg(\"1\").spawn().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504243,"byte_end":10504315,"line_start":971,"line_end":971,"column_start":5,"column_end":77}},{"value":"/     tokio::spawn(async move { send.send(()) });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504320,"byte_end":10504371,"line_start":972,"line_end":972,"column_start":5,"column_end":56}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504376,"byte_end":10504400,"line_start":973,"line_end":973,"column_start":5,"column_end":29}},{"value":"/         _ = child.wait() => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504405,"byte_end":10504439,"line_start":974,"line_end":974,"column_start":5,"column_end":39}},{"value":"/         _ = recv => child.kill().await.expect(\"kill failed\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504444,"byte_end":10504509,"line_start":975,"line_end":975,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504514,"byte_end":10504523,"line_start":976,"line_end":976,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504528,"byte_end":10504533,"line_start":977,"line_end":977,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504538,"byte_end":10504545,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505979,"byte_end":10505983,"line_start":1018,"line_end":1018,"column_start":18,"column_end":22},"name":"wait","qualname":"<Child>::wait","value":"pub async fn wait<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the child to exit completely, returning the status that it\n exited with. This function will continue to have the same return value\n after it has been called at least once.","sig":null,"attributes":[{"value":"/ Waits for the child to exit completely, returning the status that it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504681,"byte_end":10504753,"line_start":985,"line_end":985,"column_start":5,"column_end":77}},{"value":"/ exited with. This function will continue to have the same return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504758,"byte_end":10504832,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ after it has been called at least once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504837,"byte_end":10504880,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504885,"byte_end":10504888,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504893,"byte_end":10504958,"line_start":989,"line_end":989,"column_start":5,"column_end":70}},{"value":"/ before waiting. This helps avoid deadlock: it ensures that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10504963,"byte_end":10505029,"line_start":990,"line_end":990,"column_start":5,"column_end":71}},{"value":"/ child does not block waiting for input from the parent, while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505034,"byte_end":10505099,"line_start":991,"line_end":991,"column_start":5,"column_end":70}},{"value":"/ the parent waits for the child to exit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505104,"byte_end":10505147,"line_start":992,"line_end":992,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505152,"byte_end":10505155,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ If the caller wishes to explicitly control when the child's stdin","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505160,"byte_end":10505229,"line_start":994,"line_end":994,"column_start":5,"column_end":74}},{"value":"/ handle is closed, they may `.take()` it before calling `.wait()`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505234,"byte_end":10505303,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505308,"byte_end":10505311,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505316,"byte_end":10505329,"line_start":997,"line_end":997,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505334,"byte_end":10505367,"line_start":998,"line_end":998,"column_start":5,"column_end":38}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505372,"byte_end":10505404,"line_start":999,"line_end":999,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505409,"byte_end":10505412,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505417,"byte_end":10505435,"line_start":1001,"line_end":1001,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505440,"byte_end":10505461,"line_start":1002,"line_end":1002,"column_start":5,"column_end":26}},{"value":"/     let mut child = Command::new(\"cat\").spawn().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505466,"byte_end":10505527,"line_start":1003,"line_end":1003,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505532,"byte_end":10505535,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/     let mut stdin = child.stdin.take().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505540,"byte_end":10505592,"line_start":1005,"line_end":1005,"column_start":5,"column_end":57}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505597,"byte_end":10505630,"line_start":1006,"line_end":1006,"column_start":5,"column_end":38}},{"value":"/         // do something with stdin here...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505635,"byte_end":10505681,"line_start":1007,"line_end":1007,"column_start":5,"column_end":51}},{"value":"/         stdin.write_all(b\"hello world\\n\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505686,"byte_end":10505747,"line_start":1008,"line_end":1008,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505752,"byte_end":10505755,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/         // then drop when finished","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505760,"byte_end":10505798,"line_start":1010,"line_end":1010,"column_start":5,"column_end":43}},{"value":"/         drop(stdin);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505803,"byte_end":10505827,"line_start":1011,"line_end":1011,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505832,"byte_end":10505843,"line_start":1012,"line_end":1012,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505848,"byte_end":10505851,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     // wait for the process to complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505856,"byte_end":10505899,"line_start":1014,"line_end":1014,"column_start":5,"column_end":48}},{"value":"/     let _ = child.wait().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505904,"byte_end":10505939,"line_start":1015,"line_end":1015,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505944,"byte_end":10505949,"line_start":1016,"line_end":1016,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10505954,"byte_end":10505961,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507331,"byte_end":10507339,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"try_wait","qualname":"<Child>::try_wait","value":"pub fn try_wait(&mut Self) -> io::Result<Option<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to collect the exit status of the child if it has already\n exited.","sig":null,"attributes":[{"value":"/ Attempts to collect the exit status of the child if it has already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506522,"byte_end":10506592,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506597,"byte_end":10506608,"line_start":1038,"line_end":1038,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506613,"byte_end":10506616,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506621,"byte_end":10506686,"line_start":1040,"line_end":1040,"column_start":5,"column_end":70}},{"value":"/ check to see if the child process has exited or not. If the child has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506691,"byte_end":10506764,"line_start":1041,"line_end":1041,"column_start":5,"column_end":78}},{"value":"/ exited then on Unix the process ID is reaped. This function is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506769,"byte_end":10506835,"line_start":1042,"line_end":1042,"column_start":5,"column_end":71}},{"value":"/ guaranteed to repeatedly return a successful exit status so long as the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506840,"byte_end":10506915,"line_start":1043,"line_end":1043,"column_start":5,"column_end":80}},{"value":"/ child has already exited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506920,"byte_end":10506949,"line_start":1044,"line_end":1044,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506954,"byte_end":10506957,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ If the child has exited, then `Ok(Some(status))` is returned. If the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10506962,"byte_end":10507034,"line_start":1046,"line_end":1046,"column_start":5,"column_end":77}},{"value":"/ exit status is not available at this time then `Ok(None)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507039,"byte_end":10507113,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"/ If an error occurs, then that error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507118,"byte_end":10507170,"line_start":1048,"line_end":1048,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507175,"byte_end":10507178,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ Note that unlike `wait`, this function will not attempt to drop stdin,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507183,"byte_end":10507257,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ nor will it wake the current task if the child exits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507262,"byte_end":10507319,"line_start":1051,"line_end":1051,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508799,"byte_end":10508815,"line_start":1085,"line_end":1085,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507869,"byte_end":10507943,"line_start":1069,"line_end":1069,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10507948,"byte_end":10508000,"line_start":1070,"line_end":1070,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508005,"byte_end":10508008,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508013,"byte_end":10508088,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508093,"byte_end":10508168,"line_start":1073,"line_end":1073,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508173,"byte_end":10508195,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508200,"byte_end":10508203,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508208,"byte_end":10508280,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508285,"byte_end":10508359,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508364,"byte_end":10508439,"line_start":1078,"line_end":1078,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508444,"byte_end":10508462,"line_start":1079,"line_end":1079,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508467,"byte_end":10508470,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508475,"byte_end":10508549,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508554,"byte_end":10508630,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508635,"byte_end":10508706,"line_start":1083,"line_end":1083,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10508711,"byte_end":10508781,"line_start":1084,"line_end":1084,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509700,"byte_end":10509710,"line_start":1114,"line_end":1114,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4065}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509486,"byte_end":10509537,"line_start":1109,"line_end":1109,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509538,"byte_end":10509541,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509542,"byte_end":10509625,"line_start":1111,"line_end":1111,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509626,"byte_end":10509671,"line_start":1112,"line_end":1112,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509951,"byte_end":10509962,"line_start":1123,"line_end":1123,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4069}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509744,"byte_end":10509796,"line_start":1118,"line_end":1118,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509797,"byte_end":10509800,"line_start":1119,"line_end":1119,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509801,"byte_end":10509876,"line_start":1120,"line_end":1120,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509877,"byte_end":10509922,"line_start":1121,"line_end":1121,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510203,"byte_end":10510214,"line_start":1132,"line_end":1132,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4073}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10509997,"byte_end":10510048,"line_start":1127,"line_end":1127,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510049,"byte_end":10510052,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510053,"byte_end":10510128,"line_start":1129,"line_end":1129,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510129,"byte_end":10510174,"line_start":1130,"line_end":1130,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4094},{"krate":0,"index":4699},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":5005},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5069},{"krate":0,"index":5175},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5328},{"krate":0,"index":5547},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5580},{"krate":0,"index":5584},{"krate":0,"index":5586},{"krate":0,"index":5593},{"krate":0,"index":5566},{"krate":0,"index":5567}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10522884,"byte_end":10522906,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10522907,"byte_end":10522910,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10522911,"byte_end":10522984,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10522985,"byte_end":10523058,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523059,"byte_end":10523062,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523063,"byte_end":10523141,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523142,"byte_end":10523199,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523200,"byte_end":10523270,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523271,"byte_end":10523343,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523344,"byte_end":10523347,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523348,"byte_end":10523428,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523429,"byte_end":10523509,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523510,"byte_end":10523591,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523592,"byte_end":10523672,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523673,"byte_end":10523676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523677,"byte_end":10523688,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523689,"byte_end":10523692,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523693,"byte_end":10523772,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523773,"byte_end":10523782,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523783,"byte_end":10523786,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523787,"byte_end":10523800,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523801,"byte_end":10523833,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523834,"byte_end":10523883,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523884,"byte_end":10523887,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523888,"byte_end":10523906,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523907,"byte_end":10523970,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10523971,"byte_end":10524037,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524038,"byte_end":10524041,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524042,"byte_end":10524056,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524057,"byte_end":10524116,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524117,"byte_end":10524120,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524121,"byte_end":10524158,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524159,"byte_end":10524199,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524200,"byte_end":10524203,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524204,"byte_end":10524284,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524285,"byte_end":10524307,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524308,"byte_end":10524371,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524372,"byte_end":10524412,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524413,"byte_end":10524463,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524464,"byte_end":10524499,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524500,"byte_end":10524535,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524536,"byte_end":10524618,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524619,"byte_end":10524654,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524655,"byte_end":10524680,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524681,"byte_end":10524703,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524704,"byte_end":10524707,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524708,"byte_end":10524750,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524751,"byte_end":10524823,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524824,"byte_end":10524901,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524902,"byte_end":10524933,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524934,"byte_end":10524955,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524956,"byte_end":10524973,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524974,"byte_end":10524989,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10524990,"byte_end":10524999,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525000,"byte_end":10525005,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525006,"byte_end":10525013,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525014,"byte_end":10525017,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525018,"byte_end":10525096,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525097,"byte_end":10525175,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525176,"byte_end":10525237,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525238,"byte_end":10525241,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525242,"byte_end":10525295,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525296,"byte_end":10525299,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525300,"byte_end":10525313,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525314,"byte_end":10525346,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525347,"byte_end":10525396,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525397,"byte_end":10525429,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525430,"byte_end":10525433,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525434,"byte_end":10525491,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525492,"byte_end":10525521,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525522,"byte_end":10525556,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525557,"byte_end":10525560,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525561,"byte_end":10525591,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525592,"byte_end":10525619,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525620,"byte_end":10525690,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525691,"byte_end":10525694,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525695,"byte_end":10525713,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525714,"byte_end":10525777,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525778,"byte_end":10525781,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525782,"byte_end":10525823,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525824,"byte_end":10525868,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525869,"byte_end":10525872,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525873,"byte_end":10525957,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525958,"byte_end":10525984,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10525985,"byte_end":10526052,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526053,"byte_end":10526097,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526098,"byte_end":10526152,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526153,"byte_end":10526192,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526193,"byte_end":10526232,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526233,"byte_end":10526319,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526320,"byte_end":10526359,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526360,"byte_end":10526389,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526390,"byte_end":10526416,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526417,"byte_end":10526420,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526421,"byte_end":10526467,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526468,"byte_end":10526544,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526545,"byte_end":10526626,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526627,"byte_end":10526662,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526663,"byte_end":10526688,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526689,"byte_end":10526710,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526711,"byte_end":10526730,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526731,"byte_end":10526744,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526745,"byte_end":10526755,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526756,"byte_end":10526761,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526762,"byte_end":10526769,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526770,"byte_end":10526773,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526774,"byte_end":10526803,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526804,"byte_end":10526807,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526808,"byte_end":10526886,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526887,"byte_end":10526963,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10526964,"byte_end":10527006,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527007,"byte_end":10527010,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527011,"byte_end":10527042,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527043,"byte_end":10527046,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527047,"byte_end":10527122,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527123,"byte_end":10527201,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527202,"byte_end":10527280,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527281,"byte_end":10527365,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527366,"byte_end":10527411,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527412,"byte_end":10527419,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527420,"byte_end":10527443,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527444,"byte_end":10527447,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527448,"byte_end":10527507,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527508,"byte_end":10527555,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527556,"byte_end":10527570,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527571,"byte_end":10527578,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527579,"byte_end":10527582,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527583,"byte_end":10527658,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527659,"byte_end":10527734,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527735,"byte_end":10527738,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527739,"byte_end":10527772,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527773,"byte_end":10527776,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527777,"byte_end":10527855,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527856,"byte_end":10527935,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527936,"byte_end":10527962,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527963,"byte_end":10527970,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527971,"byte_end":10527994,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527995,"byte_end":10527998,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10527999,"byte_end":10528058,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528059,"byte_end":10528116,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528117,"byte_end":10528135,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528136,"byte_end":10528150,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528151,"byte_end":10528158,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528159,"byte_end":10528162,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528163,"byte_end":10528188,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528189,"byte_end":10528192,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528193,"byte_end":10528267,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528268,"byte_end":10528348,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528349,"byte_end":10528428,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528429,"byte_end":10528508,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528509,"byte_end":10528578,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528579,"byte_end":10528582,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528583,"byte_end":10528617,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528618,"byte_end":10528621,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528622,"byte_end":10528701,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528702,"byte_end":10528786,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528787,"byte_end":10528797,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528798,"byte_end":10528801,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528802,"byte_end":10528880,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528881,"byte_end":10528960,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10528961,"byte_end":10529019,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529020,"byte_end":10529023,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529024,"byte_end":10529048,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529049,"byte_end":10529073,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529074,"byte_end":10529108,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529109,"byte_end":10529147,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529148,"byte_end":10529194,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529195,"byte_end":10529245,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529246,"byte_end":10529320,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529321,"byte_end":10529401,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529402,"byte_end":10529464,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529465,"byte_end":10529531,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10529532,"byte_end":10529596,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10564753,"byte_end":10564762,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4633}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565251,"byte_end":10565263,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565171,"byte_end":10565239,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565717,"byte_end":10565725,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565338,"byte_end":10565400,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565405,"byte_end":10565408,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565413,"byte_end":10565427,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565432,"byte_end":10565435,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565440,"byte_end":10565447,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565452,"byte_end":10565471,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565476,"byte_end":10565479,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565484,"byte_end":10565502,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565507,"byte_end":10565528,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565533,"byte_end":10565571,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565576,"byte_end":10565603,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565608,"byte_end":10565638,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565643,"byte_end":10565646,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565651,"byte_end":10565683,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565688,"byte_end":10565693,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565698,"byte_end":10565705,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566580,"byte_end":10566590,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565799,"byte_end":10565878,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565883,"byte_end":10565886,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565891,"byte_end":10565903,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565908,"byte_end":10565911,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565916,"byte_end":10565990,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10565995,"byte_end":10566070,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566075,"byte_end":10566133,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566138,"byte_end":10566141,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566146,"byte_end":10566160,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566165,"byte_end":10566168,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566173,"byte_end":10566192,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566197,"byte_end":10566216,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566221,"byte_end":10566224,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566229,"byte_end":10566247,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566252,"byte_end":10566273,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566278,"byte_end":10566316,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566321,"byte_end":10566348,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566353,"byte_end":10566383,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566388,"byte_end":10566391,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566396,"byte_end":10566423,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566428,"byte_end":10566476,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566481,"byte_end":10566532,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566537,"byte_end":10566546,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566551,"byte_end":10566556,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566561,"byte_end":10566568,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567355,"byte_end":10567369,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566731,"byte_end":10566800,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566805,"byte_end":10566877,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566882,"byte_end":10566895,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566900,"byte_end":10566903,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566908,"byte_end":10566922,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566927,"byte_end":10566930,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566935,"byte_end":10566954,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566959,"byte_end":10566978,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566983,"byte_end":10566986,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10566991,"byte_end":10567009,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567014,"byte_end":10567035,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567040,"byte_end":10567078,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567083,"byte_end":10567110,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567115,"byte_end":10567145,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567150,"byte_end":10567153,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567158,"byte_end":10567208,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567213,"byte_end":10567261,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567266,"byte_end":10567307,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567312,"byte_end":10567321,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567326,"byte_end":10567331,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567336,"byte_end":10567343,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587353,"byte_end":10587363,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4636},{"krate":0,"index":4637}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588666,"byte_end":10588671,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587709,"byte_end":10587755,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587760,"byte_end":10587763,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587768,"byte_end":10587837,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587842,"byte_end":10587912,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587917,"byte_end":10587970,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587975,"byte_end":10587978,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587983,"byte_end":10587994,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587999,"byte_end":10588019,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588024,"byte_end":10588027,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588032,"byte_end":10588050,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588055,"byte_end":10588076,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588081,"byte_end":10588117,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588122,"byte_end":10588125,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588130,"byte_end":10588170,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588175,"byte_end":10588234,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588239,"byte_end":10588253,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588258,"byte_end":10588269,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588274,"byte_end":10588277,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588282,"byte_end":10588322,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588327,"byte_end":10588386,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588391,"byte_end":10588406,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588411,"byte_end":10588422,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588427,"byte_end":10588430,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588435,"byte_end":10588466,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588471,"byte_end":10588497,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588502,"byte_end":10588510,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588515,"byte_end":10588518,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588523,"byte_end":10588553,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588558,"byte_end":10588619,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588624,"byte_end":10588632,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588637,"byte_end":10588642,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588647,"byte_end":10588654,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642737,"byte_end":10642744,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641781,"byte_end":10641839,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641840,"byte_end":10641843,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641844,"byte_end":10641916,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641917,"byte_end":10641965,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641966,"byte_end":10641969,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10641970,"byte_end":10642047,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642048,"byte_end":10642087,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642088,"byte_end":10642091,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642092,"byte_end":10642169,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642170,"byte_end":10642183,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642184,"byte_end":10642187,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642188,"byte_end":10642221,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642222,"byte_end":10642286,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642287,"byte_end":10642355,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642356,"byte_end":10642359,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642360,"byte_end":10642374,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642375,"byte_end":10642378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642379,"byte_end":10642386,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642387,"byte_end":10642419,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642420,"byte_end":10642423,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642424,"byte_end":10642439,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642440,"byte_end":10642464,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642465,"byte_end":10642514,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642515,"byte_end":10642545,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642546,"byte_end":10642588,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642589,"byte_end":10642636,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642637,"byte_end":10642657,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642658,"byte_end":10642680,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642681,"byte_end":10642684,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642685,"byte_end":10642711,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642712,"byte_end":10642717,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10642718,"byte_end":10642725,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4966},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644105,"byte_end":10644123,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10643950,"byte_end":10644019,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644024,"byte_end":10644027,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644032,"byte_end":10644093,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644448,"byte_end":10644464,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644192,"byte_end":10644259,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644264,"byte_end":10644267,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644272,"byte_end":10644333,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10644338,"byte_end":10644373,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645994,"byte_end":10646004,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645501,"byte_end":10645539,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645544,"byte_end":10645547,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645552,"byte_end":10645623,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645628,"byte_end":10645704,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645709,"byte_end":10645763,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645768,"byte_end":10645771,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645776,"byte_end":10645790,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645795,"byte_end":10645798,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645803,"byte_end":10645810,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645815,"byte_end":10645838,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645843,"byte_end":10645846,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645851,"byte_end":10645900,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645905,"byte_end":10645926,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645931,"byte_end":10645947,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645952,"byte_end":10645970,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10645975,"byte_end":10645982,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647695,"byte_end":10647709,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646232,"byte_end":10646293,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646298,"byte_end":10646301,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646306,"byte_end":10646378,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646383,"byte_end":10646423,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646428,"byte_end":10646431,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646436,"byte_end":10646449,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646454,"byte_end":10646457,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646462,"byte_end":10646531,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646536,"byte_end":10646539,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646544,"byte_end":10646555,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646560,"byte_end":10646563,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646568,"byte_end":10646641,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646646,"byte_end":10646707,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646712,"byte_end":10646715,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646720,"byte_end":10646723,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646728,"byte_end":10646742,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646747,"byte_end":10646750,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646755,"byte_end":10646799,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646804,"byte_end":10646807,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646812,"byte_end":10646819,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646824,"byte_end":10646847,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646852,"byte_end":10646855,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646860,"byte_end":10646929,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646934,"byte_end":10646983,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10646988,"byte_end":10647014,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647019,"byte_end":10647035,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647040,"byte_end":10647058,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647063,"byte_end":10647066,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647071,"byte_end":10647099,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647104,"byte_end":10647111,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647116,"byte_end":10647119,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647124,"byte_end":10647215,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647220,"byte_end":10647223,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647228,"byte_end":10647235,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647240,"byte_end":10647263,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647268,"byte_end":10647271,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647276,"byte_end":10647333,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647338,"byte_end":10647368,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647373,"byte_end":10647424,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647429,"byte_end":10647445,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647450,"byte_end":10647468,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647473,"byte_end":10647476,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647481,"byte_end":10647546,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647551,"byte_end":10647582,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647587,"byte_end":10647594,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647599,"byte_end":10647602,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647607,"byte_end":10647618,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647623,"byte_end":10647626,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647631,"byte_end":10647683,"line_start":211,"line_end":211,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648341,"byte_end":10648361,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647876,"byte_end":10647960,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647965,"byte_end":10647968,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647973,"byte_end":10647976,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10647981,"byte_end":10648063,"line_start":221,"line_end":221,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648068,"byte_end":10648071,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648076,"byte_end":10648105,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648110,"byte_end":10648113,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648118,"byte_end":10648209,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648214,"byte_end":10648240,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648245,"byte_end":10648248,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648253,"byte_end":10648264,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648269,"byte_end":10648272,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648277,"byte_end":10648329,"line_start":230,"line_end":230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4973},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648917,"byte_end":10648928,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648534,"byte_end":10648598,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648603,"byte_end":10648606,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648611,"byte_end":10648658,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648663,"byte_end":10648666,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648671,"byte_end":10648685,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648690,"byte_end":10648693,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648698,"byte_end":10648705,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648710,"byte_end":10648735,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648740,"byte_end":10648743,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648748,"byte_end":10648769,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648774,"byte_end":10648823,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648828,"byte_end":10648859,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648864,"byte_end":10648881,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648886,"byte_end":10648893,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10648898,"byte_end":10648905,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649777,"byte_end":10649791,"line_start":278,"line_end":278,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649102,"byte_end":10649198,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649203,"byte_end":10649206,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649211,"byte_end":10649273,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649278,"byte_end":10649281,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649286,"byte_end":10649300,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649305,"byte_end":10649308,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649313,"byte_end":10649320,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649325,"byte_end":10649350,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649355,"byte_end":10649408,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649413,"byte_end":10649416,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649421,"byte_end":10649442,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649447,"byte_end":10649496,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649501,"byte_end":10649529,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649534,"byte_end":10649597,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649602,"byte_end":10649663,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649668,"byte_end":10649704,"line_start":273,"line_end":273,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649709,"byte_end":10649719,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649724,"byte_end":10649741,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649746,"byte_end":10649753,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649758,"byte_end":10649765,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650556,"byte_end":10650573,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10649967,"byte_end":10650021,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650026,"byte_end":10650029,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650034,"byte_end":10650106,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650111,"byte_end":10650144,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650149,"byte_end":10650152,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650157,"byte_end":10650225,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650230,"byte_end":10650291,"line_start":292,"line_end":292,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650296,"byte_end":10650299,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650304,"byte_end":10650318,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650323,"byte_end":10650326,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650331,"byte_end":10650338,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650343,"byte_end":10650368,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650373,"byte_end":10650376,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650381,"byte_end":10650402,"line_start":299,"line_end":299,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650407,"byte_end":10650456,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650461,"byte_end":10650498,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650503,"byte_end":10650520,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650525,"byte_end":10650532,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650537,"byte_end":10650544,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4979},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651193,"byte_end":10651208,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650680,"byte_end":10650755,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650760,"byte_end":10650775,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650780,"byte_end":10650783,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650788,"byte_end":10650850,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650855,"byte_end":10650858,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650863,"byte_end":10650877,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650882,"byte_end":10650885,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650890,"byte_end":10650897,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650902,"byte_end":10650927,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650932,"byte_end":10650935,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650940,"byte_end":10650961,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10650966,"byte_end":10651020,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651025,"byte_end":10651054,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651059,"byte_end":10651098,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651103,"byte_end":10651113,"line_start":324,"line_end":324,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651118,"byte_end":10651135,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651140,"byte_end":10651147,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651152,"byte_end":10651159,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651164,"byte_end":10651181,"line_start":328,"line_end":328,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651849,"byte_end":10651863,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651380,"byte_end":10651431,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651436,"byte_end":10651439,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651444,"byte_end":10651506,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651511,"byte_end":10651514,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651519,"byte_end":10651533,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651538,"byte_end":10651541,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651546,"byte_end":10651553,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651558,"byte_end":10651583,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651588,"byte_end":10651591,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651596,"byte_end":10651617,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651622,"byte_end":10651676,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651681,"byte_end":10651709,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651714,"byte_end":10651754,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651759,"byte_end":10651769,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651774,"byte_end":10651791,"line_start":351,"line_end":351,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651796,"byte_end":10651803,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651808,"byte_end":10651815,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10651820,"byte_end":10651837,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652427,"byte_end":10652432,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652035,"byte_end":10652072,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652077,"byte_end":10652080,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652085,"byte_end":10652145,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652150,"byte_end":10652153,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652158,"byte_end":10652172,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652177,"byte_end":10652180,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652185,"byte_end":10652192,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652197,"byte_end":10652229,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652234,"byte_end":10652237,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652242,"byte_end":10652301,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652306,"byte_end":10652309,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652314,"byte_end":10652337,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652342,"byte_end":10652391,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652396,"byte_end":10652403,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10652408,"byte_end":10652415,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653611,"byte_end":10653628,"line_start":416,"line_end":416,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653102,"byte_end":10653162,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653167,"byte_end":10653170,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653175,"byte_end":10653246,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653251,"byte_end":10653295,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653300,"byte_end":10653303,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653308,"byte_end":10653321,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653326,"byte_end":10653329,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653334,"byte_end":10653341,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653346,"byte_end":10653371,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653376,"byte_end":10653406,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653411,"byte_end":10653414,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653419,"byte_end":10653440,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653445,"byte_end":10653494,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653499,"byte_end":10653553,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653558,"byte_end":10653575,"line_start":413,"line_end":413,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653580,"byte_end":10653587,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10653592,"byte_end":10653599,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10655375,"byte_end":10655384,"line_start":469,"line_end":469,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10655908,"byte_end":10655919,"line_start":492,"line_end":492,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666847,"byte_end":10666853,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666578,"byte_end":10666604,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666605,"byte_end":10666608,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666609,"byte_end":10666697,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666698,"byte_end":10666748,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666749,"byte_end":10666752,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10666753,"byte_end":10666811,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667540,"byte_end":10667550,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":5152},{"krate":0,"index":5153}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667304,"byte_end":10667330,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667331,"byte_end":10667334,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667335,"byte_end":10667416,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667417,"byte_end":10667449,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667450,"byte_end":10667453,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667454,"byte_end":10667511,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668024,"byte_end":10668029,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667634,"byte_end":10667709,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667714,"byte_end":10667792,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667797,"byte_end":10667865,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667870,"byte_end":10667873,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667878,"byte_end":10667918,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667923,"byte_end":10667970,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667975,"byte_end":10668012,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669523,"byte_end":10669530,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668174,"byte_end":10668238,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668243,"byte_end":10668246,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668251,"byte_end":10668262,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668267,"byte_end":10668270,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668275,"byte_end":10668369,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668374,"byte_end":10668466,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668471,"byte_end":10668547,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668552,"byte_end":10668555,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668560,"byte_end":10668574,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668579,"byte_end":10668582,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668587,"byte_end":10668669,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668674,"byte_end":10668720,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668725,"byte_end":10668728,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668733,"byte_end":10668740,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668745,"byte_end":10668767,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668772,"byte_end":10668806,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668811,"byte_end":10668827,"line_start":78,"line_end":78,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668832,"byte_end":10668871,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668876,"byte_end":10668898,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668903,"byte_end":10668934,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668939,"byte_end":10668942,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668947,"byte_end":10668988,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10668993,"byte_end":10669028,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669033,"byte_end":10669057,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669062,"byte_end":10669118,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669123,"byte_end":10669130,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669135,"byte_end":10669138,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669143,"byte_end":10669161,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669166,"byte_end":10669193,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669198,"byte_end":10669283,"line_start":91,"line_end":91,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669288,"byte_end":10669329,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669334,"byte_end":10669379,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669384,"byte_end":10669427,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669432,"byte_end":10669439,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669444,"byte_end":10669473,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669478,"byte_end":10669487,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669492,"byte_end":10669499,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669504,"byte_end":10669511,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5049},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669804,"byte_end":10669815,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669611,"byte_end":10669671,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669676,"byte_end":10669679,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669684,"byte_end":10669735,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669740,"byte_end":10669743,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669748,"byte_end":10669792,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670770,"byte_end":10670775,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669918,"byte_end":10669960,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669965,"byte_end":10669968,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10669973,"byte_end":10670044,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670049,"byte_end":10670124,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670129,"byte_end":10670152,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670157,"byte_end":10670160,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670165,"byte_end":10670224,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670229,"byte_end":10670232,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670237,"byte_end":10670258,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670263,"byte_end":10670266,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670271,"byte_end":10670285,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670290,"byte_end":10670293,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670298,"byte_end":10670305,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670310,"byte_end":10670342,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670347,"byte_end":10670350,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670355,"byte_end":10670371,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670376,"byte_end":10670401,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670406,"byte_end":10670443,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670448,"byte_end":10670485,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670490,"byte_end":10670519,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670524,"byte_end":10670527,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670532,"byte_end":10670587,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670592,"byte_end":10670616,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670621,"byte_end":10670672,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670677,"byte_end":10670684,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670689,"byte_end":10670696,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670701,"byte_end":10670708,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10670744,"byte_end":10670756,"line_start":140,"line_end":140,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5052},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671678,"byte_end":10671692,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671075,"byte_end":10671141,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671146,"byte_end":10671161,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671166,"byte_end":10671169,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671174,"byte_end":10671188,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671193,"byte_end":10671196,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671201,"byte_end":10671208,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671213,"byte_end":10671245,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671250,"byte_end":10671253,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671258,"byte_end":10671274,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671279,"byte_end":10671304,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671309,"byte_end":10671346,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671351,"byte_end":10671388,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671393,"byte_end":10671422,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671427,"byte_end":10671430,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671435,"byte_end":10671501,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671506,"byte_end":10671536,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671541,"byte_end":10671592,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671597,"byte_end":10671604,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671609,"byte_end":10671616,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10671652,"byte_end":10671664,"line_start":170,"line_end":170,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5055},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10672961,"byte_end":10672976,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10672881,"byte_end":10672949,"line_start":206,"line_end":206,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10531973,"byte_end":10531980,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5568},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10533963,"byte_end":10533966,"line_start":321,"line_end":321,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10533845,"byte_end":10533880,"line_start":319,"line_end":319,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5569},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10534604,"byte_end":10534610,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5570},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10535534,"byte_end":10535539,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10535504,"byte_end":10535516,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10536312,"byte_end":10536326,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10536282,"byte_end":10536294,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5575},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10538251,"byte_end":10538259,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5577},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10539747,"byte_end":10539752,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10541322,"byte_end":10541338,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10542767,"byte_end":10542786,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","parent":null,"children":[{"krate":0,"index":5633},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5690},{"krate":0,"index":5694}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":22415,"byte_end":22441,"line_start":217,"line_end":217,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":22516,"byte_end":22533,"line_start":219,"line_end":219,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10738746,"byte_end":10738788,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10738789,"byte_end":10738792,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10738793,"byte_end":10738870,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10738871,"byte_end":10738949,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10738950,"byte_end":10739030,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739031,"byte_end":10739059,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739060,"byte_end":10739063,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are some fundamental limitations of this crate documented on the OS","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739064,"byte_end":10739141,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ specific structures, as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739142,"byte_end":10739175,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739176,"byte_end":10739179,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739180,"byte_end":10739194,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739195,"byte_end":10739198,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739199,"byte_end":10739234,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739235,"byte_end":10739238,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739239,"byte_end":10739257,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739258,"byte_end":10739280,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739281,"byte_end":10739284,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739285,"byte_end":10739303,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739304,"byte_end":10739367,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739368,"byte_end":10739400,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739401,"byte_end":10739438,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739439,"byte_end":10739453,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739454,"byte_end":10739459,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739460,"byte_end":10739467,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739468,"byte_end":10739471,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739472,"byte_end":10739499,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739500,"byte_end":10739503,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739504,"byte_end":10739522,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739523,"byte_end":10739543,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739544,"byte_end":10739594,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739595,"byte_end":10739598,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739599,"byte_end":10739617,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739618,"byte_end":10739681,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739682,"byte_end":10739730,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739731,"byte_end":10739786,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739787,"byte_end":10739790,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739791,"byte_end":10739841,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739842,"byte_end":10739856,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739857,"byte_end":10739889,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739890,"byte_end":10739929,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739930,"byte_end":10739939,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739940,"byte_end":10739945,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739946,"byte_end":10739953,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10739954,"byte_end":10739961,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10742037,"byte_end":10742043,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740335,"byte_end":10740401,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740402,"byte_end":10740405,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740406,"byte_end":10740483,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740484,"byte_end":10740562,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740563,"byte_end":10740612,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740613,"byte_end":10740616,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740617,"byte_end":10740693,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740694,"byte_end":10740772,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740773,"byte_end":10740811,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740812,"byte_end":10740815,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740816,"byte_end":10740829,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740830,"byte_end":10740833,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740834,"byte_end":10740916,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740917,"byte_end":10740997,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10740998,"byte_end":10741079,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741080,"byte_end":10741105,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741106,"byte_end":10741109,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741110,"byte_end":10741183,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741184,"byte_end":10741256,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741257,"byte_end":10741335,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741336,"byte_end":10741413,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741414,"byte_end":10741490,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741491,"byte_end":10741570,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741571,"byte_end":10741595,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741596,"byte_end":10741599,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741600,"byte_end":10741678,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741679,"byte_end":10741739,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741740,"byte_end":10741743,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741744,"byte_end":10741758,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741759,"byte_end":10741762,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741763,"byte_end":10741781,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741782,"byte_end":10741804,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741805,"byte_end":10741808,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741809,"byte_end":10741827,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741828,"byte_end":10741849,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741850,"byte_end":10741889,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741890,"byte_end":10741893,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741894,"byte_end":10741962,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741963,"byte_end":10741966,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10741967,"byte_end":10742009,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10742010,"byte_end":10742015,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\ctrl_c.rs","byte_start":10742016,"byte_end":10742023,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::signal::windows","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","parent":null,"children":[{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5767},{"krate":0,"index":5770},{"krate":0,"index":5719},{"krate":0,"index":5721},{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5726},{"krate":0,"index":5775},{"krate":0,"index":5777},{"krate":0,"index":5728},{"krate":0,"index":5735},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5742},{"krate":0,"index":5783},{"krate":0,"index":5785},{"krate":0,"index":5747},{"krate":0,"index":5752}],"decl_id":null,"docs":" Windows-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Windows-specific types for signal handling.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766702,"byte_end":10766749,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766750,"byte_end":10766753,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Windows and allows receiving \"ctrl-c\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766754,"byte_end":10766826,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ and \"ctrl-break\" notifications. These events are listened for via the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766827,"byte_end":10766900,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ `SetConsoleCtrlHandler` function which receives events of the type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766901,"byte_end":10766971,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ `CTRL_C_EVENT` and `CTRL_BREAK_EVENT`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10766972,"byte_end":10767014,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10767016,"byte_end":10767032,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771027,"byte_end":10771033,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"ctrl_c","qualname":"::signal::windows::ctrl_c","value":"pub fn ctrl_c() -> io::Result<CtrlC>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-c\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-c\" notifications sent to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770441,"byte_end":10770515,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770516,"byte_end":10770528,"line_start":135,"line_end":135,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770529,"byte_end":10770532,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770533,"byte_end":10770547,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770548,"byte_end":10770551,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770552,"byte_end":10770570,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770571,"byte_end":10770610,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770611,"byte_end":10770614,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770615,"byte_end":10770633,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770634,"byte_end":10770697,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770698,"byte_end":10770745,"line_start":144,"line_end":144,"column_start":1,"column_end":48}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770746,"byte_end":10770781,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770782,"byte_end":10770785,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770786,"byte_end":10770839,"line_start":147,"line_end":147,"column_start":1,"column_end":54}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770840,"byte_end":10770879,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770880,"byte_end":10770912,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770913,"byte_end":10770976,"line_start":150,"line_end":150,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770977,"byte_end":10770986,"line_start":151,"line_end":151,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770987,"byte_end":10770990,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10770991,"byte_end":10771005,"line_start":153,"line_end":153,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771006,"byte_end":10771011,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771012,"byte_end":10771019,"line_start":155,"line_end":155,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5779},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771634,"byte_end":10771639,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"CtrlC","qualname":"::signal::windows::CtrlC","value":"CtrlC {  }","parent":null,"children":[{"krate":0,"index":5780}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-c\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-c\" notifications sent to the process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771120,"byte_end":10771201,"line_start":160,"line_end":160,"column_start":1,"column_end":82}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771202,"byte_end":10771234,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771235,"byte_end":10771238,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771239,"byte_end":10771310,"line_start":163,"line_end":163,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771311,"byte_end":10771397,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771398,"byte_end":10771481,"line_start":165,"line_end":165,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771482,"byte_end":10771556,"line_start":166,"line_end":166,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771557,"byte_end":10771605,"line_start":167,"line_end":167,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772402,"byte_end":10772406,"line_start":197,"line_end":197,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlC>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771680,"byte_end":10771728,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771733,"byte_end":10771736,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771741,"byte_end":10771813,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771818,"byte_end":10771821,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771826,"byte_end":10771840,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771845,"byte_end":10771848,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771853,"byte_end":10771871,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771876,"byte_end":10771915,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771920,"byte_end":10771923,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771928,"byte_end":10771946,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771951,"byte_end":10772014,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772019,"byte_end":10772066,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772071,"byte_end":10772106,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772111,"byte_end":10772114,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772119,"byte_end":10772172,"line_start":188,"line_end":188,"column_start":5,"column_end":58}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772177,"byte_end":10772216,"line_start":189,"line_end":189,"column_start":5,"column_end":44}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772221,"byte_end":10772253,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772258,"byte_end":10772321,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772326,"byte_end":10772335,"line_start":192,"line_end":192,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772340,"byte_end":10772343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772348,"byte_end":10772362,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772367,"byte_end":10772372,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772377,"byte_end":10772384,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773305,"byte_end":10773314,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlC>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772477,"byte_end":10772547,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772552,"byte_end":10772572,"line_start":202,"line_end":202,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772577,"byte_end":10772580,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772585,"byte_end":10772657,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772662,"byte_end":10772665,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772670,"byte_end":10772684,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772689,"byte_end":10772692,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772697,"byte_end":10772743,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772748,"byte_end":10772751,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772756,"byte_end":10772774,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772779,"byte_end":10772801,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772806,"byte_end":10772834,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772839,"byte_end":10772874,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlC;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772879,"byte_end":10772917,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772922,"byte_end":10772925,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772930,"byte_end":10772951,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/     ctrl_c: CtrlC,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772956,"byte_end":10772978,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772983,"byte_end":10772988,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10772993,"byte_end":10772996,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773001,"byte_end":10773031,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773036,"byte_end":10773069,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773074,"byte_end":10773077,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773082,"byte_end":10773169,"line_start":223,"line_end":223,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773174,"byte_end":10773215,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_c.poll_recv(cx)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773220,"byte_end":10773257,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773262,"byte_end":10773271,"line_start":226,"line_end":226,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773276,"byte_end":10773281,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773286,"byte_end":10773293,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5783},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773933,"byte_end":10773942,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"CtrlBreak","qualname":"::signal::windows::CtrlBreak","value":"CtrlBreak {  }","parent":null,"children":[{"krate":0,"index":5784}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-break\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-break\" notifications sent to the process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773415,"byte_end":10773500,"line_start":234,"line_end":234,"column_start":1,"column_end":86}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773501,"byte_end":10773533,"line_start":235,"line_end":235,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773534,"byte_end":10773537,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773538,"byte_end":10773609,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773610,"byte_end":10773696,"line_start":238,"line_end":238,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773697,"byte_end":10773780,"line_start":239,"line_end":239,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773781,"byte_end":10773855,"line_start":240,"line_end":240,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773856,"byte_end":10773904,"line_start":241,"line_end":241,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774656,"byte_end":10774660,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlBreak>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773987,"byte_end":10774035,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774040,"byte_end":10774043,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774048,"byte_end":10774120,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774125,"byte_end":10774128,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774133,"byte_end":10774147,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774152,"byte_end":10774155,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774160,"byte_end":10774178,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774183,"byte_end":10774226,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774231,"byte_end":10774234,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774239,"byte_end":10774257,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774262,"byte_end":10774325,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774330,"byte_end":10774381,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774386,"byte_end":10774425,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774430,"byte_end":10774433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774438,"byte_end":10774495,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774500,"byte_end":10774514,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774519,"byte_end":10774551,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774556,"byte_end":10774602,"line_start":265,"line_end":265,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774607,"byte_end":10774616,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774621,"byte_end":10774626,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774631,"byte_end":10774638,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775575,"byte_end":10775584,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlBreak>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774731,"byte_end":10774801,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774806,"byte_end":10774826,"line_start":274,"line_end":274,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774831,"byte_end":10774834,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774839,"byte_end":10774911,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774916,"byte_end":10774919,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774924,"byte_end":10774938,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774943,"byte_end":10774946,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10774951,"byte_end":10774997,"line_start":280,"line_end":280,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775002,"byte_end":10775005,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775010,"byte_end":10775028,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775033,"byte_end":10775055,"line_start":283,"line_end":283,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775060,"byte_end":10775088,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775093,"byte_end":10775128,"line_start":285,"line_end":285,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlBreak;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775133,"byte_end":10775175,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775180,"byte_end":10775183,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775188,"byte_end":10775209,"line_start":288,"line_end":288,"column_start":5,"column_end":26}},{"value":"/     ctrl_break: CtrlBreak,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775214,"byte_end":10775244,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775249,"byte_end":10775254,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775259,"byte_end":10775262,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775267,"byte_end":10775297,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775302,"byte_end":10775335,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775340,"byte_end":10775343,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775348,"byte_end":10775435,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775440,"byte_end":10775481,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_break.poll_recv(cx)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775486,"byte_end":10775527,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775532,"byte_end":10775541,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775546,"byte_end":10775551,"line_start":299,"line_end":299,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775556,"byte_end":10775563,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776230,"byte_end":10776240,"line_start":326,"line_end":326,"column_start":8,"column_end":18},"name":"ctrl_break","qualname":"::signal::windows::ctrl_break","value":"pub fn ctrl_break() -> io::Result<CtrlBreak>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-break\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-break\" notifications sent to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775685,"byte_end":10775763,"line_start":306,"line_end":306,"column_start":1,"column_end":79}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775764,"byte_end":10775776,"line_start":307,"line_end":307,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775777,"byte_end":10775780,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775781,"byte_end":10775795,"line_start":309,"line_end":309,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775796,"byte_end":10775799,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775800,"byte_end":10775818,"line_start":311,"line_end":311,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775819,"byte_end":10775862,"line_start":312,"line_end":312,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775863,"byte_end":10775866,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775867,"byte_end":10775885,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775886,"byte_end":10775949,"line_start":315,"line_end":315,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10775950,"byte_end":10776001,"line_start":316,"line_end":316,"column_start":1,"column_end":52}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776002,"byte_end":10776041,"line_start":317,"line_end":317,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776042,"byte_end":10776045,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776046,"byte_end":10776103,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776104,"byte_end":10776118,"line_start":320,"line_end":320,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776119,"byte_end":10776151,"line_start":321,"line_end":321,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776152,"byte_end":10776198,"line_start":322,"line_end":322,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776199,"byte_end":10776208,"line_start":323,"line_end":323,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776209,"byte_end":10776214,"line_start":324,"line_end":324,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10776215,"byte_end":10776222,"line_start":325,"line_end":325,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":5788},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5964},{"krate":0,"index":6370},{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":14080},{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6524},{"krate":0,"index":6525},{"krate":0,"index":6640},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6928},{"krate":0,"index":6929}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10777741,"byte_end":10777805,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10777806,"byte_end":10777809,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10777810,"byte_end":10777885,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10777886,"byte_end":10777966,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10777967,"byte_end":10778046,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778047,"byte_end":10778081,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778082,"byte_end":10778085,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778086,"byte_end":10778110,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778111,"byte_end":10778114,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778115,"byte_end":10778136,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778137,"byte_end":10778140,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778141,"byte_end":10778214,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778215,"byte_end":10778294,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778295,"byte_end":10778364,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778365,"byte_end":10778368,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778369,"byte_end":10778448,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778449,"byte_end":10778526,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778527,"byte_end":10778602,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778603,"byte_end":10778675,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778676,"byte_end":10778748,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778749,"byte_end":10778827,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778828,"byte_end":10778841,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778842,"byte_end":10778845,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778846,"byte_end":10778924,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778925,"byte_end":10778986,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778987,"byte_end":10778990,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10778991,"byte_end":10779015,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779016,"byte_end":10779019,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779020,"byte_end":10779099,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779100,"byte_end":10779178,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779179,"byte_end":10779223,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779224,"byte_end":10779227,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779228,"byte_end":10779308,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779309,"byte_end":10779325,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779326,"byte_end":10779329,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779330,"byte_end":10779337,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779338,"byte_end":10779367,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779368,"byte_end":10779371,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779372,"byte_end":10779415,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779416,"byte_end":10779478,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779479,"byte_end":10779484,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779485,"byte_end":10779488,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779489,"byte_end":10779507,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779508,"byte_end":10779529,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779530,"byte_end":10779572,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779573,"byte_end":10779576,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779577,"byte_end":10779610,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779611,"byte_end":10779658,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779659,"byte_end":10779693,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779694,"byte_end":10779705,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779706,"byte_end":10779709,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779710,"byte_end":10779787,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779788,"byte_end":10779791,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779792,"byte_end":10779834,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779835,"byte_end":10779871,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779872,"byte_end":10779877,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779878,"byte_end":10779885,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779886,"byte_end":10779889,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779890,"byte_end":10779954,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10779955,"byte_end":10780019,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780020,"byte_end":10780082,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780083,"byte_end":10780153,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780154,"byte_end":10780219,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780220,"byte_end":10780230,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780231,"byte_end":10780234,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780235,"byte_end":10780251,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780252,"byte_end":10780255,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780256,"byte_end":10780263,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780264,"byte_end":10780307,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780308,"byte_end":10780359,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780360,"byte_end":10780365,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780366,"byte_end":10780369,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780370,"byte_end":10780388,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780389,"byte_end":10780410,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780411,"byte_end":10780462,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780463,"byte_end":10780499,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780500,"byte_end":10780511,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780512,"byte_end":10780515,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780516,"byte_end":10780593,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780594,"byte_end":10780597,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780598,"byte_end":10780640,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780641,"byte_end":10780686,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780687,"byte_end":10780692,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780693,"byte_end":10780700,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780701,"byte_end":10780704,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780705,"byte_end":10780727,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780728,"byte_end":10780771,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780772,"byte_end":10780775,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780776,"byte_end":10780797,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780798,"byte_end":10780801,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780802,"byte_end":10780879,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780880,"byte_end":10780960,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10780961,"byte_end":10781016,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781017,"byte_end":10781020,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781021,"byte_end":10781099,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781100,"byte_end":10781120,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781121,"byte_end":10781124,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781125,"byte_end":10781132,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781133,"byte_end":10781159,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781160,"byte_end":10781163,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781164,"byte_end":10781217,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781218,"byte_end":10781272,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781273,"byte_end":10781278,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781279,"byte_end":10781282,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781283,"byte_end":10781301,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781302,"byte_end":10781323,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781324,"byte_end":10781370,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781371,"byte_end":10781374,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781375,"byte_end":10781408,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781409,"byte_end":10781437,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781438,"byte_end":10781490,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781491,"byte_end":10781535,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781536,"byte_end":10781549,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781550,"byte_end":10781561,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781562,"byte_end":10781565,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781566,"byte_end":10781613,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781614,"byte_end":10781652,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781653,"byte_end":10781662,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781663,"byte_end":10781668,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781669,"byte_end":10781676,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781677,"byte_end":10781680,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781681,"byte_end":10781761,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781762,"byte_end":10781839,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781840,"byte_end":10781913,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781914,"byte_end":10781989,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10781990,"byte_end":10782003,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782004,"byte_end":10782007,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782008,"byte_end":10782083,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782084,"byte_end":10782163,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782164,"byte_end":10782242,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782243,"byte_end":10782322,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782323,"byte_end":10782403,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782404,"byte_end":10782469,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782470,"byte_end":10782473,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782474,"byte_end":10782554,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782555,"byte_end":10782567,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782568,"byte_end":10782571,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782572,"byte_end":10782585,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782586,"byte_end":10782627,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782628,"byte_end":10782658,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782659,"byte_end":10782685,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782686,"byte_end":10782689,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782690,"byte_end":10782708,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782709,"byte_end":10782748,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782749,"byte_end":10782824,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782825,"byte_end":10782871,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782872,"byte_end":10782875,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782876,"byte_end":10782900,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782901,"byte_end":10782980,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10782981,"byte_end":10783012,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783013,"byte_end":10783045,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783046,"byte_end":10783049,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783050,"byte_end":10783087,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783088,"byte_end":10783150,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783151,"byte_end":10783166,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783167,"byte_end":10783176,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783177,"byte_end":10783180,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783181,"byte_end":10783260,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783261,"byte_end":10783336,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783337,"byte_end":10783415,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783416,"byte_end":10783463,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783464,"byte_end":10783481,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783482,"byte_end":10783485,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783486,"byte_end":10783533,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783534,"byte_end":10783575,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783576,"byte_end":10783585,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783586,"byte_end":10783589,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783590,"byte_end":10783604,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783605,"byte_end":10783610,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783611,"byte_end":10783618,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783619,"byte_end":10783622,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783623,"byte_end":10783698,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783699,"byte_end":10783774,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783775,"byte_end":10783854,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783855,"byte_end":10783920,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783921,"byte_end":10783998,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10783999,"byte_end":10784002,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784003,"byte_end":10784081,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784082,"byte_end":10784162,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784163,"byte_end":10784208,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784209,"byte_end":10784212,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784213,"byte_end":10784220,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784221,"byte_end":10784258,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784259,"byte_end":10784286,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784287,"byte_end":10784290,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784291,"byte_end":10784309,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784310,"byte_end":10784328,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784329,"byte_end":10784372,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784373,"byte_end":10784378,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784379,"byte_end":10784382,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784383,"byte_end":10784401,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784402,"byte_end":10784423,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784424,"byte_end":10784513,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784514,"byte_end":10784517,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784518,"byte_end":10784563,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784564,"byte_end":10784597,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784598,"byte_end":10784635,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784636,"byte_end":10784639,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784640,"byte_end":10784707,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784708,"byte_end":10784735,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784736,"byte_end":10784770,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784771,"byte_end":10784814,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784815,"byte_end":10784852,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784853,"byte_end":10784906,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784907,"byte_end":10784928,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784929,"byte_end":10784946,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784947,"byte_end":10784960,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784961,"byte_end":10784972,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784973,"byte_end":10784976,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10784977,"byte_end":10785015,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785016,"byte_end":10785019,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785020,"byte_end":10785080,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785081,"byte_end":10785105,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785106,"byte_end":10785146,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785147,"byte_end":10785150,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785151,"byte_end":10785206,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785207,"byte_end":10785267,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785268,"byte_end":10785271,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785272,"byte_end":10785342,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785343,"byte_end":10785392,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785393,"byte_end":10785396,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785397,"byte_end":10785450,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785451,"byte_end":10785467,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785468,"byte_end":10785477,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785478,"byte_end":10785481,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785482,"byte_end":10785523,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785524,"byte_end":10785575,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785576,"byte_end":10785615,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785616,"byte_end":10785625,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785626,"byte_end":10785631,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785632,"byte_end":10785639,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785640,"byte_end":10785643,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785644,"byte_end":10785660,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785661,"byte_end":10785664,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785665,"byte_end":10785691,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785692,"byte_end":10785695,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785696,"byte_end":10785763,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785764,"byte_end":10785836,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785837,"byte_end":10785910,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785911,"byte_end":10785964,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785965,"byte_end":10785968,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10785969,"byte_end":10786049,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786050,"byte_end":10786072,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786073,"byte_end":10786076,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786077,"byte_end":10786092,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786093,"byte_end":10786096,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786097,"byte_end":10786104,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786105,"byte_end":10786136,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786137,"byte_end":10786140,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786141,"byte_end":10786159,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786160,"byte_end":10786181,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786182,"byte_end":10786233,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786234,"byte_end":10786271,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786272,"byte_end":10786275,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786276,"byte_end":10786309,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786310,"byte_end":10786364,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786365,"byte_end":10786419,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786420,"byte_end":10786431,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786432,"byte_end":10786435,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786436,"byte_end":10786469,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786470,"byte_end":10786524,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786525,"byte_end":10786579,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786580,"byte_end":10786591,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786592,"byte_end":10786595,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786596,"byte_end":10786625,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786626,"byte_end":10786655,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786656,"byte_end":10786661,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786662,"byte_end":10786669,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786670,"byte_end":10786673,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786674,"byte_end":10786723,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786724,"byte_end":10786727,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786728,"byte_end":10786750,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786751,"byte_end":10786754,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786755,"byte_end":10786831,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786832,"byte_end":10786910,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786911,"byte_end":10786990,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10786991,"byte_end":10787056,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787057,"byte_end":10787060,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787061,"byte_end":10787141,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787142,"byte_end":10787145,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787146,"byte_end":10787220,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787221,"byte_end":10787294,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787295,"byte_end":10787308,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787309,"byte_end":10787312,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787313,"byte_end":10787386,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787387,"byte_end":10787467,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787468,"byte_end":10787543,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787544,"byte_end":10787547,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787548,"byte_end":10787555,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787556,"byte_end":10787583,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787584,"byte_end":10787631,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787632,"byte_end":10787635,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787636,"byte_end":10787652,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787653,"byte_end":10787656,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787657,"byte_end":10787699,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787700,"byte_end":10787719,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787720,"byte_end":10787746,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787747,"byte_end":10787752,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787753,"byte_end":10787756,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787757,"byte_end":10787774,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787775,"byte_end":10787832,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787833,"byte_end":10787891,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787892,"byte_end":10787944,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787945,"byte_end":10787954,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787955,"byte_end":10787960,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787961,"byte_end":10787964,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10787965,"byte_end":10788000,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788001,"byte_end":10788029,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788030,"byte_end":10788035,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788036,"byte_end":10788039,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788040,"byte_end":10788058,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788059,"byte_end":10788080,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788081,"byte_end":10788124,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788125,"byte_end":10788190,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788191,"byte_end":10788194,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788195,"byte_end":10788273,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788274,"byte_end":10788328,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788329,"byte_end":10788332,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788333,"byte_end":10788377,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788378,"byte_end":10788411,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788412,"byte_end":10788430,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788431,"byte_end":10788480,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788481,"byte_end":10788540,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788541,"byte_end":10788544,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788545,"byte_end":10788591,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788592,"byte_end":10788665,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788666,"byte_end":10788669,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788670,"byte_end":10788744,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788745,"byte_end":10788785,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788786,"byte_end":10788827,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788828,"byte_end":10788885,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788886,"byte_end":10788926,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788927,"byte_end":10788944,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788945,"byte_end":10788958,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788959,"byte_end":10788970,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788971,"byte_end":10788974,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10788975,"byte_end":10789008,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789009,"byte_end":10789012,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789013,"byte_end":10789091,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789092,"byte_end":10789146,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789147,"byte_end":10789157,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789158,"byte_end":10789235,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789236,"byte_end":10789314,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789315,"byte_end":10789350,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789351,"byte_end":10789374,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789375,"byte_end":10789438,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789439,"byte_end":10789475,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789476,"byte_end":10789479,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789480,"byte_end":10789530,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789531,"byte_end":10789610,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789611,"byte_end":10789686,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789687,"byte_end":10789740,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789741,"byte_end":10789787,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789788,"byte_end":10789820,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789821,"byte_end":10789824,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789825,"byte_end":10789872,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789873,"byte_end":10789924,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789925,"byte_end":10789928,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789929,"byte_end":10789979,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10789980,"byte_end":10790051,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790052,"byte_end":10790087,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790088,"byte_end":10790091,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790092,"byte_end":10790114,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790115,"byte_end":10790151,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790152,"byte_end":10790195,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790196,"byte_end":10790260,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790261,"byte_end":10790318,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790319,"byte_end":10790322,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790323,"byte_end":10790378,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790379,"byte_end":10790433,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790434,"byte_end":10790437,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790438,"byte_end":10790488,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790489,"byte_end":10790571,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790572,"byte_end":10790597,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790598,"byte_end":10790643,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790644,"byte_end":10790699,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790700,"byte_end":10790703,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790704,"byte_end":10790781,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790782,"byte_end":10790851,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790852,"byte_end":10790926,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790927,"byte_end":10790952,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790953,"byte_end":10790993,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10790994,"byte_end":10791049,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791050,"byte_end":10791084,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791085,"byte_end":10791110,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791111,"byte_end":10791132,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791133,"byte_end":10791150,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791151,"byte_end":10791166,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791167,"byte_end":10791170,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791171,"byte_end":10791204,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791205,"byte_end":10791214,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791215,"byte_end":10791218,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791219,"byte_end":10791260,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791261,"byte_end":10791295,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791296,"byte_end":10791305,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791306,"byte_end":10791311,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791312,"byte_end":10791319,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791320,"byte_end":10791323,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791324,"byte_end":10791369,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791370,"byte_end":10791423,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791424,"byte_end":10791427,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791428,"byte_end":10791455,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791456,"byte_end":10791459,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791460,"byte_end":10791534,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791535,"byte_end":10791609,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791610,"byte_end":10791680,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791681,"byte_end":10791731,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791732,"byte_end":10791735,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791736,"byte_end":10791813,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791814,"byte_end":10791891,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791892,"byte_end":10791895,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791896,"byte_end":10791973,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10791974,"byte_end":10792029,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792030,"byte_end":10792033,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792034,"byte_end":10792113,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792114,"byte_end":10792192,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792193,"byte_end":10792218,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792219,"byte_end":10792222,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792223,"byte_end":10792298,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792299,"byte_end":10792375,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792376,"byte_end":10792443,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792444,"byte_end":10792447,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792448,"byte_end":10792524,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792525,"byte_end":10792601,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792602,"byte_end":10792676,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792677,"byte_end":10792704,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795013,"byte_end":10795020,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794060,"byte_end":10794148,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794149,"byte_end":10794152,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794153,"byte_end":10794160,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794161,"byte_end":10794181,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794182,"byte_end":10794205,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794206,"byte_end":10794235,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794236,"byte_end":10794239,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794240,"byte_end":10794274,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794275,"byte_end":10794298,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794299,"byte_end":10794302,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794303,"byte_end":10794348,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794349,"byte_end":10794394,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794395,"byte_end":10794415,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794416,"byte_end":10794448,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794449,"byte_end":10794503,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794504,"byte_end":10794549,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794550,"byte_end":10794583,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794584,"byte_end":10794620,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794621,"byte_end":10794657,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794658,"byte_end":10794693,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794694,"byte_end":10794708,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794709,"byte_end":10794720,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794721,"byte_end":10794726,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794727,"byte_end":10794801,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794802,"byte_end":10794840,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794841,"byte_end":10794896,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794897,"byte_end":10794968,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794969,"byte_end":10794976,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10794977,"byte_end":10794984,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795483,"byte_end":10795486,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795243,"byte_end":10795310,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795315,"byte_end":10795318,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795323,"byte_end":10795411,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795416,"byte_end":10795471,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796559,"byte_end":10796563,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796085,"byte_end":10796145,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796150,"byte_end":10796153,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796158,"byte_end":10796234,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796239,"byte_end":10796264,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796269,"byte_end":10796272,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796277,"byte_end":10796370,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796375,"byte_end":10796468,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10796473,"byte_end":10796541,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6994},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798484,"byte_end":10798501,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798348,"byte_end":10798448,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798749,"byte_end":10798758,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798539,"byte_end":10798606,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798611,"byte_end":10798614,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798619,"byte_end":10798711,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798716,"byte_end":10798737,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":13894},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":13900},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5826},{"krate":0,"index":5830},{"krate":0,"index":5843},{"krate":0,"index":5844},{"krate":0,"index":5850},{"krate":0,"index":5855},{"krate":0,"index":5861},{"krate":0,"index":5866},{"krate":0,"index":5870},{"krate":0,"index":5875},{"krate":0,"index":5878},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5884},{"krate":0,"index":5886},{"krate":0,"index":5888},{"krate":0,"index":5890},{"krate":0,"index":5892},{"krate":0,"index":5901},{"krate":0,"index":5903},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5911},{"krate":0,"index":5915},{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5929},{"krate":0,"index":5934},{"krate":0,"index":5940},{"krate":0,"index":5946},{"krate":0,"index":5949},{"krate":0,"index":5952},{"krate":0,"index":5957},{"krate":0,"index":5962}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10798800,"byte_end":10798880,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10798881,"byte_end":10798899,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10798900,"byte_end":10798903,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10798904,"byte_end":10798982,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10798983,"byte_end":10799058,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799059,"byte_end":10799137,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799138,"byte_end":10799192,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799193,"byte_end":10799196,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799197,"byte_end":10799273,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799274,"byte_end":10799354,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799355,"byte_end":10799432,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799433,"byte_end":10799483,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799484,"byte_end":10799487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799488,"byte_end":10799566,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799567,"byte_end":10799624,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799625,"byte_end":10799628,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799629,"byte_end":10799707,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799708,"byte_end":10799780,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799781,"byte_end":10799797,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799798,"byte_end":10799801,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799802,"byte_end":10799816,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799817,"byte_end":10799820,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799821,"byte_end":10799901,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799902,"byte_end":10799981,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10799982,"byte_end":10800059,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800060,"byte_end":10800138,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800139,"byte_end":10800146,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800147,"byte_end":10800150,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800151,"byte_end":10800228,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800229,"byte_end":10800304,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800305,"byte_end":10800385,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800386,"byte_end":10800389,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800390,"byte_end":10800462,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800463,"byte_end":10800541,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800542,"byte_end":10800618,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800619,"byte_end":10800678,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800679,"byte_end":10800682,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800683,"byte_end":10800761,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800762,"byte_end":10800836,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800837,"byte_end":10800873,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800874,"byte_end":10800877,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800878,"byte_end":10800957,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10800958,"byte_end":10801035,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801036,"byte_end":10801111,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801112,"byte_end":10801143,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801144,"byte_end":10801147,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801148,"byte_end":10801162,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801163,"byte_end":10801166,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801167,"byte_end":10801242,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801243,"byte_end":10801321,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801322,"byte_end":10801399,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801400,"byte_end":10801431,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801432,"byte_end":10801435,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801436,"byte_end":10801482,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801483,"byte_end":10801551,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801552,"byte_end":10801602,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801603,"byte_end":10801651,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801652,"byte_end":10801727,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801728,"byte_end":10801803,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801804,"byte_end":10801856,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801857,"byte_end":10801860,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801861,"byte_end":10801875,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801876,"byte_end":10801879,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801880,"byte_end":10801895,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801896,"byte_end":10801899,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801900,"byte_end":10801907,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801908,"byte_end":10801939,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801940,"byte_end":10801943,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801944,"byte_end":10801962,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801963,"byte_end":10801984,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10801985,"byte_end":10802036,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802037,"byte_end":10802074,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802075,"byte_end":10802078,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802079,"byte_end":10802112,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802113,"byte_end":10802167,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802168,"byte_end":10802222,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802223,"byte_end":10802234,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802235,"byte_end":10802238,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802239,"byte_end":10802272,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802273,"byte_end":10802327,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802328,"byte_end":10802382,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802383,"byte_end":10802394,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802395,"byte_end":10802398,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802399,"byte_end":10802428,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802429,"byte_end":10802458,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802459,"byte_end":10802464,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802465,"byte_end":10802472,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802473,"byte_end":10802476,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802477,"byte_end":10802493,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802494,"byte_end":10802497,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802498,"byte_end":10802505,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802506,"byte_end":10802537,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802538,"byte_end":10802541,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802542,"byte_end":10802560,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802561,"byte_end":10802582,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802583,"byte_end":10802632,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802633,"byte_end":10802636,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802637,"byte_end":10802666,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802667,"byte_end":10802696,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802697,"byte_end":10802726,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802727,"byte_end":10802730,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802731,"byte_end":10802768,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802769,"byte_end":10802811,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802812,"byte_end":10802815,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802816,"byte_end":10802885,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802886,"byte_end":10802889,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802890,"byte_end":10802939,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802940,"byte_end":10802989,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802990,"byte_end":10802995,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10802996,"byte_end":10803003,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5823},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804200,"byte_end":10804206,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5825}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803407,"byte_end":10803453,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803454,"byte_end":10803457,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803458,"byte_end":10803518,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803519,"byte_end":10803546,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803547,"byte_end":10803550,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803551,"byte_end":10803565,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803566,"byte_end":10803569,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803570,"byte_end":10803577,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803578,"byte_end":10803609,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803610,"byte_end":10803613,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803614,"byte_end":10803632,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803633,"byte_end":10803654,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803655,"byte_end":10803706,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803707,"byte_end":10803744,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803745,"byte_end":10803748,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803749,"byte_end":10803782,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803783,"byte_end":10803837,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803838,"byte_end":10803892,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803893,"byte_end":10803904,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803905,"byte_end":10803908,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803909,"byte_end":10803942,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803943,"byte_end":10803997,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10803998,"byte_end":10804052,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804053,"byte_end":10804064,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804065,"byte_end":10804068,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804069,"byte_end":10804098,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804099,"byte_end":10804128,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804129,"byte_end":10804134,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804135,"byte_end":10804142,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804143,"byte_end":10804146,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804147,"byte_end":10804188,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805254,"byte_end":10805262,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5828},{"krate":0,"index":5829}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804243,"byte_end":10804291,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804292,"byte_end":10804295,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804296,"byte_end":10804362,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804363,"byte_end":10804392,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804393,"byte_end":10804396,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804397,"byte_end":10804475,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804476,"byte_end":10804488,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804489,"byte_end":10804492,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804493,"byte_end":10804600,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804601,"byte_end":10804604,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804605,"byte_end":10804619,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804620,"byte_end":10804623,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804624,"byte_end":10804631,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804632,"byte_end":10804663,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804664,"byte_end":10804667,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804668,"byte_end":10804686,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804687,"byte_end":10804708,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804709,"byte_end":10804760,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804761,"byte_end":10804798,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804799,"byte_end":10804802,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804803,"byte_end":10804836,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804837,"byte_end":10804891,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804892,"byte_end":10804946,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804947,"byte_end":10804958,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804959,"byte_end":10804962,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804963,"byte_end":10804996,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10804997,"byte_end":10805051,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805052,"byte_end":10805106,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805107,"byte_end":10805118,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805119,"byte_end":10805122,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805123,"byte_end":10805152,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805153,"byte_end":10805182,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805183,"byte_end":10805188,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805189,"byte_end":10805196,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805197,"byte_end":10805200,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805201,"byte_end":10805242,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5830},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805411,"byte_end":10805416,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":7001},{"krate":0,"index":7005},{"krate":0,"index":5832},{"krate":0,"index":5835},{"krate":0,"index":7008},{"krate":0,"index":7018},{"krate":0,"index":7014},{"krate":0,"index":7015},{"krate":0,"index":5837},{"krate":0,"index":5839},{"krate":0,"index":7020},{"krate":0,"index":7032},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":5840},{"krate":0,"index":5842}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805423,"byte_end":10805448,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7001},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805920,"byte_end":10805929,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805473,"byte_end":10805538,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805543,"byte_end":10805546,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805551,"byte_end":10805623,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805628,"byte_end":10805705,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805710,"byte_end":10805769,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805774,"byte_end":10805777,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805782,"byte_end":10805832,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805837,"byte_end":10805883,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7004},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805933,"byte_end":10805938,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":7001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7009},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806535,"byte_end":10806541,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7008},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806430,"byte_end":10806505,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806514,"byte_end":10806526,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7011},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806767,"byte_end":10806773,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7008},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806552,"byte_end":10806624,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806633,"byte_end":10806693,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806702,"byte_end":10806705,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806714,"byte_end":10806758,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":7008},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806410,"byte_end":10806419,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7009},{"krate":0,"index":7011}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806177,"byte_end":10806244,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806249,"byte_end":10806252,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806257,"byte_end":10806309,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806314,"byte_end":10806364,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7021},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807613,"byte_end":10807618,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7020},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807413,"byte_end":10807471,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807480,"byte_end":10807537,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807546,"byte_end":10807549,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807558,"byte_end":10807604,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7023},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807734,"byte_end":10807740,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7020},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807629,"byte_end":10807704,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807713,"byte_end":10807725,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7025},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10808013,"byte_end":10808019,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7020},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807751,"byte_end":10807825,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807834,"byte_end":10807902,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807911,"byte_end":10807939,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807948,"byte_end":10807951,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807960,"byte_end":10808004,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":7020},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807390,"byte_end":10807402,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7023},{"krate":0,"index":7025}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807145,"byte_end":10807216,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807221,"byte_end":10807224,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807229,"byte_end":10807289,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807294,"byte_end":10807344,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812214,"byte_end":10812221,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810588,"byte_end":10810664,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810665,"byte_end":10810714,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810715,"byte_end":10810718,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810719,"byte_end":10810788,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810789,"byte_end":10810839,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810840,"byte_end":10810843,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810844,"byte_end":10810918,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810919,"byte_end":10810994,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810995,"byte_end":10811063,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811064,"byte_end":10811067,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811068,"byte_end":10811144,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811145,"byte_end":10811226,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811227,"byte_end":10811266,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811267,"byte_end":10811270,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811271,"byte_end":10811317,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811318,"byte_end":10811386,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811387,"byte_end":10811437,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811438,"byte_end":10811490,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811491,"byte_end":10811550,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811551,"byte_end":10811610,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811611,"byte_end":10811614,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811615,"byte_end":10811629,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811630,"byte_end":10811633,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811634,"byte_end":10811641,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811642,"byte_end":10811673,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811674,"byte_end":10811677,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811678,"byte_end":10811696,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811697,"byte_end":10811718,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811719,"byte_end":10811770,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811771,"byte_end":10811808,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811809,"byte_end":10811812,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811813,"byte_end":10811846,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811847,"byte_end":10811901,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811902,"byte_end":10811956,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811957,"byte_end":10811968,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811969,"byte_end":10811972,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10811973,"byte_end":10812006,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812007,"byte_end":10812061,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812062,"byte_end":10812116,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812117,"byte_end":10812128,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812129,"byte_end":10812132,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812133,"byte_end":10812162,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812163,"byte_end":10812192,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812193,"byte_end":10812198,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10812199,"byte_end":10812206,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815273,"byte_end":10815277,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813423,"byte_end":10813497,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813502,"byte_end":10813538,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813543,"byte_end":10813546,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813551,"byte_end":10813626,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813631,"byte_end":10813697,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813702,"byte_end":10813753,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813758,"byte_end":10813761,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813766,"byte_end":10813778,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813783,"byte_end":10813786,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813791,"byte_end":10813865,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813870,"byte_end":10813946,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813951,"byte_end":10814004,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814009,"byte_end":10814012,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814017,"byte_end":10814027,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814032,"byte_end":10814035,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814040,"byte_end":10814112,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814117,"byte_end":10814192,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814197,"byte_end":10814258,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814263,"byte_end":10814266,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814271,"byte_end":10814344,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814349,"byte_end":10814414,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814419,"byte_end":10814437,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814442,"byte_end":10814445,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814450,"byte_end":10814500,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814505,"byte_end":10814565,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814570,"byte_end":10814573,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814578,"byte_end":10814592,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814597,"byte_end":10814600,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814605,"byte_end":10814612,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814617,"byte_end":10814648,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814653,"byte_end":10814656,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814661,"byte_end":10814679,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814684,"byte_end":10814705,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814710,"byte_end":10814761,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814766,"byte_end":10814803,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814808,"byte_end":10814811,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814816,"byte_end":10814849,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814854,"byte_end":10814908,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814913,"byte_end":10814967,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814972,"byte_end":10814983,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814988,"byte_end":10814991,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10814996,"byte_end":10815029,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815034,"byte_end":10815088,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815093,"byte_end":10815147,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815152,"byte_end":10815163,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815168,"byte_end":10815171,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815176,"byte_end":10815205,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815210,"byte_end":10815239,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815244,"byte_end":10815249,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815254,"byte_end":10815261,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5896},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816037,"byte_end":10816046,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815442,"byte_end":10815519,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815524,"byte_end":10815553,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815558,"byte_end":10815561,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815566,"byte_end":10815580,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815585,"byte_end":10815588,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815593,"byte_end":10815600,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815605,"byte_end":10815636,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815641,"byte_end":10815644,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815649,"byte_end":10815667,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815672,"byte_end":10815693,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815698,"byte_end":10815745,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815750,"byte_end":10815753,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815758,"byte_end":10815785,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815790,"byte_end":10815819,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815824,"byte_end":10815827,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815832,"byte_end":10815868,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815873,"byte_end":10815876,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815881,"byte_end":10815910,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815915,"byte_end":10815918,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815923,"byte_end":10815968,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10815973,"byte_end":10816003,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816008,"byte_end":10816013,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816018,"byte_end":10816025,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817305,"byte_end":10817319,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816153,"byte_end":10816195,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816200,"byte_end":10816203,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816208,"byte_end":10816284,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816289,"byte_end":10816362,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816367,"byte_end":10816387,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816392,"byte_end":10816395,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816400,"byte_end":10816410,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816415,"byte_end":10816418,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816423,"byte_end":10816493,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816498,"byte_end":10816566,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816571,"byte_end":10816584,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816589,"byte_end":10816592,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816597,"byte_end":10816649,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816654,"byte_end":10816704,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816709,"byte_end":10816755,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816760,"byte_end":10816820,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816825,"byte_end":10816873,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816878,"byte_end":10816881,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816886,"byte_end":10816900,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816905,"byte_end":10816908,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816913,"byte_end":10816920,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816925,"byte_end":10816956,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816961,"byte_end":10816964,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816969,"byte_end":10816987,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10816992,"byte_end":10817013,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817018,"byte_end":10817066,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817071,"byte_end":10817074,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817079,"byte_end":10817122,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817127,"byte_end":10817130,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817135,"byte_end":10817173,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817178,"byte_end":10817181,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817186,"byte_end":10817229,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817234,"byte_end":10817237,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817242,"byte_end":10817271,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817276,"byte_end":10817281,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10817286,"byte_end":10817293,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5917},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826882,"byte_end":10826886,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824654,"byte_end":10824700,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824705,"byte_end":10824708,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824713,"byte_end":10824781,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824786,"byte_end":10824818,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824823,"byte_end":10824826,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824831,"byte_end":10824901,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824906,"byte_end":10824980,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824985,"byte_end":10824988,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824993,"byte_end":10825069,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825074,"byte_end":10825150,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825155,"byte_end":10825223,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825228,"byte_end":10825301,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825306,"byte_end":10825375,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825380,"byte_end":10825425,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825430,"byte_end":10825433,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825438,"byte_end":10825488,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825493,"byte_end":10825545,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825550,"byte_end":10825553,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825558,"byte_end":10825572,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825577,"byte_end":10825580,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825585,"byte_end":10825592,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825597,"byte_end":10825628,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825633,"byte_end":10825636,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825641,"byte_end":10825659,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825664,"byte_end":10825685,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825690,"byte_end":10825741,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825746,"byte_end":10825783,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825788,"byte_end":10825791,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825796,"byte_end":10825829,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825834,"byte_end":10825888,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825893,"byte_end":10825947,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825952,"byte_end":10825963,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825968,"byte_end":10825971,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10825976,"byte_end":10826009,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826014,"byte_end":10826068,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826073,"byte_end":10826127,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826132,"byte_end":10826143,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826148,"byte_end":10826151,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826156,"byte_end":10826185,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826190,"byte_end":10826219,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826224,"byte_end":10826229,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826234,"byte_end":10826241,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826246,"byte_end":10826249,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826254,"byte_end":10826270,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826275,"byte_end":10826278,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826283,"byte_end":10826290,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826295,"byte_end":10826326,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826331,"byte_end":10826334,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826339,"byte_end":10826357,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826362,"byte_end":10826383,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826388,"byte_end":10826437,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826442,"byte_end":10826445,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826450,"byte_end":10826479,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826484,"byte_end":10826513,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826518,"byte_end":10826547,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826552,"byte_end":10826555,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826560,"byte_end":10826597,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826602,"byte_end":10826644,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826649,"byte_end":10826652,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826657,"byte_end":10826726,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826731,"byte_end":10826734,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826739,"byte_end":10826788,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826793,"byte_end":10826842,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826847,"byte_end":10826852,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826857,"byte_end":10826864,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5920},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828647,"byte_end":10828655,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10826988,"byte_end":10827061,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827066,"byte_end":10827069,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827074,"byte_end":10827146,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827151,"byte_end":10827175,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827180,"byte_end":10827183,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827188,"byte_end":10827268,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827273,"byte_end":10827347,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827352,"byte_end":10827355,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827360,"byte_end":10827433,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827438,"byte_end":10827512,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827517,"byte_end":10827520,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827525,"byte_end":10827601,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827606,"byte_end":10827682,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827687,"byte_end":10827758,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827763,"byte_end":10827836,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827841,"byte_end":10827914,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827919,"byte_end":10827990,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10827995,"byte_end":10828047,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828052,"byte_end":10828055,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828060,"byte_end":10828112,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828117,"byte_end":10828177,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828182,"byte_end":10828232,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828237,"byte_end":10828240,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828245,"byte_end":10828259,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828264,"byte_end":10828267,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828272,"byte_end":10828279,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828284,"byte_end":10828315,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828320,"byte_end":10828323,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828328,"byte_end":10828346,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828351,"byte_end":10828372,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828377,"byte_end":10828427,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828432,"byte_end":10828435,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828440,"byte_end":10828480,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828485,"byte_end":10828488,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828493,"byte_end":10828522,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828527,"byte_end":10828530,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828535,"byte_end":10828578,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828583,"byte_end":10828613,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828618,"byte_end":10828623,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828628,"byte_end":10828635,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5964},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":5965},{"krate":0,"index":6039},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6251},{"krate":0,"index":6296},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6369}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10832928,"byte_end":10832998,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10832999,"byte_end":10833022,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833023,"byte_end":10833026,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833027,"byte_end":10833107,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833108,"byte_end":10833186,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833187,"byte_end":10833263,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833264,"byte_end":10833343,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833344,"byte_end":10833424,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833425,"byte_end":10833496,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833497,"byte_end":10833519,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833520,"byte_end":10833523,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833524,"byte_end":10833601,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833602,"byte_end":10833673,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833674,"byte_end":10833739,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833740,"byte_end":10833824,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833825,"byte_end":10833903,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833904,"byte_end":10833981,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10833982,"byte_end":10834060,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834061,"byte_end":10834140,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834141,"byte_end":10834158,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834159,"byte_end":10834162,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834163,"byte_end":10834166,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834167,"byte_end":10834186,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834187,"byte_end":10834190,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834191,"byte_end":10834257,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834258,"byte_end":10834338,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834339,"byte_end":10834416,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834417,"byte_end":10834420,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834421,"byte_end":10834491,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834492,"byte_end":10834571,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834572,"byte_end":10834595,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834596,"byte_end":10834599,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834600,"byte_end":10834620,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834621,"byte_end":10834624,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834625,"byte_end":10834705,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834706,"byte_end":10834786,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834787,"byte_end":10834865,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834866,"byte_end":10834938,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10834939,"byte_end":10835013,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835014,"byte_end":10835026,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835027,"byte_end":10835030,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835031,"byte_end":10835078,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835079,"byte_end":10835082,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835083,"byte_end":10835164,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835165,"byte_end":10835200,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835201,"byte_end":10835204,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835205,"byte_end":10835285,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835286,"byte_end":10835367,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835368,"byte_end":10835442,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835443,"byte_end":10835524,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835525,"byte_end":10835570,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835571,"byte_end":10835574,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835575,"byte_end":10835655,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835656,"byte_end":10835734,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835735,"byte_end":10835801,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835802,"byte_end":10835884,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835885,"byte_end":10835949,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835950,"byte_end":10835953,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835954,"byte_end":10835995,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10835996,"byte_end":10836041,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836042,"byte_end":10836095,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836096,"byte_end":10836151,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836152,"byte_end":10836215,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836216,"byte_end":10836281,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836282,"byte_end":10836341,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836342,"byte_end":10836405,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836406,"byte_end":10836466,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836467,"byte_end":10836512,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836513,"byte_end":10836603,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850723,"byte_end":10850729,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6053}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850598,"byte_end":10850643,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850644,"byte_end":10850647,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850648,"byte_end":10850711,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851104,"byte_end":10851110,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":6057}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850772,"byte_end":10850818,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850819,"byte_end":10850822,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850823,"byte_end":10850910,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850911,"byte_end":10850994,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850995,"byte_end":10850998,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850999,"byte_end":10851041,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851042,"byte_end":10851092,"line_start":29,"line_end":29,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851477,"byte_end":10851485,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6060}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851161,"byte_end":10851209,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851210,"byte_end":10851213,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851214,"byte_end":10851277,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851278,"byte_end":10851281,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851282,"byte_end":10851355,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851356,"byte_end":10851359,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851360,"byte_end":10851465,"line_start":40,"line_end":40,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":6061},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852943,"byte_end":10852950,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851557,"byte_end":10851636,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851637,"byte_end":10851659,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851660,"byte_end":10851663,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851664,"byte_end":10851740,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851741,"byte_end":10851821,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851822,"byte_end":10851901,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851902,"byte_end":10851905,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851906,"byte_end":10851983,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851984,"byte_end":10852009,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852010,"byte_end":10852013,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852014,"byte_end":10852093,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852094,"byte_end":10852142,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852143,"byte_end":10852146,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852147,"byte_end":10852226,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852227,"byte_end":10852302,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852303,"byte_end":10852369,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852370,"byte_end":10852373,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852374,"byte_end":10852386,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852387,"byte_end":10852390,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852391,"byte_end":10852430,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852431,"byte_end":10852434,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852435,"byte_end":10852449,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852450,"byte_end":10852453,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852454,"byte_end":10852465,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852466,"byte_end":10852492,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852493,"byte_end":10852496,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852497,"byte_end":10852515,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852516,"byte_end":10852537,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852538,"byte_end":10852584,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852585,"byte_end":10852588,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852589,"byte_end":10852622,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852623,"byte_end":10852651,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852652,"byte_end":10852702,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852703,"byte_end":10852752,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852753,"byte_end":10852780,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852781,"byte_end":10852798,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852799,"byte_end":10852812,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852813,"byte_end":10852824,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852825,"byte_end":10852828,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852829,"byte_end":10852874,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852875,"byte_end":10852911,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852912,"byte_end":10852921,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852922,"byte_end":10852927,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852928,"byte_end":10852935,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855312,"byte_end":10855316,"line_start":162,"line_end":162,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853550,"byte_end":10853596,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853601,"byte_end":10853604,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853609,"byte_end":10853684,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853689,"byte_end":10853762,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853767,"byte_end":10853843,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853848,"byte_end":10853923,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853928,"byte_end":10853931,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853936,"byte_end":10854009,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854014,"byte_end":10854088,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854093,"byte_end":10854119,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854124,"byte_end":10854127,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854132,"byte_end":10854201,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854206,"byte_end":10854278,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854283,"byte_end":10854335,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854340,"byte_end":10854343,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854348,"byte_end":10854374,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854379,"byte_end":10854428,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854433,"byte_end":10854436,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854441,"byte_end":10854455,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854460,"byte_end":10854463,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854468,"byte_end":10854475,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854480,"byte_end":10854506,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854511,"byte_end":10854514,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854519,"byte_end":10854537,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854542,"byte_end":10854563,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854568,"byte_end":10854614,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854619,"byte_end":10854622,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854627,"byte_end":10854660,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854665,"byte_end":10854709,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854714,"byte_end":10854725,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854730,"byte_end":10854733,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854738,"byte_end":10854789,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854794,"byte_end":10854836,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854841,"byte_end":10854846,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854851,"byte_end":10854858,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854863,"byte_end":10854866,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854871,"byte_end":10854895,"line_start":146,"line_end":146,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854900,"byte_end":10854903,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854908,"byte_end":10854915,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854920,"byte_end":10854946,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854951,"byte_end":10854954,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854959,"byte_end":10854977,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854982,"byte_end":10855003,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855008,"byte_end":10855054,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855059,"byte_end":10855062,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855067,"byte_end":10855107,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855112,"byte_end":10855152,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855157,"byte_end":10855160,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855165,"byte_end":10855216,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855221,"byte_end":10855272,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855277,"byte_end":10855282,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855287,"byte_end":10855294,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6072},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857380,"byte_end":10857393,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855437,"byte_end":10855499,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855504,"byte_end":10855507,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855512,"byte_end":10855587,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855592,"byte_end":10855665,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855670,"byte_end":10855746,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855751,"byte_end":10855826,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855831,"byte_end":10855834,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855839,"byte_end":10855912,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855917,"byte_end":10855991,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855996,"byte_end":10856022,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856027,"byte_end":10856030,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856035,"byte_end":10856103,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856108,"byte_end":10856183,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856188,"byte_end":10856243,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856248,"byte_end":10856251,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856256,"byte_end":10856325,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856330,"byte_end":10856402,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856407,"byte_end":10856468,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856473,"byte_end":10856476,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856481,"byte_end":10856507,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856512,"byte_end":10856561,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856566,"byte_end":10856632,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856637,"byte_end":10856640,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856645,"byte_end":10856657,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856662,"byte_end":10856665,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856670,"byte_end":10856737,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856742,"byte_end":10856754,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856759,"byte_end":10856762,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856767,"byte_end":10856781,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856786,"byte_end":10856789,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856794,"byte_end":10856801,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856806,"byte_end":10856826,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856831,"byte_end":10856863,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856868,"byte_end":10856894,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856899,"byte_end":10856902,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856907,"byte_end":10856922,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856927,"byte_end":10856978,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856983,"byte_end":10856986,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856991,"byte_end":10857038,"line_start":205,"line_end":205,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857043,"byte_end":10857096,"line_start":206,"line_end":206,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857101,"byte_end":10857112,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857117,"byte_end":10857120,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857125,"byte_end":10857147,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857152,"byte_end":10857173,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857178,"byte_end":10857212,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857217,"byte_end":10857259,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857264,"byte_end":10857279,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857284,"byte_end":10857317,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857322,"byte_end":10857327,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857332,"byte_end":10857339,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857344,"byte_end":10857368,"line_start":217,"line_end":217,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6073},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859481,"byte_end":10859486,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858209,"byte_end":10858272,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858277,"byte_end":10858280,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858285,"byte_end":10858360,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858365,"byte_end":10858437,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858442,"byte_end":10858512,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858517,"byte_end":10858520,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858525,"byte_end":10858596,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858601,"byte_end":10858667,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858672,"byte_end":10858747,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858752,"byte_end":10858781,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858786,"byte_end":10858789,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858794,"byte_end":10858816,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858821,"byte_end":10858824,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858829,"byte_end":10858843,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858848,"byte_end":10858851,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858856,"byte_end":10858863,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858868,"byte_end":10858894,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858899,"byte_end":10858902,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858907,"byte_end":10858925,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858930,"byte_end":10858951,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858956,"byte_end":10859001,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859006,"byte_end":10859009,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859014,"byte_end":10859047,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859052,"byte_end":10859078,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859083,"byte_end":10859138,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859143,"byte_end":10859174,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859179,"byte_end":10859202,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859207,"byte_end":10859220,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859225,"byte_end":10859236,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859241,"byte_end":10859244,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859249,"byte_end":10859268,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859273,"byte_end":10859276,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859281,"byte_end":10859328,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859333,"byte_end":10859369,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859374,"byte_end":10859383,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859388,"byte_end":10859391,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859396,"byte_end":10859447,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859452,"byte_end":10859457,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859462,"byte_end":10859469,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860327,"byte_end":10860336,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859538,"byte_end":10859592,"line_start":282,"line_end":282,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859597,"byte_end":10859600,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859605,"byte_end":10859629,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859634,"byte_end":10859637,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859642,"byte_end":10859716,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859721,"byte_end":10859735,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859740,"byte_end":10859802,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859807,"byte_end":10859881,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859886,"byte_end":10859938,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859943,"byte_end":10859946,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859951,"byte_end":10860023,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860028,"byte_end":10860104,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860109,"byte_end":10860185,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860190,"byte_end":10860261,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860266,"byte_end":10860315,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862432,"byte_end":10862436,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860792,"byte_end":10860843,"line_start":317,"line_end":317,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860848,"byte_end":10860851,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860856,"byte_end":10860932,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860937,"byte_end":10861013,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861018,"byte_end":10861092,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861097,"byte_end":10861172,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861177,"byte_end":10861246,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861251,"byte_end":10861323,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861328,"byte_end":10861359,"line_start":325,"line_end":325,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861364,"byte_end":10861367,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861372,"byte_end":10861384,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861389,"byte_end":10861392,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861397,"byte_end":10861470,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861475,"byte_end":10861549,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861554,"byte_end":10861614,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861619,"byte_end":10861622,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861627,"byte_end":10861657,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861662,"byte_end":10861688,"line_start":334,"line_end":334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861693,"byte_end":10861696,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861701,"byte_end":10861715,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861720,"byte_end":10861723,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861728,"byte_end":10861798,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861803,"byte_end":10861842,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861847,"byte_end":10861850,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861855,"byte_end":10861866,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861871,"byte_end":10861897,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861902,"byte_end":10861905,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861910,"byte_end":10861928,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861933,"byte_end":10861954,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861959,"byte_end":10862003,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862008,"byte_end":10862011,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862016,"byte_end":10862049,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862054,"byte_end":10862082,"line_start":349,"line_end":349,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862087,"byte_end":10862137,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862142,"byte_end":10862191,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862196,"byte_end":10862223,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862228,"byte_end":10862245,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862250,"byte_end":10862263,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862268,"byte_end":10862279,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862284,"byte_end":10862287,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862292,"byte_end":10862337,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862342,"byte_end":10862378,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862383,"byte_end":10862392,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862397,"byte_end":10862402,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862407,"byte_end":10862414,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6086},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863569,"byte_end":10863575,"line_start":403,"line_end":403,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862688,"byte_end":10862732,"line_start":372,"line_end":372,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862737,"byte_end":10862740,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862745,"byte_end":10862820,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862825,"byte_end":10862880,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862885,"byte_end":10862888,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862893,"byte_end":10862907,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862912,"byte_end":10862915,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862920,"byte_end":10862927,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862932,"byte_end":10862958,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862963,"byte_end":10862966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862971,"byte_end":10862989,"line_start":382,"line_end":382,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862994,"byte_end":10863015,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863020,"byte_end":10863067,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863072,"byte_end":10863102,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863107,"byte_end":10863137,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863142,"byte_end":10863172,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863177,"byte_end":10863207,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863212,"byte_end":10863245,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863250,"byte_end":10863271,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863276,"byte_end":10863287,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863292,"byte_end":10863295,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863300,"byte_end":10863323,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863328,"byte_end":10863353,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863358,"byte_end":10863383,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863388,"byte_end":10863413,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863418,"byte_end":10863443,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863448,"byte_end":10863472,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863477,"byte_end":10863487,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863492,"byte_end":10863529,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863534,"byte_end":10863539,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863544,"byte_end":10863551,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865749,"byte_end":10865757,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863629,"byte_end":10863688,"line_start":407,"line_end":407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863693,"byte_end":10863696,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863701,"byte_end":10863780,"line_start":409,"line_end":409,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863785,"byte_end":10863860,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863865,"byte_end":10863943,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863948,"byte_end":10863990,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863995,"byte_end":10863998,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864003,"byte_end":10864015,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864020,"byte_end":10864023,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864028,"byte_end":10864099,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864104,"byte_end":10864180,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864185,"byte_end":10864207,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864212,"byte_end":10864215,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864220,"byte_end":10864293,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864298,"byte_end":10864372,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864377,"byte_end":10864437,"line_start":422,"line_end":422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864442,"byte_end":10864445,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864450,"byte_end":10864476,"line_start":424,"line_end":424,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864481,"byte_end":10864505,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864510,"byte_end":10864540,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864545,"byte_end":10864548,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864553,"byte_end":10864567,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864572,"byte_end":10864575,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864580,"byte_end":10864587,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864592,"byte_end":10864618,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864623,"byte_end":10864626,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864631,"byte_end":10864649,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864654,"byte_end":10864675,"line_start":434,"line_end":434,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864680,"byte_end":10864726,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864731,"byte_end":10864776,"line_start":436,"line_end":436,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864781,"byte_end":10864811,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864816,"byte_end":10864819,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864824,"byte_end":10864857,"line_start":439,"line_end":439,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864862,"byte_end":10864901,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864906,"byte_end":10864945,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864950,"byte_end":10865012,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865017,"byte_end":10865028,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865033,"byte_end":10865036,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865041,"byte_end":10865074,"line_start":445,"line_end":445,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865079,"byte_end":10865128,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865133,"byte_end":10865180,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865185,"byte_end":10865221,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865226,"byte_end":10865237,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865242,"byte_end":10865245,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865250,"byte_end":10865270,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865275,"byte_end":10865314,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865319,"byte_end":10865364,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865369,"byte_end":10865372,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865377,"byte_end":10865416,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865421,"byte_end":10865466,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865471,"byte_end":10865474,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865479,"byte_end":10865528,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865533,"byte_end":10865564,"line_start":459,"line_end":459,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865569,"byte_end":10865631,"line_start":460,"line_end":460,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865636,"byte_end":10865701,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865706,"byte_end":10865715,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865720,"byte_end":10865725,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10865730,"byte_end":10865737,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867846,"byte_end":10867858,"line_start":524,"line_end":524,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866162,"byte_end":10866242,"line_start":477,"line_end":477,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866247,"byte_end":10866250,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866255,"byte_end":10866332,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866337,"byte_end":10866415,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866420,"byte_end":10866468,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866473,"byte_end":10866476,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866481,"byte_end":10866507,"line_start":483,"line_end":483,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866512,"byte_end":10866515,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866520,"byte_end":10866532,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866537,"byte_end":10866540,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866545,"byte_end":10866618,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866623,"byte_end":10866680,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866685,"byte_end":10866766,"line_start":489,"line_end":489,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866771,"byte_end":10866774,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866779,"byte_end":10866809,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866814,"byte_end":10866840,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866845,"byte_end":10866848,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866853,"byte_end":10866867,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866872,"byte_end":10866875,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866880,"byte_end":10866958,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10866963,"byte_end":10867034,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867039,"byte_end":10867042,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867047,"byte_end":10867058,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867063,"byte_end":10867089,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867094,"byte_end":10867133,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867138,"byte_end":10867141,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867146,"byte_end":10867164,"line_start":503,"line_end":503,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867169,"byte_end":10867190,"line_start":504,"line_end":504,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867195,"byte_end":10867239,"line_start":505,"line_end":505,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867244,"byte_end":10867247,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867252,"byte_end":10867285,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867290,"byte_end":10867318,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867323,"byte_end":10867409,"line_start":509,"line_end":509,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867414,"byte_end":10867467,"line_start":510,"line_end":510,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867472,"byte_end":10867499,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867504,"byte_end":10867521,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867526,"byte_end":10867539,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867544,"byte_end":10867555,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867560,"byte_end":10867563,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867568,"byte_end":10867613,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867618,"byte_end":10867654,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867659,"byte_end":10867711,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867716,"byte_end":10867725,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867730,"byte_end":10867735,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867740,"byte_end":10867747,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10867752,"byte_end":10867776,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6093},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869423,"byte_end":10869436,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868351,"byte_end":10868410,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868415,"byte_end":10868418,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868423,"byte_end":10868491,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868496,"byte_end":10868564,"line_start":546,"line_end":546,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868569,"byte_end":10868636,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868641,"byte_end":10868644,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868649,"byte_end":10868717,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868722,"byte_end":10868725,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868730,"byte_end":10868742,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868747,"byte_end":10868750,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868755,"byte_end":10868822,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868827,"byte_end":10868839,"line_start":554,"line_end":554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868844,"byte_end":10868847,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868852,"byte_end":10868866,"line_start":556,"line_end":556,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868871,"byte_end":10868874,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868879,"byte_end":10868886,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868891,"byte_end":10868911,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868916,"byte_end":10868948,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868953,"byte_end":10868979,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868984,"byte_end":10868987,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10868992,"byte_end":10869007,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869012,"byte_end":10869062,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869067,"byte_end":10869070,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869075,"byte_end":10869122,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869127,"byte_end":10869169,"line_start":567,"line_end":567,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869174,"byte_end":10869185,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869190,"byte_end":10869193,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869198,"byte_end":10869251,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869256,"byte_end":10869306,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869311,"byte_end":10869322,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869327,"byte_end":10869360,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869365,"byte_end":10869370,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869375,"byte_end":10869382,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869387,"byte_end":10869411,"line_start":576,"line_end":576,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6094},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870127,"byte_end":10870136,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869545,"byte_end":10869609,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869614,"byte_end":10869684,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869689,"byte_end":10869700,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869705,"byte_end":10869708,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869713,"byte_end":10869758,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869763,"byte_end":10869822,"line_start":586,"line_end":586,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869827,"byte_end":10869830,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869835,"byte_end":10869842,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869847,"byte_end":10869903,"line_start":589,"line_end":589,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869908,"byte_end":10869937,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869942,"byte_end":10869945,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869950,"byte_end":10869975,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10869980,"byte_end":10870010,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870015,"byte_end":10870018,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870023,"byte_end":10870036,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870041,"byte_end":10870069,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870074,"byte_end":10870103,"line_start":597,"line_end":597,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870108,"byte_end":10870115,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6095},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871527,"byte_end":10871534,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870195,"byte_end":10870262,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870267,"byte_end":10870312,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870317,"byte_end":10870320,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870325,"byte_end":10870400,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870405,"byte_end":10870480,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870485,"byte_end":10870558,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870563,"byte_end":10870638,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870643,"byte_end":10870665,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870670,"byte_end":10870673,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870678,"byte_end":10870754,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870759,"byte_end":10870778,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870783,"byte_end":10870786,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870791,"byte_end":10870813,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870818,"byte_end":10870844,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870849,"byte_end":10870852,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870857,"byte_end":10870871,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870876,"byte_end":10870879,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870884,"byte_end":10870891,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870896,"byte_end":10870922,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870927,"byte_end":10870930,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870935,"byte_end":10870953,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870958,"byte_end":10870979,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10870984,"byte_end":10871028,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871033,"byte_end":10871036,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871041,"byte_end":10871068,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871073,"byte_end":10871122,"line_start":628,"line_end":628,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871127,"byte_end":10871130,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871135,"byte_end":10871201,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871206,"byte_end":10871236,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871241,"byte_end":10871284,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871289,"byte_end":10871292,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871297,"byte_end":10871338,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871343,"byte_end":10871368,"line_start":635,"line_end":635,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871373,"byte_end":10871376,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871381,"byte_end":10871432,"line_start":637,"line_end":637,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871437,"byte_end":10871487,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871492,"byte_end":10871497,"line_start":639,"line_end":639,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871502,"byte_end":10871509,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873297,"byte_end":10873308,"line_start":693,"line_end":693,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871776,"byte_end":10871855,"line_start":650,"line_end":650,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871860,"byte_end":10871874,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871879,"byte_end":10871882,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871887,"byte_end":10871967,"line_start":653,"line_end":653,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10871972,"byte_end":10872057,"line_start":654,"line_end":654,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872062,"byte_end":10872144,"line_start":655,"line_end":655,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872149,"byte_end":10872223,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872228,"byte_end":10872231,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872236,"byte_end":10872312,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872317,"byte_end":10872336,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872341,"byte_end":10872344,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872349,"byte_end":10872371,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872376,"byte_end":10872402,"line_start":662,"line_end":662,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872407,"byte_end":10872439,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872444,"byte_end":10872447,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872452,"byte_end":10872466,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872471,"byte_end":10872474,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872479,"byte_end":10872486,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872491,"byte_end":10872517,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872522,"byte_end":10872525,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872530,"byte_end":10872548,"line_start":670,"line_end":670,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872553,"byte_end":10872574,"line_start":671,"line_end":671,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872579,"byte_end":10872623,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872628,"byte_end":10872631,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872636,"byte_end":10872663,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872668,"byte_end":10872715,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872720,"byte_end":10872723,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872728,"byte_end":10872794,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872799,"byte_end":10872829,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872834,"byte_end":10872877,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872882,"byte_end":10872885,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872890,"byte_end":10872954,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10872959,"byte_end":10873004,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873009,"byte_end":10873052,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873057,"byte_end":10873060,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873065,"byte_end":10873106,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873111,"byte_end":10873136,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873141,"byte_end":10873144,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873149,"byte_end":10873200,"line_start":688,"line_end":688,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873205,"byte_end":10873255,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873260,"byte_end":10873263,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873268,"byte_end":10873273,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873278,"byte_end":10873285,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6107},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875025,"byte_end":10875029,"line_start":754,"line_end":754,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873952,"byte_end":10873998,"line_start":722,"line_end":722,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874003,"byte_end":10874006,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874011,"byte_end":10874086,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874091,"byte_end":10874165,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874170,"byte_end":10874244,"line_start":726,"line_end":726,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874249,"byte_end":10874297,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874302,"byte_end":10874305,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874310,"byte_end":10874350,"line_start":729,"line_end":729,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874355,"byte_end":10874358,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874363,"byte_end":10874377,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874382,"byte_end":10874385,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874390,"byte_end":10874397,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874402,"byte_end":10874428,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874433,"byte_end":10874436,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874441,"byte_end":10874459,"line_start":736,"line_end":736,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874464,"byte_end":10874485,"line_start":737,"line_end":737,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874490,"byte_end":10874534,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874539,"byte_end":10874542,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874547,"byte_end":10874574,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874579,"byte_end":10874628,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874633,"byte_end":10874636,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874641,"byte_end":10874707,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874712,"byte_end":10874742,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874747,"byte_end":10874790,"line_start":745,"line_end":745,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874795,"byte_end":10874798,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874803,"byte_end":10874842,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874847,"byte_end":10874872,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874877,"byte_end":10874880,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874885,"byte_end":10874936,"line_start":750,"line_end":750,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874941,"byte_end":10874991,"line_start":751,"line_end":751,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10874996,"byte_end":10875001,"line_start":752,"line_end":752,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875006,"byte_end":10875013,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6304},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897281,"byte_end":10897296,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":6306}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897123,"byte_end":10897177,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897178,"byte_end":10897181,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897182,"byte_end":10897214,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897215,"byte_end":10897269,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898089,"byte_end":10898106,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":6315}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897713,"byte_end":10897770,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897771,"byte_end":10897774,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897775,"byte_end":10897807,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897808,"byte_end":10897862,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897863,"byte_end":10897866,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897867,"byte_end":10897949,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897950,"byte_end":10897953,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897954,"byte_end":10898077,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898938,"byte_end":10898955,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898405,"byte_end":10898481,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898482,"byte_end":10898513,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898514,"byte_end":10898517,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898518,"byte_end":10898598,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898599,"byte_end":10898678,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898679,"byte_end":10898692,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898693,"byte_end":10898696,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898697,"byte_end":10898776,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898777,"byte_end":10898853,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898854,"byte_end":10898930,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6325},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900434,"byte_end":10900438,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899364,"byte_end":10899410,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899415,"byte_end":10899418,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899423,"byte_end":10899495,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899500,"byte_end":10899554,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899559,"byte_end":10899562,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899567,"byte_end":10899581,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899586,"byte_end":10899589,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899594,"byte_end":10899601,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899606,"byte_end":10899632,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899637,"byte_end":10899640,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899645,"byte_end":10899663,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899668,"byte_end":10899689,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899694,"byte_end":10899747,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899752,"byte_end":10899755,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899760,"byte_end":10899793,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899798,"byte_end":10899836,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899841,"byte_end":10899852,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899857,"byte_end":10899860,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899865,"byte_end":10899916,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899921,"byte_end":10899963,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899968,"byte_end":10899973,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899978,"byte_end":10899985,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899990,"byte_end":10899993,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899998,"byte_end":10900022,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900027,"byte_end":10900030,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900035,"byte_end":10900042,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900047,"byte_end":10900073,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900078,"byte_end":10900081,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900086,"byte_end":10900104,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900109,"byte_end":10900130,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900135,"byte_end":10900188,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900193,"byte_end":10900196,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900201,"byte_end":10900235,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900240,"byte_end":10900274,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900279,"byte_end":10900282,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900287,"byte_end":10900338,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900343,"byte_end":10900394,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900399,"byte_end":10900404,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900409,"byte_end":10900416,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6330},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901245,"byte_end":10901258,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900560,"byte_end":10900622,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900627,"byte_end":10900630,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900635,"byte_end":10900647,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900652,"byte_end":10900655,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900660,"byte_end":10900727,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900732,"byte_end":10900744,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900749,"byte_end":10900752,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900757,"byte_end":10900771,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900776,"byte_end":10900779,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900784,"byte_end":10900791,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900796,"byte_end":10900816,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900821,"byte_end":10900847,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900852,"byte_end":10900855,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900860,"byte_end":10900878,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900883,"byte_end":10900904,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900909,"byte_end":10900968,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900973,"byte_end":10900976,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10900981,"byte_end":10901028,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901033,"byte_end":10901086,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901091,"byte_end":10901102,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901107,"byte_end":10901110,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901115,"byte_end":10901143,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901148,"byte_end":10901182,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901187,"byte_end":10901192,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901197,"byte_end":10901204,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901209,"byte_end":10901233,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901578,"byte_end":10901583,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901341,"byte_end":10901405,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901410,"byte_end":10901413,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901418,"byte_end":10901493,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901498,"byte_end":10901566,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902424,"byte_end":10902433,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901635,"byte_end":10901689,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901694,"byte_end":10901697,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901702,"byte_end":10901726,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901731,"byte_end":10901734,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901739,"byte_end":10901813,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901818,"byte_end":10901832,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901837,"byte_end":10901899,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901904,"byte_end":10901978,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10901983,"byte_end":10902035,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902040,"byte_end":10902043,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902048,"byte_end":10902120,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902125,"byte_end":10902201,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902206,"byte_end":10902282,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902287,"byte_end":10902358,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902363,"byte_end":10902412,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6336},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903361,"byte_end":10903365,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902673,"byte_end":10902747,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902752,"byte_end":10902755,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902760,"byte_end":10902845,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902850,"byte_end":10902931,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902936,"byte_end":10903004,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903009,"byte_end":10903012,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903017,"byte_end":10903090,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903095,"byte_end":10903166,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903171,"byte_end":10903248,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903253,"byte_end":10903256,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903261,"byte_end":10903300,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10903305,"byte_end":10903349,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6342},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905294,"byte_end":10905300,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904403,"byte_end":10904447,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904452,"byte_end":10904455,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904460,"byte_end":10904535,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904540,"byte_end":10904595,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904600,"byte_end":10904603,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904608,"byte_end":10904622,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904627,"byte_end":10904630,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904635,"byte_end":10904642,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904647,"byte_end":10904673,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904678,"byte_end":10904681,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904686,"byte_end":10904704,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904709,"byte_end":10904730,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904735,"byte_end":10904791,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904796,"byte_end":10904826,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904831,"byte_end":10904861,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904866,"byte_end":10904896,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904901,"byte_end":10904931,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904936,"byte_end":10904969,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10904974,"byte_end":10904995,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905000,"byte_end":10905011,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905016,"byte_end":10905019,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905024,"byte_end":10905047,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905052,"byte_end":10905077,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905082,"byte_end":10905107,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905112,"byte_end":10905137,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905142,"byte_end":10905167,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905172,"byte_end":10905196,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905201,"byte_end":10905211,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905259,"byte_end":10905264,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905269,"byte_end":10905276,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6345},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905997,"byte_end":10906006,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905353,"byte_end":10905417,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905422,"byte_end":10905471,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905476,"byte_end":10905526,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905531,"byte_end":10905534,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905539,"byte_end":10905602,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905607,"byte_end":10905684,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905689,"byte_end":10905692,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905697,"byte_end":10905704,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905709,"byte_end":10905773,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905778,"byte_end":10905807,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905812,"byte_end":10905815,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905820,"byte_end":10905845,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905850,"byte_end":10905880,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905885,"byte_end":10905888,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905893,"byte_end":10905906,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905911,"byte_end":10905939,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905944,"byte_end":10905973,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10905978,"byte_end":10905985,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6350},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":7038},{"krate":0,"index":7042},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":7045},{"krate":0,"index":7053},{"krate":0,"index":6358},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":7056},{"krate":0,"index":7059},{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":7066},{"krate":0,"index":7074},{"krate":0,"index":7061},{"krate":0,"index":7063}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906063,"byte_end":10906086,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7038},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906190,"byte_end":10906199,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906126,"byte_end":10906161,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906203,"byte_end":10906208,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":7038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906752,"byte_end":10906756,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906620,"byte_end":10906688,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906693,"byte_end":10906747,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7050},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906857,"byte_end":10906863,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906766,"byte_end":10906835,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906840,"byte_end":10906852,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":7045},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906598,"byte_end":10906610,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7047},{"krate":0,"index":7050}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906452,"byte_end":10906523,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906524,"byte_end":10906571,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7056},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907501,"byte_end":10907510,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907439,"byte_end":10907472,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909016,"byte_end":10909023,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":7066},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7071},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909136,"byte_end":10909142,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":7066},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7066},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10908854,"byte_end":10908870,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7068},{"krate":0,"index":7071}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6379},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914128,"byte_end":10914133,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6381},{"krate":0,"index":6382}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10909875,"byte_end":10909913,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10909914,"byte_end":10909917,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10909918,"byte_end":10909996,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10909997,"byte_end":10910073,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910074,"byte_end":10910098,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910099,"byte_end":10910102,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910103,"byte_end":10910144,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910145,"byte_end":10910148,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910149,"byte_end":10910229,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910230,"byte_end":10910309,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910310,"byte_end":10910373,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910374,"byte_end":10910377,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910378,"byte_end":10910457,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910458,"byte_end":10910538,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910539,"byte_end":10910617,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910618,"byte_end":10910697,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910698,"byte_end":10910776,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910777,"byte_end":10910857,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910858,"byte_end":10910871,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910872,"byte_end":10910875,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910876,"byte_end":10910955,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10910956,"byte_end":10911032,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911033,"byte_end":10911110,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911111,"byte_end":10911144,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911145,"byte_end":10911148,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911149,"byte_end":10911224,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911225,"byte_end":10911303,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911304,"byte_end":10911346,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911347,"byte_end":10911350,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911351,"byte_end":10911378,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911379,"byte_end":10911427,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911428,"byte_end":10911506,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911507,"byte_end":10911510,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911511,"byte_end":10911526,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911527,"byte_end":10911530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911531,"byte_end":10911549,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911550,"byte_end":10911577,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911578,"byte_end":10911601,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911602,"byte_end":10911605,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911606,"byte_end":10911624,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911625,"byte_end":10911646,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911647,"byte_end":10911691,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911692,"byte_end":10911731,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911732,"byte_end":10911735,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911736,"byte_end":10911769,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911770,"byte_end":10911816,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911817,"byte_end":10911840,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911841,"byte_end":10911852,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911853,"byte_end":10911856,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911857,"byte_end":10911899,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911900,"byte_end":10911919,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911920,"byte_end":10911925,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911926,"byte_end":10911933,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911934,"byte_end":10911937,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911938,"byte_end":10911941,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911942,"byte_end":10911960,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911961,"byte_end":10911988,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10911989,"byte_end":10912012,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912013,"byte_end":10912016,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912017,"byte_end":10912035,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912036,"byte_end":10912057,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912058,"byte_end":10912102,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912103,"byte_end":10912106,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912107,"byte_end":10912130,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912131,"byte_end":10912177,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912178,"byte_end":10912215,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912216,"byte_end":10912248,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912249,"byte_end":10912306,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912307,"byte_end":10912338,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912339,"byte_end":10912380,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912381,"byte_end":10912398,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912399,"byte_end":10912414,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912415,"byte_end":10912424,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912425,"byte_end":10912428,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912429,"byte_end":10912443,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912444,"byte_end":10912486,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912487,"byte_end":10912509,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912510,"byte_end":10912523,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912524,"byte_end":10912533,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912534,"byte_end":10912568,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912569,"byte_end":10912574,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912575,"byte_end":10912582,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912583,"byte_end":10912659,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912660,"byte_end":10912733,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912734,"byte_end":10912749,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912750,"byte_end":10912825,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912826,"byte_end":10912902,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912903,"byte_end":10912955,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912956,"byte_end":10912959,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10912960,"byte_end":10913038,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913039,"byte_end":10913119,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913120,"byte_end":10913196,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913197,"byte_end":10913274,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913275,"byte_end":10913353,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913354,"byte_end":10913434,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913435,"byte_end":10913515,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913516,"byte_end":10913585,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913586,"byte_end":10913589,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913590,"byte_end":10913669,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913670,"byte_end":10913749,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913750,"byte_end":10913828,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913829,"byte_end":10913890,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913891,"byte_end":10913894,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913895,"byte_end":10913922,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913923,"byte_end":10913960,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913961,"byte_end":10913995,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10913996,"byte_end":10914045,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914046,"byte_end":10914083,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914084,"byte_end":10914116,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914562,"byte_end":10914572,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":6386}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914201,"byte_end":10914232,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914233,"byte_end":10914236,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914237,"byte_end":10914316,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914317,"byte_end":10914392,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914393,"byte_end":10914426,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914427,"byte_end":10914430,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914431,"byte_end":10914509,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914510,"byte_end":10914550,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6387},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915360,"byte_end":10915375,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6389}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914617,"byte_end":10914655,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914656,"byte_end":10914659,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914660,"byte_end":10914741,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914742,"byte_end":10914822,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914823,"byte_end":10914897,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914898,"byte_end":10914959,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914960,"byte_end":10914963,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10914964,"byte_end":10915043,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915044,"byte_end":10915123,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915124,"byte_end":10915192,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915193,"byte_end":10915196,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915197,"byte_end":10915275,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915276,"byte_end":10915316,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915317,"byte_end":10915320,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915321,"byte_end":10915348,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7077},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916464,"byte_end":10916476,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915875,"byte_end":10915948,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915949,"byte_end":10915985,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915986,"byte_end":10915989,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915990,"byte_end":10916068,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916069,"byte_end":10916072,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916073,"byte_end":10916150,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916151,"byte_end":10916178,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916179,"byte_end":10916182,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916183,"byte_end":10916260,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916261,"byte_end":10916282,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916283,"byte_end":10916286,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916287,"byte_end":10916327,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916328,"byte_end":10916380,"line_start":176,"line_end":176,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916381,"byte_end":10916435,"line_start":177,"line_end":177,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6403},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917703,"byte_end":10917706,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917500,"byte_end":10917558,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917563,"byte_end":10917566,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917571,"byte_end":10917585,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917590,"byte_end":10917593,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917598,"byte_end":10917605,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917610,"byte_end":10917637,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917642,"byte_end":10917645,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917650,"byte_end":10917679,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917684,"byte_end":10917691,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6404},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918224,"byte_end":10918233,"line_start":244,"line_end":244,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Mutex<T>>::const_new","value":"pub const fn const_new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917871,"byte_end":10917929,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917934,"byte_end":10917937,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917942,"byte_end":10917956,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917961,"byte_end":10917964,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917969,"byte_end":10917976,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917981,"byte_end":10918008,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918013,"byte_end":10918016,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ static LOCK: Mutex<i32> = Mutex::const_new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918021,"byte_end":10918071,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918076,"byte_end":10918083,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test)),))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918088,"byte_end":10918147,"line_start":242,"line_end":242,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6405},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918864,"byte_end":10918868,"line_start":271,"line_end":271,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918404,"byte_end":10918450,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918455,"byte_end":10918501,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918506,"byte_end":10918577,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918582,"byte_end":10918585,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918590,"byte_end":10918604,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918609,"byte_end":10918612,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918617,"byte_end":10918624,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918629,"byte_end":10918656,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918661,"byte_end":10918664,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918669,"byte_end":10918687,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918692,"byte_end":10918713,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918718,"byte_end":10918752,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918757,"byte_end":10918760,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918765,"byte_end":10918804,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918809,"byte_end":10918824,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918829,"byte_end":10918834,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918839,"byte_end":10918846,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6408},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919895,"byte_end":10919905,"line_start":302,"line_end":302,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10918974,"byte_end":10919048,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919053,"byte_end":10919120,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919125,"byte_end":10919149,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919154,"byte_end":10919157,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919162,"byte_end":10919235,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919240,"byte_end":10919313,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919318,"byte_end":10919389,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919394,"byte_end":10919469,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919474,"byte_end":10919516,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919521,"byte_end":10919524,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919529,"byte_end":10919543,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919548,"byte_end":10919551,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919556,"byte_end":10919563,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919568,"byte_end":10919595,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919600,"byte_end":10919623,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919628,"byte_end":10919631,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919636,"byte_end":10919654,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919659,"byte_end":10919680,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919685,"byte_end":10919729,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919734,"byte_end":10919737,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919742,"byte_end":10919795,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919800,"byte_end":10919815,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919820,"byte_end":10919825,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919830,"byte_end":10919837,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919842,"byte_end":10919845,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10919850,"byte_end":10919877,"line_start":301,"line_end":301,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6415},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920782,"byte_end":10920790,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920314,"byte_end":10920383,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920388,"byte_end":10920430,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920435,"byte_end":10920438,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920443,"byte_end":10920477,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920482,"byte_end":10920496,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920501,"byte_end":10920504,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920509,"byte_end":10920516,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920521,"byte_end":10920548,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920553,"byte_end":10920616,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920621,"byte_end":10920624,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920629,"byte_end":10920659,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920664,"byte_end":10920667,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920672,"byte_end":10920702,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920707,"byte_end":10920729,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920734,"byte_end":10920746,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920751,"byte_end":10920758,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920763,"byte_end":10920770,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921470,"byte_end":10921477,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10920999,"byte_end":10921054,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921059,"byte_end":10921062,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921067,"byte_end":10921142,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921147,"byte_end":10921221,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921226,"byte_end":10921229,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921234,"byte_end":10921248,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921253,"byte_end":10921256,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921261,"byte_end":10921268,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921273,"byte_end":10921300,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921305,"byte_end":10921308,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921313,"byte_end":10921328,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921333,"byte_end":10921371,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921376,"byte_end":10921379,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921384,"byte_end":10921416,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921421,"byte_end":10921436,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921441,"byte_end":10921446,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921451,"byte_end":10921458,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922558,"byte_end":10922572,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921646,"byte_end":10921720,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921725,"byte_end":10921762,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921767,"byte_end":10921770,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921775,"byte_end":10921843,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921848,"byte_end":10921921,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10921926,"byte_end":10922002,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922007,"byte_end":10922081,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922086,"byte_end":10922134,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922139,"byte_end":10922142,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922147,"byte_end":10922181,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922186,"byte_end":10922213,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922218,"byte_end":10922232,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922237,"byte_end":10922240,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922245,"byte_end":10922252,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922257,"byte_end":10922284,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922289,"byte_end":10922312,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922317,"byte_end":10922380,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922385,"byte_end":10922388,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922393,"byte_end":10922433,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922438,"byte_end":10922441,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922446,"byte_end":10922490,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922495,"byte_end":10922517,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922522,"byte_end":10922534,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922539,"byte_end":10922546,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6418},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923130,"byte_end":10923140,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922797,"byte_end":10922851,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922856,"byte_end":10922870,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922875,"byte_end":10922878,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922883,"byte_end":10922890,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922895,"byte_end":10922922,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922927,"byte_end":10922930,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922935,"byte_end":10922953,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922958,"byte_end":10922979,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10922984,"byte_end":10923018,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923023,"byte_end":10923026,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923031,"byte_end":10923066,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923071,"byte_end":10923096,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923101,"byte_end":10923106,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923111,"byte_end":10923118,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10929044,"byte_end":10929050,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926201,"byte_end":10926237,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926238,"byte_end":10926241,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926242,"byte_end":10926318,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926319,"byte_end":10926399,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926400,"byte_end":10926441,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926442,"byte_end":10926445,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926446,"byte_end":10926520,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926521,"byte_end":10926606,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926607,"byte_end":10926673,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926674,"byte_end":10926677,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926678,"byte_end":10926736,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926737,"byte_end":10926817,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926818,"byte_end":10926898,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926899,"byte_end":10926982,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10926983,"byte_end":10927033,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927034,"byte_end":10927037,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927038,"byte_end":10927122,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927123,"byte_end":10927198,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927199,"byte_end":10927269,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927270,"byte_end":10927273,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927274,"byte_end":10927358,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927359,"byte_end":10927432,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927433,"byte_end":10927504,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927505,"byte_end":10927508,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927509,"byte_end":10927523,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927524,"byte_end":10927527,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927528,"byte_end":10927544,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927545,"byte_end":10927548,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927549,"byte_end":10927556,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927557,"byte_end":10927585,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927586,"byte_end":10927609,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927610,"byte_end":10927613,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927614,"byte_end":10927632,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927633,"byte_end":10927654,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927655,"byte_end":10927700,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927701,"byte_end":10927738,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927739,"byte_end":10927742,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927743,"byte_end":10927776,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927777,"byte_end":10927814,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927815,"byte_end":10927861,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927862,"byte_end":10927873,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927874,"byte_end":10927877,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927878,"byte_end":10927919,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927920,"byte_end":10927948,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927949,"byte_end":10927954,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927955,"byte_end":10927962,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927963,"byte_end":10927966,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927967,"byte_end":10927992,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927993,"byte_end":10927996,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10927997,"byte_end":10928004,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928005,"byte_end":10928033,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928034,"byte_end":10928037,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928038,"byte_end":10928073,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928074,"byte_end":10928099,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928100,"byte_end":10928103,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928104,"byte_end":10928127,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928128,"byte_end":10928163,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928164,"byte_end":10928187,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928188,"byte_end":10928193,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928194,"byte_end":10928197,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928198,"byte_end":10928222,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928223,"byte_end":10928261,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928262,"byte_end":10928301,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928302,"byte_end":10928336,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928337,"byte_end":10928340,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928341,"byte_end":10928396,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928397,"byte_end":10928434,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928435,"byte_end":10928444,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928445,"byte_end":10928448,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928449,"byte_end":10928488,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928489,"byte_end":10928507,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928508,"byte_end":10928539,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928540,"byte_end":10928618,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928619,"byte_end":10928652,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928653,"byte_end":10928670,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928671,"byte_end":10928674,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928675,"byte_end":10928725,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928726,"byte_end":10928771,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928772,"byte_end":10928785,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928786,"byte_end":10928795,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928796,"byte_end":10928801,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928802,"byte_end":10928809,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928810,"byte_end":10928813,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928814,"byte_end":10928843,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928844,"byte_end":10928885,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928886,"byte_end":10928930,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928931,"byte_end":10928973,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10928974,"byte_end":10929015,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7104},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10929900,"byte_end":10929908,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7108}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10929834,"byte_end":10929871,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931249,"byte_end":10931252,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931045,"byte_end":10931101,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931106,"byte_end":10931109,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931114,"byte_end":10931128,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931133,"byte_end":10931136,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931141,"byte_end":10931148,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931153,"byte_end":10931181,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931186,"byte_end":10931189,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931194,"byte_end":10931225,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931230,"byte_end":10931237,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931746,"byte_end":10931755,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Notify>::const_new","value":"pub const fn const_new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931397,"byte_end":10931453,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931458,"byte_end":10931461,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931466,"byte_end":10931480,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931485,"byte_end":10931488,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931493,"byte_end":10931500,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931505,"byte_end":10931533,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931538,"byte_end":10931541,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ static NOTIFY: Notify = Notify::const_new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931546,"byte_end":10931594,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931599,"byte_end":10931606,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931611,"byte_end":10931669,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932953,"byte_end":10932961,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931906,"byte_end":10931934,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931939,"byte_end":10931942,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931947,"byte_end":10931965,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931970,"byte_end":10931973,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931978,"byte_end":10931991,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931996,"byte_end":10932025,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932030,"byte_end":10932037,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932042,"byte_end":10932045,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932050,"byte_end":10932126,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932131,"byte_end":10932209,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932214,"byte_end":10932289,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932294,"byte_end":10932367,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932372,"byte_end":10932375,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932380,"byte_end":10932420,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932425,"byte_end":10932428,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932433,"byte_end":10932447,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932452,"byte_end":10932455,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932460,"byte_end":10932467,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932472,"byte_end":10932500,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932505,"byte_end":10932528,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932533,"byte_end":10932536,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932541,"byte_end":10932559,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932564,"byte_end":10932585,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932590,"byte_end":10932635,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932640,"byte_end":10932677,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932682,"byte_end":10932685,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932690,"byte_end":10932723,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932728,"byte_end":10932765,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932770,"byte_end":10932816,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932821,"byte_end":10932832,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932837,"byte_end":10932840,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932845,"byte_end":10932886,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932891,"byte_end":10932919,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932924,"byte_end":10932929,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10932934,"byte_end":10932941,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934657,"byte_end":10934667,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933486,"byte_end":10933513,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933518,"byte_end":10933521,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933526,"byte_end":10933597,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933602,"byte_end":10933670,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933675,"byte_end":10933751,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933756,"byte_end":10933801,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933806,"byte_end":10933809,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933814,"byte_end":10933888,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933893,"byte_end":10933971,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10933976,"byte_end":10934048,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934053,"byte_end":10934067,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934072,"byte_end":10934075,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934080,"byte_end":10934124,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934129,"byte_end":10934132,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934137,"byte_end":10934151,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934156,"byte_end":10934159,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934164,"byte_end":10934171,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934176,"byte_end":10934204,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934209,"byte_end":10934232,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934237,"byte_end":10934240,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934245,"byte_end":10934263,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934268,"byte_end":10934289,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934294,"byte_end":10934339,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934344,"byte_end":10934381,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934386,"byte_end":10934389,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934394,"byte_end":10934427,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934432,"byte_end":10934469,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934474,"byte_end":10934520,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934525,"byte_end":10934536,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934541,"byte_end":10934544,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934549,"byte_end":10934590,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934595,"byte_end":10934623,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934628,"byte_end":10934633,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10934638,"byte_end":10934645,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10937000,"byte_end":10937014,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10935910,"byte_end":10935940,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10935945,"byte_end":10935948,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10935953,"byte_end":10936023,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936028,"byte_end":10936094,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936099,"byte_end":10936168,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936173,"byte_end":10936244,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936249,"byte_end":10936325,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936330,"byte_end":10936333,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936338,"byte_end":10936352,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936357,"byte_end":10936360,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936365,"byte_end":10936372,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936377,"byte_end":10936405,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936410,"byte_end":10936433,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936438,"byte_end":10936441,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936446,"byte_end":10936464,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936469,"byte_end":10936490,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936495,"byte_end":10936540,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936545,"byte_end":10936582,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936587,"byte_end":10936590,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936595,"byte_end":10936637,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936642,"byte_end":10936684,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936689,"byte_end":10936692,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936697,"byte_end":10936743,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936748,"byte_end":10936794,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936799,"byte_end":10936836,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936841,"byte_end":10936852,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936857,"byte_end":10936860,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936865,"byte_end":10936889,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936894,"byte_end":10936918,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936923,"byte_end":10936966,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936971,"byte_end":10936976,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10936981,"byte_end":10936988,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6525},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6526},{"krate":0,"index":6527},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":14128},{"krate":0,"index":6536},{"krate":0,"index":14130},{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":14132},{"krate":0,"index":6539},{"krate":0,"index":14134},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543},{"krate":0,"index":7122},{"krate":0,"index":7125},{"krate":0,"index":7128},{"krate":0,"index":7131},{"krate":0,"index":6544},{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6559},{"krate":0,"index":6562},{"krate":0,"index":7159},{"krate":0,"index":7163},{"krate":0,"index":7162},{"krate":0,"index":6573},{"krate":0,"index":6575},{"krate":0,"index":6586},{"krate":0,"index":6589},{"krate":0,"index":6593},{"krate":0,"index":6596},{"krate":0,"index":6600},{"krate":0,"index":6607},{"krate":0,"index":6609},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6620},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6638}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951316,"byte_end":10951386,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951865,"byte_end":10951871,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7124}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951718,"byte_end":10951765,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951766,"byte_end":10951769,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951770,"byte_end":10951836,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952063,"byte_end":10952071,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7130}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951914,"byte_end":10951963,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951964,"byte_end":10951967,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10951968,"byte_end":10952034,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952122,"byte_end":10952127,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6545},{"krate":0,"index":7134},{"krate":0,"index":7144},{"krate":0,"index":7141},{"krate":0,"index":7142},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7146},{"krate":0,"index":7157},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6551}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952134,"byte_end":10952157,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952299,"byte_end":10952308,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952182,"byte_end":10952247,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7147},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952530,"byte_end":10952535,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7146},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952463,"byte_end":10952521,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7149},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952624,"byte_end":10952630,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7146},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952546,"byte_end":10952615,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7146},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952440,"byte_end":10952452,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":7147},{"krate":0,"index":7149}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952330,"byte_end":10952390,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6573},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955363,"byte_end":10955370,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954548,"byte_end":10954627,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954628,"byte_end":10954638,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954639,"byte_end":10954642,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954643,"byte_end":10954719,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954720,"byte_end":10954798,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954799,"byte_end":10954845,"line_start":133,"line_end":133,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954846,"byte_end":10954849,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954850,"byte_end":10954896,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954897,"byte_end":10954900,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954901,"byte_end":10954915,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954916,"byte_end":10954919,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954920,"byte_end":10954927,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954928,"byte_end":10954957,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954958,"byte_end":10954961,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954962,"byte_end":10954980,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10954981,"byte_end":10955002,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955003,"byte_end":10955045,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955046,"byte_end":10955049,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955050,"byte_end":10955083,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955084,"byte_end":10955124,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955125,"byte_end":10955174,"line_start":148,"line_end":148,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955175,"byte_end":10955188,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955189,"byte_end":10955200,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955201,"byte_end":10955204,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955205,"byte_end":10955229,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955230,"byte_end":10955277,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955278,"byte_end":10955331,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955332,"byte_end":10955341,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955342,"byte_end":10955347,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955348,"byte_end":10955355,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6577},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957393,"byte_end":10957397,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955822,"byte_end":10955897,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955902,"byte_end":10955918,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955923,"byte_end":10955926,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955931,"byte_end":10956010,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956015,"byte_end":10956090,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956095,"byte_end":10956171,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956176,"byte_end":10956248,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956253,"byte_end":10956266,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956271,"byte_end":10956274,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956279,"byte_end":10956355,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956360,"byte_end":10956436,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956441,"byte_end":10956513,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956518,"byte_end":10956591,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956596,"byte_end":10956670,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956675,"byte_end":10956747,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956752,"byte_end":10956789,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956794,"byte_end":10956797,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956802,"byte_end":10956816,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956821,"byte_end":10956824,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956829,"byte_end":10956861,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956866,"byte_end":10956869,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956874,"byte_end":10956881,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956886,"byte_end":10956915,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956920,"byte_end":10956923,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956928,"byte_end":10956946,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956951,"byte_end":10956972,"line_start":200,"line_end":200,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10956977,"byte_end":10957019,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957024,"byte_end":10957027,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957032,"byte_end":10957065,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957070,"byte_end":10957110,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957115,"byte_end":10957164,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957169,"byte_end":10957182,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957187,"byte_end":10957198,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957203,"byte_end":10957206,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957211,"byte_end":10957235,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957240,"byte_end":10957287,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957292,"byte_end":10957345,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957350,"byte_end":10957359,"line_start":212,"line_end":212,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957364,"byte_end":10957369,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957374,"byte_end":10957381,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6579},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959735,"byte_end":10959741,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957730,"byte_end":10957788,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957793,"byte_end":10957796,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957801,"byte_end":10957875,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957880,"byte_end":10957914,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957919,"byte_end":10957922,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957927,"byte_end":10957992,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10957997,"byte_end":10958069,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958074,"byte_end":10958077,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958082,"byte_end":10958094,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958099,"byte_end":10958102,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958107,"byte_end":10958155,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958160,"byte_end":10958163,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958168,"byte_end":10958194,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958199,"byte_end":10958229,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958234,"byte_end":10958237,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958242,"byte_end":10958256,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958261,"byte_end":10958264,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958269,"byte_end":10958284,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958289,"byte_end":10958292,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958297,"byte_end":10958304,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958309,"byte_end":10958338,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958343,"byte_end":10958346,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958351,"byte_end":10958369,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958374,"byte_end":10958395,"line_start":254,"line_end":254,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958400,"byte_end":10958452,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958457,"byte_end":10958460,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958465,"byte_end":10958498,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958503,"byte_end":10958524,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958529,"byte_end":10958540,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958545,"byte_end":10958548,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958553,"byte_end":10958579,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958584,"byte_end":10958625,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958630,"byte_end":10958635,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958640,"byte_end":10958647,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958652,"byte_end":10958655,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958660,"byte_end":10958682,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958687,"byte_end":10958690,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958695,"byte_end":10958702,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958707,"byte_end":10958736,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958741,"byte_end":10958779,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958784,"byte_end":10958787,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958792,"byte_end":10958826,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958831,"byte_end":10958882,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958887,"byte_end":10958912,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958917,"byte_end":10958922,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958927,"byte_end":10958930,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958935,"byte_end":10958953,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958958,"byte_end":10958979,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10958984,"byte_end":10959030,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959035,"byte_end":10959038,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959043,"byte_end":10959076,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959081,"byte_end":10959109,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959114,"byte_end":10959150,"line_start":283,"line_end":283,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959155,"byte_end":10959230,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959235,"byte_end":10959252,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959257,"byte_end":10959295,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959300,"byte_end":10959384,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959389,"byte_end":10959472,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959477,"byte_end":10959520,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959525,"byte_end":10959542,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959547,"byte_end":10959560,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959565,"byte_end":10959576,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959581,"byte_end":10959584,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959589,"byte_end":10959625,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959630,"byte_end":10959695,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959700,"byte_end":10959705,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959710,"byte_end":10959717,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960611,"byte_end":10960620,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959852,"byte_end":10959926,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959931,"byte_end":10959934,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10959939,"byte_end":10960013,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960018,"byte_end":10960052,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960057,"byte_end":10960060,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960065,"byte_end":10960140,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960145,"byte_end":10960148,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960153,"byte_end":10960179,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960184,"byte_end":10960214,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960219,"byte_end":10960222,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960227,"byte_end":10960241,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960246,"byte_end":10960249,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960254,"byte_end":10960261,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960266,"byte_end":10960295,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960300,"byte_end":10960303,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960308,"byte_end":10960326,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960331,"byte_end":10960352,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960357,"byte_end":10960399,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960404,"byte_end":10960407,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960412,"byte_end":10960445,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960450,"byte_end":10960453,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960458,"byte_end":10960475,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960480,"byte_end":10960483,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960488,"byte_end":10960520,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960525,"byte_end":10960577,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960582,"byte_end":10960587,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960592,"byte_end":10960599,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6585},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10962066,"byte_end":10962077,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960782,"byte_end":10960862,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960867,"byte_end":10960950,"line_start":339,"line_end":339,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960955,"byte_end":10960966,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960971,"byte_end":10960974,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10960979,"byte_end":10961059,"line_start":342,"line_end":342,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961064,"byte_end":10961098,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961103,"byte_end":10961106,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961111,"byte_end":10961194,"line_start":345,"line_end":345,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961199,"byte_end":10961265,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961270,"byte_end":10961273,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961278,"byte_end":10961333,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961338,"byte_end":10961393,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961398,"byte_end":10961401,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961406,"byte_end":10961424,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961429,"byte_end":10961432,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961437,"byte_end":10961463,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961468,"byte_end":10961471,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961476,"byte_end":10961528,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961533,"byte_end":10961583,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961588,"byte_end":10961591,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961596,"byte_end":10961610,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961615,"byte_end":10961618,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961623,"byte_end":10961630,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961635,"byte_end":10961664,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961669,"byte_end":10961672,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961677,"byte_end":10961710,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961715,"byte_end":10961718,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961723,"byte_end":10961741,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961746,"byte_end":10961767,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961772,"byte_end":10961828,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961833,"byte_end":10961836,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961841,"byte_end":10961874,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961879,"byte_end":10961902,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961907,"byte_end":10961918,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961923,"byte_end":10961926,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961931,"byte_end":10961978,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961983,"byte_end":10961986,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10961991,"byte_end":10962032,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10962037,"byte_end":10962042,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10962047,"byte_end":10962054,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965240,"byte_end":10965245,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963602,"byte_end":10963669,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963674,"byte_end":10963677,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963682,"byte_end":10963756,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963761,"byte_end":10963829,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963834,"byte_end":10963900,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963905,"byte_end":10963919,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963924,"byte_end":10963927,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963932,"byte_end":10964008,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964013,"byte_end":10964076,"line_start":444,"line_end":444,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964081,"byte_end":10964084,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964089,"byte_end":10964111,"line_start":446,"line_end":446,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964116,"byte_end":10964152,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964157,"byte_end":10964160,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964165,"byte_end":10964179,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964184,"byte_end":10964187,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964192,"byte_end":10964227,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964232,"byte_end":10964235,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964240,"byte_end":10964247,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964252,"byte_end":10964281,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964286,"byte_end":10964336,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964341,"byte_end":10964344,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964349,"byte_end":10964367,"line_start":457,"line_end":457,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964372,"byte_end":10964393,"line_start":458,"line_end":458,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964398,"byte_end":10964444,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964449,"byte_end":10964452,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964457,"byte_end":10964490,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964495,"byte_end":10964498,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964503,"byte_end":10964522,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964527,"byte_end":10964530,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964535,"byte_end":10964567,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964572,"byte_end":10964624,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964629,"byte_end":10964632,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964637,"byte_end":10964666,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964671,"byte_end":10964714,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964719,"byte_end":10964751,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964756,"byte_end":10964765,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964770,"byte_end":10964775,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964780,"byte_end":10964787,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964792,"byte_end":10964795,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964800,"byte_end":10964851,"line_start":475,"line_end":475,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964856,"byte_end":10964859,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964864,"byte_end":10964871,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964876,"byte_end":10964905,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964910,"byte_end":10964913,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964918,"byte_end":10964936,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964941,"byte_end":10964962,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10964967,"byte_end":10965013,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965018,"byte_end":10965021,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965026,"byte_end":10965075,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965080,"byte_end":10965083,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965088,"byte_end":10965107,"line_start":486,"line_end":486,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965112,"byte_end":10965115,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965120,"byte_end":10965161,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965166,"byte_end":10965206,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965211,"byte_end":10965216,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965221,"byte_end":10965228,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6592},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967228,"byte_end":10967236,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965343,"byte_end":10965375,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965380,"byte_end":10965383,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965388,"byte_end":10965461,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965466,"byte_end":10965532,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965537,"byte_end":10965561,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965566,"byte_end":10965569,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965574,"byte_end":10965640,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965645,"byte_end":10965667,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965672,"byte_end":10965675,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965680,"byte_end":10965692,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965697,"byte_end":10965700,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965705,"byte_end":10965756,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965761,"byte_end":10965824,"line_start":509,"line_end":509,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965829,"byte_end":10965904,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965909,"byte_end":10965923,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965928,"byte_end":10965931,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965936,"byte_end":10965950,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965955,"byte_end":10965958,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10965963,"byte_end":10966013,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966018,"byte_end":10966021,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966026,"byte_end":10966033,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966038,"byte_end":10966067,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966072,"byte_end":10966122,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966127,"byte_end":10966130,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966135,"byte_end":10966153,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966158,"byte_end":10966179,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966184,"byte_end":10966230,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966235,"byte_end":10966238,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966243,"byte_end":10966272,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966277,"byte_end":10966322,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966327,"byte_end":10966369,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966374,"byte_end":10966406,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966411,"byte_end":10966420,"line_start":529,"line_end":529,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966425,"byte_end":10966428,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966433,"byte_end":10966456,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966461,"byte_end":10966495,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966500,"byte_end":10966503,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966508,"byte_end":10966537,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966542,"byte_end":10966594,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966599,"byte_end":10966631,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966636,"byte_end":10966645,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966650,"byte_end":10966655,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966660,"byte_end":10966667,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966672,"byte_end":10966675,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966680,"byte_end":10966741,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966746,"byte_end":10966749,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966754,"byte_end":10966761,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966766,"byte_end":10966795,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966800,"byte_end":10966850,"line_start":545,"line_end":545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966855,"byte_end":10966858,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966863,"byte_end":10966881,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966886,"byte_end":10966907,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966912,"byte_end":10966964,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966969,"byte_end":10966972,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966977,"byte_end":10966994,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10966999,"byte_end":10967002,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967007,"byte_end":10967036,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967041,"byte_end":10967095,"line_start":554,"line_end":554,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967100,"byte_end":10967143,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967148,"byte_end":10967180,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967185,"byte_end":10967194,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967199,"byte_end":10967204,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967209,"byte_end":10967216,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7166},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976810,"byte_end":10976816,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":7165},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976684,"byte_end":10976749,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976754,"byte_end":10976757,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976762,"byte_end":10976805,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7168},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976871,"byte_end":10976880,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":7165},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976823,"byte_end":10976866,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976662,"byte_end":10976677,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":7166},{"krate":0,"index":7168}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976488,"byte_end":10976552,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976553,"byte_end":10976556,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976557,"byte_end":10976624,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7175},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10977166,"byte_end":10977178,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976884,"byte_end":10976944,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976945,"byte_end":10976948,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10976949,"byte_end":10977015,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10977016,"byte_end":10977029,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10977030,"byte_end":10977033,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10977034,"byte_end":10977077,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10977078,"byte_end":10977137,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996425,"byte_end":10996434,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":7181}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995575,"byte_end":10995641,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995642,"byte_end":10995645,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995646,"byte_end":10995721,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995722,"byte_end":10995798,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995799,"byte_end":10995879,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995880,"byte_end":10995889,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995890,"byte_end":10995893,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995894,"byte_end":10995967,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10995968,"byte_end":10996047,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996048,"byte_end":10996126,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996127,"byte_end":10996198,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996199,"byte_end":10996202,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996203,"byte_end":10996283,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996284,"byte_end":10996296,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996297,"byte_end":10996300,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996301,"byte_end":10996396,"line_start":20,"line_end":20,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996683,"byte_end":10996698,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7186},{"krate":0,"index":7187}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996499,"byte_end":10996531,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996532,"byte_end":10996535,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996536,"byte_end":10996587,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996588,"byte_end":10996591,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996592,"byte_end":10996642,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996643,"byte_end":10996654,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7191},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996959,"byte_end":10996979,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7192},{"krate":0,"index":7193}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996750,"byte_end":10996789,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996790,"byte_end":10996793,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996794,"byte_end":10996851,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996852,"byte_end":10996855,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996856,"byte_end":10996918,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10996919,"byte_end":10996930,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6743},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997575,"byte_end":10997578,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997500,"byte_end":10997563,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6744},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997893,"byte_end":10997902,"line_start":77,"line_end":77,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Semaphore>::const_new","value":"pub const fn const_new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997690,"byte_end":10997753,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997758,"byte_end":10997816,"line_start":75,"line_end":75,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6745},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998084,"byte_end":10998101,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998020,"byte_end":10998072,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998348,"byte_end":10998359,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998171,"byte_end":10998213,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998218,"byte_end":10998221,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998226,"byte_end":10998336,"line_start":90,"line_end":90,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998779,"byte_end":10998786,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998422,"byte_end":10998463,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998468,"byte_end":10998471,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998476,"byte_end":10998547,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998552,"byte_end":10998618,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998623,"byte_end":10998643,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998648,"byte_end":10998651,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998656,"byte_end":10998703,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998708,"byte_end":10998761,"line_start":102,"line_end":102,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6750},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999340,"byte_end":10999352,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10998979,"byte_end":10999023,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999028,"byte_end":10999031,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999036,"byte_end":10999107,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999112,"byte_end":10999178,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999183,"byte_end":10999204,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999209,"byte_end":10999212,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999217,"byte_end":10999264,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999269,"byte_end":10999322,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6753},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000091,"byte_end":11000102,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999553,"byte_end":10999602,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999607,"byte_end":10999610,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999615,"byte_end":10999695,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999700,"byte_end":10999781,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999786,"byte_end":10999859,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999864,"byte_end":10999867,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999872,"byte_end":10999941,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10999946,"byte_end":11000021,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000026,"byte_end":11000079,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6754},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000906,"byte_end":11000922,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000367,"byte_end":11000417,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000422,"byte_end":11000425,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000430,"byte_end":11000510,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000515,"byte_end":11000596,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000601,"byte_end":11000674,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000679,"byte_end":11000682,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000687,"byte_end":11000756,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000761,"byte_end":11000836,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11000841,"byte_end":11000894,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001672,"byte_end":11001685,"line_start":175,"line_end":175,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001195,"byte_end":11001236,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001241,"byte_end":11001244,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001249,"byte_end":11001317,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001322,"byte_end":11001393,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001398,"byte_end":11001469,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001474,"byte_end":11001494,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001499,"byte_end":11001502,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001507,"byte_end":11001534,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001539,"byte_end":11001586,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001591,"byte_end":11001654,"line_start":174,"line_end":174,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002558,"byte_end":11002575,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001893,"byte_end":11001942,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001947,"byte_end":11001950,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11001955,"byte_end":11002026,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002031,"byte_end":11002108,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002113,"byte_end":11002183,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002188,"byte_end":11002259,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002264,"byte_end":11002284,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002289,"byte_end":11002292,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002297,"byte_end":11002324,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002329,"byte_end":11002398,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002403,"byte_end":11002478,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002483,"byte_end":11002546,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6759},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003769,"byte_end":11003774,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002856,"byte_end":11002881,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002886,"byte_end":11002889,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002894,"byte_end":11002984,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002989,"byte_end":11002992,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11002997,"byte_end":11003011,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003016,"byte_end":11003019,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003024,"byte_end":11003031,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003036,"byte_end":11003067,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003072,"byte_end":11003095,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003100,"byte_end":11003137,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003142,"byte_end":11003145,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003150,"byte_end":11003168,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003173,"byte_end":11003194,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003199,"byte_end":11003251,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003256,"byte_end":11003299,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003304,"byte_end":11003307,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003312,"byte_end":11003345,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003350,"byte_end":11003407,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003412,"byte_end":11003449,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003454,"byte_end":11003500,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003505,"byte_end":11003516,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003521,"byte_end":11003524,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003529,"byte_end":11003567,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003572,"byte_end":11003599,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003604,"byte_end":11003607,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003612,"byte_end":11003649,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003654,"byte_end":11003735,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003740,"byte_end":11003745,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003750,"byte_end":11003757,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6762},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004032,"byte_end":11004038,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003857,"byte_end":11003927,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003932,"byte_end":11004001,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004006,"byte_end":11004020,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6764},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004293,"byte_end":11004299,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004118,"byte_end":11004188,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004193,"byte_end":11004262,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004267,"byte_end":11004281,"line_start":251,"line_end":251,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7196},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007409,"byte_end":11007415,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":7198},{"krate":0,"index":7199}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11004878,"byte_end":11004917,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11004918,"byte_end":11004921,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11004922,"byte_end":11004999,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005000,"byte_end":11005079,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005080,"byte_end":11005159,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005160,"byte_end":11005218,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005219,"byte_end":11005222,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005223,"byte_end":11005301,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005302,"byte_end":11005380,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005381,"byte_end":11005459,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005460,"byte_end":11005525,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005526,"byte_end":11005529,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005530,"byte_end":11005594,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005595,"byte_end":11005667,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005668,"byte_end":11005748,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005749,"byte_end":11005829,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005830,"byte_end":11005910,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005911,"byte_end":11005980,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11005981,"byte_end":11006051,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006052,"byte_end":11006090,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006091,"byte_end":11006094,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006095,"byte_end":11006172,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006173,"byte_end":11006258,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006259,"byte_end":11006339,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006340,"byte_end":11006387,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006388,"byte_end":11006460,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006461,"byte_end":11006464,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006465,"byte_end":11006479,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006480,"byte_end":11006483,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006484,"byte_end":11006491,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006492,"byte_end":11006520,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006521,"byte_end":11006524,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006525,"byte_end":11006543,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006544,"byte_end":11006565,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006566,"byte_end":11006600,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006601,"byte_end":11006604,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006605,"byte_end":11006653,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006654,"byte_end":11006663,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006664,"byte_end":11006703,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006704,"byte_end":11006743,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006744,"byte_end":11006775,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006776,"byte_end":11006807,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006808,"byte_end":11006857,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006858,"byte_end":11006861,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006862,"byte_end":11006913,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006914,"byte_end":11006923,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006924,"byte_end":11006967,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006968,"byte_end":11006988,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11006989,"byte_end":11007019,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007020,"byte_end":11007059,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007060,"byte_end":11007065,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007066,"byte_end":11007073,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007074,"byte_end":11007077,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007078,"byte_end":11007112,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007113,"byte_end":11007142,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007143,"byte_end":11007190,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007191,"byte_end":11007240,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007241,"byte_end":11007278,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007279,"byte_end":11007380,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007790,"byte_end":11007805,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007549,"byte_end":11007621,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007622,"byte_end":11007634,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007635,"byte_end":11007638,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007639,"byte_end":11007694,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007695,"byte_end":11007710,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007711,"byte_end":11007714,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007715,"byte_end":11007748,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007749,"byte_end":11007778,"line_start":90,"line_end":90,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6794},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009123,"byte_end":11009126,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007949,"byte_end":11008017,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008022,"byte_end":11008025,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008030,"byte_end":11008103,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008108,"byte_end":11008128,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008133,"byte_end":11008136,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008141,"byte_end":11008192,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008197,"byte_end":11008267,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008272,"byte_end":11008336,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008341,"byte_end":11008344,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008349,"byte_end":11008421,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008426,"byte_end":11008452,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008457,"byte_end":11008460,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008465,"byte_end":11008574,"line_start":110,"line_end":110,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008579,"byte_end":11008642,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008647,"byte_end":11008650,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008655,"byte_end":11008669,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008674,"byte_end":11008677,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008682,"byte_end":11008689,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008694,"byte_end":11008741,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008746,"byte_end":11008749,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008754,"byte_end":11008802,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008807,"byte_end":11008827,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008832,"byte_end":11008835,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008840,"byte_end":11008860,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008865,"byte_end":11008888,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008893,"byte_end":11008928,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008933,"byte_end":11008936,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008941,"byte_end":11008975,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11008980,"byte_end":11009034,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009039,"byte_end":11009042,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009047,"byte_end":11009073,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009078,"byte_end":11009085,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009090,"byte_end":11009097,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009102,"byte_end":11009111,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6797},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010821,"byte_end":11010828,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009504,"byte_end":11009573,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009578,"byte_end":11009648,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009653,"byte_end":11009664,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009669,"byte_end":11009672,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009677,"byte_end":11009750,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009755,"byte_end":11009775,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009780,"byte_end":11009783,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009788,"byte_end":11009847,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009852,"byte_end":11009932,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009937,"byte_end":11009986,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009991,"byte_end":11009994,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11009999,"byte_end":11010075,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010080,"byte_end":11010106,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010111,"byte_end":11010114,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010119,"byte_end":11010236,"line_start":161,"line_end":161,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010241,"byte_end":11010304,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010309,"byte_end":11010312,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010317,"byte_end":11010331,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010336,"byte_end":11010339,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010344,"byte_end":11010351,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010356,"byte_end":11010403,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010408,"byte_end":11010411,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010416,"byte_end":11010464,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010469,"byte_end":11010489,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010494,"byte_end":11010497,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010502,"byte_end":11010522,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010527,"byte_end":11010550,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010555,"byte_end":11010590,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010595,"byte_end":11010598,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010603,"byte_end":11010637,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010642,"byte_end":11010732,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010737,"byte_end":11010740,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010745,"byte_end":11010771,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010776,"byte_end":11010783,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010788,"byte_end":11010795,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11010800,"byte_end":11010809,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012077,"byte_end":11012093,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011825,"byte_end":11011901,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011902,"byte_end":11011914,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011915,"byte_end":11011918,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011919,"byte_end":11011976,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011977,"byte_end":11011995,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011996,"byte_end":11011999,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012000,"byte_end":11012035,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012036,"byte_end":11012065,"line_start":233,"line_end":233,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013413,"byte_end":11013422,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012248,"byte_end":11012320,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012325,"byte_end":11012394,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012399,"byte_end":11012402,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012407,"byte_end":11012485,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012490,"byte_end":11012566,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012571,"byte_end":11012583,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012588,"byte_end":11012591,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012596,"byte_end":11012670,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012675,"byte_end":11012692,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012697,"byte_end":11012700,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012705,"byte_end":11012719,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012724,"byte_end":11012727,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012732,"byte_end":11012739,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012744,"byte_end":11012774,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012779,"byte_end":11012804,"line_start":255,"line_end":255,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012809,"byte_end":11012814,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012819,"byte_end":11012839,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012844,"byte_end":11012867,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012872,"byte_end":11012912,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012917,"byte_end":11012920,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012925,"byte_end":11012956,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012961,"byte_end":11012967,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012972,"byte_end":11013007,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013012,"byte_end":11013054,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013059,"byte_end":11013098,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013103,"byte_end":11013110,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013115,"byte_end":11013118,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013123,"byte_end":11013149,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013154,"byte_end":11013199,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013204,"byte_end":11013207,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013212,"byte_end":11013224,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013229,"byte_end":11013255,"line_start":272,"line_end":272,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013260,"byte_end":11013335,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013340,"byte_end":11013347,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013352,"byte_end":11013359,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013364,"byte_end":11013367,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013372,"byte_end":11013401,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6848},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016418,"byte_end":11016421,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016208,"byte_end":11016271,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016276,"byte_end":11016279,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016284,"byte_end":11016298,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016303,"byte_end":11016306,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016311,"byte_end":11016318,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016323,"byte_end":11016351,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016356,"byte_end":11016359,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016364,"byte_end":11016394,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016399,"byte_end":11016406,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6849},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016958,"byte_end":11016967,"line_start":391,"line_end":391,"column_start":18,"column_end":27},"name":"const_new","qualname":"<RwLock<T>>::const_new","value":"pub const fn const_new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016598,"byte_end":11016661,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016666,"byte_end":11016669,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016674,"byte_end":11016688,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016693,"byte_end":11016696,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016701,"byte_end":11016708,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016713,"byte_end":11016741,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016746,"byte_end":11016749,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ static LOCK: RwLock<i32> = RwLock::const_new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016754,"byte_end":11016806,"line_start":387,"line_end":387,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016811,"byte_end":11016818,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016823,"byte_end":11016881,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6850},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018628,"byte_end":11018632,"line_start":441,"line_end":441,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017150,"byte_end":11017223,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017228,"byte_end":11017274,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017279,"byte_end":11017282,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017287,"byte_end":11017360,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017365,"byte_end":11017440,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017445,"byte_end":11017448,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017453,"byte_end":11017526,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017531,"byte_end":11017600,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017605,"byte_end":11017679,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017684,"byte_end":11017757,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017762,"byte_end":11017786,"line_start":411,"line_end":411,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017791,"byte_end":11017794,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017799,"byte_end":11017873,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017878,"byte_end":11017895,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017900,"byte_end":11017903,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017908,"byte_end":11017922,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017927,"byte_end":11017930,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017935,"byte_end":11017942,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017947,"byte_end":11017970,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11017975,"byte_end":11018003,"line_start":420,"line_end":420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018008,"byte_end":11018011,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018016,"byte_end":11018034,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018039,"byte_end":11018060,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018065,"byte_end":11018109,"line_start":424,"line_end":424,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018114,"byte_end":11018148,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018153,"byte_end":11018156,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018161,"byte_end":11018195,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018200,"byte_end":11018226,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018231,"byte_end":11018234,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018239,"byte_end":11018272,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018277,"byte_end":11018347,"line_start":431,"line_end":431,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018352,"byte_end":11018392,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018397,"byte_end":11018427,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018432,"byte_end":11018489,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018494,"byte_end":11018497,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018502,"byte_end":11018560,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018565,"byte_end":11018581,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018586,"byte_end":11018590,"line_start":438,"line_end":438,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018595,"byte_end":11018602,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11018607,"byte_end":11018610,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020098,"byte_end":11020106,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019079,"byte_end":11019141,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019146,"byte_end":11019149,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019154,"byte_end":11019231,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019236,"byte_end":11019307,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019312,"byte_end":11019329,"line_start":458,"line_end":458,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019334,"byte_end":11019337,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019342,"byte_end":11019376,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019381,"byte_end":11019384,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019389,"byte_end":11019403,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019408,"byte_end":11019411,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019416,"byte_end":11019423,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019428,"byte_end":11019451,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019456,"byte_end":11019484,"line_start":466,"line_end":466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019489,"byte_end":11019492,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019497,"byte_end":11019515,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019520,"byte_end":11019541,"line_start":469,"line_end":469,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019546,"byte_end":11019590,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019595,"byte_end":11019629,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019634,"byte_end":11019637,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019642,"byte_end":11019683,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019688,"byte_end":11019714,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019719,"byte_end":11019722,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019727,"byte_end":11019760,"line_start":476,"line_end":476,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019765,"byte_end":11019835,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019840,"byte_end":11019880,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019885,"byte_end":11019915,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019920,"byte_end":11019977,"line_start":480,"line_end":480,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019982,"byte_end":11019985,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11019990,"byte_end":11020043,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020048,"byte_end":11020064,"line_start":483,"line_end":483,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020069,"byte_end":11020074,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020079,"byte_end":11020086,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6855},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021169,"byte_end":11021174,"line_start":522,"line_end":522,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020532,"byte_end":11020604,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020609,"byte_end":11020660,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020665,"byte_end":11020668,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020673,"byte_end":11020735,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020740,"byte_end":11020778,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020783,"byte_end":11020786,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020791,"byte_end":11020866,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020871,"byte_end":11020888,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020893,"byte_end":11020896,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020901,"byte_end":11020915,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020920,"byte_end":11020923,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020928,"byte_end":11020935,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020940,"byte_end":11020968,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020973,"byte_end":11020976,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11020981,"byte_end":11020999,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021004,"byte_end":11021025,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021030,"byte_end":11021062,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021067,"byte_end":11021070,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021075,"byte_end":11021112,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021117,"byte_end":11021130,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021135,"byte_end":11021139,"line_start":520,"line_end":520,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021144,"byte_end":11021151,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6859},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022278,"byte_end":11022287,"line_start":558,"line_end":558,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021638,"byte_end":11021704,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021709,"byte_end":11021712,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021717,"byte_end":11021794,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021799,"byte_end":11021871,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021876,"byte_end":11021893,"line_start":539,"line_end":539,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021898,"byte_end":11021901,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021906,"byte_end":11021940,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021945,"byte_end":11021948,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021953,"byte_end":11021967,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021972,"byte_end":11021975,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021980,"byte_end":11021987,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11021992,"byte_end":11022020,"line_start":546,"line_end":546,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022025,"byte_end":11022028,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022033,"byte_end":11022051,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022056,"byte_end":11022077,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022082,"byte_end":11022114,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022119,"byte_end":11022122,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022127,"byte_end":11022159,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022164,"byte_end":11022190,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022195,"byte_end":11022198,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022203,"byte_end":11022244,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022249,"byte_end":11022254,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022259,"byte_end":11022266,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023202,"byte_end":11023209,"line_start":589,"line_end":589,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022730,"byte_end":11022785,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022790,"byte_end":11022793,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022798,"byte_end":11022874,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022879,"byte_end":11022953,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022958,"byte_end":11022961,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022966,"byte_end":11022980,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022985,"byte_end":11022988,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11022993,"byte_end":11023000,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023005,"byte_end":11023033,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023038,"byte_end":11023041,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023046,"byte_end":11023061,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023066,"byte_end":11023104,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023109,"byte_end":11023112,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023117,"byte_end":11023148,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023153,"byte_end":11023168,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023173,"byte_end":11023178,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023183,"byte_end":11023190,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6861},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023443,"byte_end":11023453,"line_start":597,"line_end":597,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023378,"byte_end":11023431,"line_start":596,"line_end":596,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6929},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933},{"krate":0,"index":14242},{"krate":0,"index":6934},{"krate":0,"index":14244},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939},{"krate":0,"index":7203},{"krate":0,"index":7207},{"krate":0,"index":7210},{"krate":0,"index":7213},{"krate":0,"index":7216},{"krate":0,"index":7220},{"krate":0,"index":7224},{"krate":0,"index":7231},{"krate":0,"index":6940},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6959},{"krate":0,"index":6961},{"krate":0,"index":6964},{"krate":0,"index":6967},{"krate":0,"index":6975},{"krate":0,"index":6978}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037047,"byte_end":11037126,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037127,"byte_end":11037137,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037138,"byte_end":11037141,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037142,"byte_end":11037218,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037219,"byte_end":11037293,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037294,"byte_end":11037297,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037298,"byte_end":11037309,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037310,"byte_end":11037313,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037314,"byte_end":11037394,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037395,"byte_end":11037471,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037472,"byte_end":11037542,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037543,"byte_end":11037619,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037620,"byte_end":11037661,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037662,"byte_end":11037665,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037666,"byte_end":11037680,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037681,"byte_end":11037684,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037685,"byte_end":11037692,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037693,"byte_end":11037720,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037721,"byte_end":11037724,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037725,"byte_end":11037789,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037790,"byte_end":11037841,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037842,"byte_end":11037845,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037846,"byte_end":11037879,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037880,"byte_end":11037926,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037927,"byte_end":11037985,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11037986,"byte_end":11037999,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038000,"byte_end":11038011,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038012,"byte_end":11038015,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038016,"byte_end":11038042,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038043,"byte_end":11038055,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038056,"byte_end":11038063,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038064,"byte_end":11038071,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038072,"byte_end":11038075,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038076,"byte_end":11038089,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038090,"byte_end":11038093,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038094,"byte_end":11038171,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038172,"byte_end":11038250,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038251,"byte_end":11038331,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038332,"byte_end":11038335,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038336,"byte_end":11038355,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038356,"byte_end":11038359,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038360,"byte_end":11038440,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038441,"byte_end":11038520,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038521,"byte_end":11038593,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038594,"byte_end":11038597,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038598,"byte_end":11038640,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038641,"byte_end":11038687,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038688,"byte_end":11038754,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038755,"byte_end":11038819,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038820,"byte_end":11038864,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038865,"byte_end":11038929,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11038930,"byte_end":11038988,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7203},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039552,"byte_end":11039560,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039190,"byte_end":11039256,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039257,"byte_end":11039260,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039261,"byte_end":11039327,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039328,"byte_end":11039331,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039332,"byte_end":11039406,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039407,"byte_end":11039419,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039420,"byte_end":11039423,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039424,"byte_end":11039523,"line_start":68,"line_end":68,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":7210},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039849,"byte_end":11039855,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7212}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039684,"byte_end":11039749,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039750,"byte_end":11039753,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039754,"byte_end":11039820,"line_start":80,"line_end":80,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7216},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040175,"byte_end":11040178,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":7219}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039892,"byte_end":11039934,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039935,"byte_end":11039938,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11039939,"byte_end":11040015,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040016,"byte_end":11040095,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040096,"byte_end":11040146,"line_start":90,"line_end":90,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6940},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040755,"byte_end":11040760,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6941},{"krate":0,"index":7234},{"krate":0,"index":7237},{"krate":0,"index":6942},{"krate":0,"index":6945},{"krate":0,"index":7240},{"krate":0,"index":7243},{"krate":0,"index":6947},{"krate":0,"index":6949}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040767,"byte_end":11040788,"line_start":118,"line_end":118,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7234},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040896,"byte_end":11040905,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":7236}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11040813,"byte_end":11040859,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7240},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041326,"byte_end":11041335,"line_start":140,"line_end":140,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041233,"byte_end":11041289,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6951},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042390,"byte_end":11042397,"line_start":182,"line_end":182,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041627,"byte_end":11041703,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041704,"byte_end":11041707,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041708,"byte_end":11041790,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041791,"byte_end":11041867,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041868,"byte_end":11041904,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041905,"byte_end":11041908,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041909,"byte_end":11041923,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041924,"byte_end":11041927,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041928,"byte_end":11041935,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041936,"byte_end":11041963,"line_start":164,"line_end":164,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041964,"byte_end":11041967,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041968,"byte_end":11042032,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042033,"byte_end":11042084,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042085,"byte_end":11042088,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042089,"byte_end":11042122,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042123,"byte_end":11042169,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042170,"byte_end":11042228,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042229,"byte_end":11042242,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042243,"byte_end":11042254,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042255,"byte_end":11042258,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042259,"byte_end":11042285,"line_start":175,"line_end":175,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042286,"byte_end":11042298,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042299,"byte_end":11042306,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042307,"byte_end":11042314,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042315,"byte_end":11042318,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042319,"byte_end":11042348,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042349,"byte_end":11042382,"line_start":181,"line_end":181,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6955},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043280,"byte_end":11043286,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042818,"byte_end":11042873,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042878,"byte_end":11042881,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042886,"byte_end":11042962,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042967,"byte_end":11043043,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043048,"byte_end":11043079,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043084,"byte_end":11043087,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043092,"byte_end":11043106,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043111,"byte_end":11043114,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043119,"byte_end":11043126,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043131,"byte_end":11043158,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043163,"byte_end":11043166,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043171,"byte_end":11043213,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043218,"byte_end":11043256,"line_start":213,"line_end":213,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043261,"byte_end":11043268,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044212,"byte_end":11044219,"line_start":248,"line_end":248,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043398,"byte_end":11043432,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043437,"byte_end":11043440,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043445,"byte_end":11043520,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043525,"byte_end":11043601,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043606,"byte_end":11043619,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043624,"byte_end":11043627,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043632,"byte_end":11043661,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043666,"byte_end":11043669,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043674,"byte_end":11043688,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043693,"byte_end":11043696,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043701,"byte_end":11043708,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043713,"byte_end":11043740,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043745,"byte_end":11043748,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043753,"byte_end":11043771,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043776,"byte_end":11043797,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043802,"byte_end":11043853,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043858,"byte_end":11043861,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043866,"byte_end":11043899,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043904,"byte_end":11043944,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043949,"byte_end":11043960,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043965,"byte_end":11043968,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11043973,"byte_end":11044017,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044022,"byte_end":11044066,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044071,"byte_end":11044074,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044079,"byte_end":11044122,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044127,"byte_end":11044172,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044177,"byte_end":11044182,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11044187,"byte_end":11044194,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046156,"byte_end":11046160,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046081,"byte_end":11046144,"line_start":312,"line_end":312,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6970},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047187,"byte_end":11047193,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046725,"byte_end":11046780,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046785,"byte_end":11046788,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046793,"byte_end":11046869,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046874,"byte_end":11046950,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046955,"byte_end":11046986,"line_start":334,"line_end":334,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046991,"byte_end":11046994,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046999,"byte_end":11047013,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047018,"byte_end":11047021,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047026,"byte_end":11047033,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047038,"byte_end":11047065,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047070,"byte_end":11047073,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047078,"byte_end":11047120,"line_start":341,"line_end":341,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047125,"byte_end":11047163,"line_start":342,"line_end":342,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047168,"byte_end":11047175,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047621,"byte_end":11047630,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047305,"byte_end":11047379,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047384,"byte_end":11047401,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047406,"byte_end":11047409,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047414,"byte_end":11047428,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047433,"byte_end":11047436,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047441,"byte_end":11047448,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047453,"byte_end":11047504,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047509,"byte_end":11047538,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047543,"byte_end":11047546,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047551,"byte_end":11047564,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047569,"byte_end":11047597,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047602,"byte_end":11047609,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6972},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048374,"byte_end":11048380,"line_start":389,"line_end":389,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047711,"byte_end":11047757,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047762,"byte_end":11047765,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047770,"byte_end":11047844,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047849,"byte_end":11047904,"line_start":368,"line_end":368,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047909,"byte_end":11047912,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047917,"byte_end":11047931,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047936,"byte_end":11047939,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047944,"byte_end":11047951,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047956,"byte_end":11047983,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047988,"byte_end":11047991,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11047996,"byte_end":11048014,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048019,"byte_end":11048040,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048045,"byte_end":11048092,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048097,"byte_end":11048100,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048105,"byte_end":11048138,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048143,"byte_end":11048166,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048171,"byte_end":11048192,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048197,"byte_end":11048208,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048213,"byte_end":11048216,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048221,"byte_end":11048254,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048259,"byte_end":11048285,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048290,"byte_end":11048334,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048339,"byte_end":11048344,"line_start":387,"line_end":387,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048349,"byte_end":11048356,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":7245},{"krate":0,"index":7246},{"krate":0,"index":7247},{"krate":0,"index":7248},{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7256},{"krate":0,"index":7417},{"krate":0,"index":7257},{"krate":0,"index":7263},{"krate":0,"index":7264},{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347},{"krate":0,"index":7408}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131548,"byte_end":131579,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131580,"byte_end":131583,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131584,"byte_end":131606,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131607,"byte_end":131610,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131611,"byte_end":131692,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131693,"byte_end":131773,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131774,"byte_end":131854,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131855,"byte_end":131929,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131930,"byte_end":132005,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132006,"byte_end":132028,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132029,"byte_end":132032,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132033,"byte_end":132068,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132069,"byte_end":132072,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132073,"byte_end":132147,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132148,"byte_end":132227,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132228,"byte_end":132300,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132301,"byte_end":132376,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132377,"byte_end":132430,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132431,"byte_end":132434,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132435,"byte_end":132512,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132513,"byte_end":132586,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132587,"byte_end":132666,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132667,"byte_end":132745,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132746,"byte_end":132818,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132819,"byte_end":132894,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132895,"byte_end":132969,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132970,"byte_end":133045,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133046,"byte_end":133076,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133077,"byte_end":133080,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133081,"byte_end":133159,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133160,"byte_end":133235,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133236,"byte_end":133313,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133314,"byte_end":133393,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133394,"byte_end":133472,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133473,"byte_end":133548,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133549,"byte_end":133624,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133625,"byte_end":133686,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133687,"byte_end":133690,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133691,"byte_end":133715,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133716,"byte_end":133780,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133781,"byte_end":133841,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133842,"byte_end":133931,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133932,"byte_end":134020,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134021,"byte_end":134024,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134025,"byte_end":134050,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134051,"byte_end":134054,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134055,"byte_end":134122,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134123,"byte_end":134126,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134127,"byte_end":134143,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134144,"byte_end":134147,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134148,"byte_end":134227,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134228,"byte_end":134307,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134308,"byte_end":134387,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134388,"byte_end":134455,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134456,"byte_end":134459,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134460,"byte_end":134467,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134468,"byte_end":134488,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134489,"byte_end":134492,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134493,"byte_end":134515,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134516,"byte_end":134539,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134540,"byte_end":134576,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134577,"byte_end":134584,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134585,"byte_end":134592,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134593,"byte_end":134600,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134601,"byte_end":134604,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134605,"byte_end":134684,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134685,"byte_end":134763,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134764,"byte_end":134798,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134799,"byte_end":134802,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134803,"byte_end":134810,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134811,"byte_end":134831,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134832,"byte_end":134835,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134836,"byte_end":134916,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134917,"byte_end":134951,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134952,"byte_end":134966,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134967,"byte_end":134989,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134990,"byte_end":134997,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134998,"byte_end":135001,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135002,"byte_end":135012,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135013,"byte_end":135016,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135017,"byte_end":135061,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135062,"byte_end":135091,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135092,"byte_end":135131,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135132,"byte_end":135144,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135145,"byte_end":135152,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135153,"byte_end":135160,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135161,"byte_end":135164,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135165,"byte_end":135245,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135246,"byte_end":135322,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135323,"byte_end":135335,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135336,"byte_end":135339,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135340,"byte_end":135347,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135348,"byte_end":135368,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135369,"byte_end":135372,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135373,"byte_end":135411,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135412,"byte_end":135446,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135447,"byte_end":135488,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135489,"byte_end":135496,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135497,"byte_end":135500,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135501,"byte_end":135559,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135560,"byte_end":135593,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135594,"byte_end":135601,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135602,"byte_end":135609,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135610,"byte_end":135613,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135614,"byte_end":135682,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135683,"byte_end":135711,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135712,"byte_end":135715,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135716,"byte_end":135757,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135758,"byte_end":135791,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135792,"byte_end":135838,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135839,"byte_end":135882,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135883,"byte_end":135925,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135926,"byte_end":135967,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135968,"byte_end":135971,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135972,"byte_end":136001,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136002,"byte_end":136005,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136006,"byte_end":136086,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136087,"byte_end":136166,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136167,"byte_end":136246,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136247,"byte_end":136287,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136288,"byte_end":136291,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136292,"byte_end":136366,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136367,"byte_end":136447,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136448,"byte_end":136451,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136452,"byte_end":136475,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136476,"byte_end":136479,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136480,"byte_end":136560,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136561,"byte_end":136627,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136628,"byte_end":136695,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136696,"byte_end":136770,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136771,"byte_end":136783,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136784,"byte_end":136787,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136788,"byte_end":136795,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136796,"byte_end":136816,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136817,"byte_end":136820,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136821,"byte_end":136844,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136845,"byte_end":136874,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136875,"byte_end":136937,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136938,"byte_end":136945,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136946,"byte_end":136953,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136954,"byte_end":136961,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136962,"byte_end":136965,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136966,"byte_end":137040,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137041,"byte_end":137108,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137109,"byte_end":137112,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137113,"byte_end":137124,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137125,"byte_end":137147,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137148,"byte_end":137212,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137213,"byte_end":137253,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137254,"byte_end":137316,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137317,"byte_end":137345,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137346,"byte_end":137353,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137354,"byte_end":137357,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137358,"byte_end":137387,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137388,"byte_end":137433,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137434,"byte_end":137446,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137447,"byte_end":137454,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137455,"byte_end":137462,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137463,"byte_end":137466,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137467,"byte_end":137490,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137491,"byte_end":137494,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137495,"byte_end":137585,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137586,"byte_end":137660,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137661,"byte_end":137737,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137738,"byte_end":137812,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137813,"byte_end":137892,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137893,"byte_end":137975,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137976,"byte_end":137997,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137998,"byte_end":138001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138002,"byte_end":138018,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138019,"byte_end":138022,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138023,"byte_end":138030,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138031,"byte_end":138051,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138052,"byte_end":138055,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138056,"byte_end":138079,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138080,"byte_end":138122,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138123,"byte_end":138185,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138186,"byte_end":138214,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138215,"byte_end":138222,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138223,"byte_end":138226,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138227,"byte_end":138272,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138273,"byte_end":138280,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138281,"byte_end":138288,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138289,"byte_end":138292,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138293,"byte_end":138311,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138312,"byte_end":138315,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138316,"byte_end":138390,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138391,"byte_end":138469,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138470,"byte_end":138546,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138547,"byte_end":138604,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138605,"byte_end":138683,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138684,"byte_end":138712,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138713,"byte_end":138716,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138717,"byte_end":138728,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138729,"byte_end":138749,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138750,"byte_end":138753,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138754,"byte_end":138792,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138793,"byte_end":138804,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138805,"byte_end":138832,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138833,"byte_end":138851,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138852,"byte_end":138894,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138895,"byte_end":138906,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138907,"byte_end":138910,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138911,"byte_end":138978,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":138979,"byte_end":139011,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139012,"byte_end":139048,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139049,"byte_end":139054,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139055,"byte_end":139068,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139069,"byte_end":139076,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139077,"byte_end":139084,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139085,"byte_end":139088,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139089,"byte_end":139146,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139147,"byte_end":139204,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139205,"byte_end":139268,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139269,"byte_end":139318,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":139319,"byte_end":139368,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7409},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":11053116,"byte_end":11053130,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23697,"byte_end":23732,"line_start":279,"line_end":279,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7412},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":11056064,"byte_end":11056078,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":11056038,"byte_end":11056050,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7415},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":11059965,"byte_end":11059970,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":11059939,"byte_end":11059951,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7418},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":11060944,"byte_end":11060953,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":11060863,"byte_end":11060926,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11069059,"byte_end":11069067,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":7427},{"krate":0,"index":7428},{"krate":0,"index":7429}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":7435},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11071161,"byte_end":11071172,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11071135,"byte_end":11071147,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7299},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072069,"byte_end":11072072,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072024,"byte_end":11072057,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7300},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073827,"byte_end":11073838,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072614,"byte_end":11072664,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072669,"byte_end":11072672,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072677,"byte_end":11072737,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072742,"byte_end":11072745,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072750,"byte_end":11072822,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072827,"byte_end":11072897,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072902,"byte_end":11072913,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072918,"byte_end":11072938,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072943,"byte_end":11072946,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072951,"byte_end":11072969,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072974,"byte_end":11072995,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073000,"byte_end":11073042,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073047,"byte_end":11073050,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073055,"byte_end":11073127,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073132,"byte_end":11073185,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073190,"byte_end":11073223,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073228,"byte_end":11073245,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073250,"byte_end":11073261,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073266,"byte_end":11073269,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073274,"byte_end":11073308,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073313,"byte_end":11073349,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073354,"byte_end":11073372,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073377,"byte_end":11073394,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073399,"byte_end":11073402,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073407,"byte_end":11073478,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073483,"byte_end":11073533,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073538,"byte_end":11073571,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073576,"byte_end":11073593,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073598,"byte_end":11073609,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073614,"byte_end":11073617,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073622,"byte_end":11073658,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073663,"byte_end":11073681,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073686,"byte_end":11073703,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073708,"byte_end":11073713,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073718,"byte_end":11073725,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073730,"byte_end":11073765,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11073801,"byte_end":11073813,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7302},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076678,"byte_end":11076686,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074223,"byte_end":11074297,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074302,"byte_end":11074361,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074366,"byte_end":11074369,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074374,"byte_end":11074441,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074446,"byte_end":11074519,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074524,"byte_end":11074600,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074605,"byte_end":11074685,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074690,"byte_end":11074709,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074714,"byte_end":11074717,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074722,"byte_end":11074788,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074793,"byte_end":11074796,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074801,"byte_end":11074813,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074818,"byte_end":11074821,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074826,"byte_end":11074898,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074903,"byte_end":11074976,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074981,"byte_end":11074984,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11074989,"byte_end":11075000,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075005,"byte_end":11075008,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075013,"byte_end":11075087,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075092,"byte_end":11075167,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075172,"byte_end":11075247,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075252,"byte_end":11075329,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075334,"byte_end":11075337,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075342,"byte_end":11075375,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075380,"byte_end":11075399,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075404,"byte_end":11075436,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075441,"byte_end":11075461,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075466,"byte_end":11075469,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075474,"byte_end":11075512,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075517,"byte_end":11075555,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075560,"byte_end":11075591,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075596,"byte_end":11075640,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075645,"byte_end":11075704,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075709,"byte_end":11075731,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075736,"byte_end":11075751,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075756,"byte_end":11075774,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075779,"byte_end":11075790,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075795,"byte_end":11075823,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075828,"byte_end":11075834,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075839,"byte_end":11075846,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075851,"byte_end":11075885,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075890,"byte_end":11075897,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075902,"byte_end":11075934,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075939,"byte_end":11075959,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075964,"byte_end":11075967,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11075972,"byte_end":11076010,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076015,"byte_end":11076053,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076058,"byte_end":11076089,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076094,"byte_end":11076138,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076143,"byte_end":11076202,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076207,"byte_end":11076229,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076234,"byte_end":11076255,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076260,"byte_end":11076278,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076283,"byte_end":11076294,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076299,"byte_end":11076327,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076332,"byte_end":11076338,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076343,"byte_end":11076350,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076355,"byte_end":11076358,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076363,"byte_end":11076398,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076403,"byte_end":11076470,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076475,"byte_end":11076530,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076535,"byte_end":11076589,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076594,"byte_end":11076616,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7304},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077933,"byte_end":11077942,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076841,"byte_end":11076911,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076916,"byte_end":11076919,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076924,"byte_end":11076994,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11076999,"byte_end":11077075,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077080,"byte_end":11077148,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077153,"byte_end":11077233,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077238,"byte_end":11077310,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077315,"byte_end":11077390,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077395,"byte_end":11077451,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077456,"byte_end":11077459,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077464,"byte_end":11077478,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077483,"byte_end":11077486,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077491,"byte_end":11077502,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077507,"byte_end":11077527,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077532,"byte_end":11077535,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077540,"byte_end":11077558,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077563,"byte_end":11077584,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077589,"byte_end":11077636,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077641,"byte_end":11077683,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077688,"byte_end":11077710,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077715,"byte_end":11077745,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077750,"byte_end":11077768,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077773,"byte_end":11077790,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077795,"byte_end":11077800,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077805,"byte_end":11077812,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077817,"byte_end":11077820,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077825,"byte_end":11077860,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11077865,"byte_end":11077915,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7361},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086951,"byte_end":11086959,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7363}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086072,"byte_end":11086102,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086103,"byte_end":11086106,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086107,"byte_end":11086161,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086162,"byte_end":11086165,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086166,"byte_end":11086232,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086233,"byte_end":11086300,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086301,"byte_end":11086358,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086359,"byte_end":11086428,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086429,"byte_end":11086432,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086433,"byte_end":11086447,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086448,"byte_end":11086451,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086452,"byte_end":11086459,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086460,"byte_end":11086482,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086483,"byte_end":11086507,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086508,"byte_end":11086535,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086536,"byte_end":11086541,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086542,"byte_end":11086545,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086546,"byte_end":11086578,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086579,"byte_end":11086615,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086616,"byte_end":11086629,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086630,"byte_end":11086633,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086634,"byte_end":11086666,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086667,"byte_end":11086703,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086704,"byte_end":11086707,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086708,"byte_end":11086744,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086745,"byte_end":11086785,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086786,"byte_end":11086803,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086804,"byte_end":11086817,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086818,"byte_end":11086825,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086826,"byte_end":11086833,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11086834,"byte_end":11086893,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087001,"byte_end":11087006,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7366},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087534,"byte_end":11087539,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087084,"byte_end":11087148,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087153,"byte_end":11087156,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087161,"byte_end":11087222,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087227,"byte_end":11087230,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087235,"byte_end":11087251,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087256,"byte_end":11087259,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087264,"byte_end":11087271,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087276,"byte_end":11087298,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087303,"byte_end":11087327,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087332,"byte_end":11087359,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087364,"byte_end":11087369,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087374,"byte_end":11087377,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087382,"byte_end":11087414,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087419,"byte_end":11087474,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087479,"byte_end":11087492,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087497,"byte_end":11087504,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087509,"byte_end":11087516,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7370},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088013,"byte_end":11088017,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087764,"byte_end":11087830,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087835,"byte_end":11087838,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087843,"byte_end":11087855,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087860,"byte_end":11087863,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087868,"byte_end":11087929,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087934,"byte_end":11088001,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7373},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088505,"byte_end":11088513,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088258,"byte_end":11088324,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088329,"byte_end":11088332,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088337,"byte_end":11088403,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088408,"byte_end":11088473,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088478,"byte_end":11088493,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7379},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088973,"byte_end":11088976,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088868,"byte_end":11088910,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088915,"byte_end":11088961,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7438},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090465,"byte_end":11090476,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7439}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090340,"byte_end":11090415,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7451},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7454},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7734},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7793},{"krate":0,"index":7794},{"krate":0,"index":7795},{"krate":0,"index":7822},{"krate":0,"index":7823},{"krate":0,"index":7824},{"krate":0,"index":7825},{"krate":0,"index":7826}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090849,"byte_end":11090881,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090882,"byte_end":11090885,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090886,"byte_end":11090966,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090967,"byte_end":11090979,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090980,"byte_end":11090983,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11090984,"byte_end":11091065,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091066,"byte_end":11091080,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091081,"byte_end":11091084,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091085,"byte_end":11091155,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091156,"byte_end":11091236,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091237,"byte_end":11091251,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091252,"byte_end":11091255,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091256,"byte_end":11091335,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091336,"byte_end":11091408,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091409,"byte_end":11091478,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091479,"byte_end":11091482,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091483,"byte_end":11091554,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091555,"byte_end":11091574,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091575,"byte_end":11091578,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091579,"byte_end":11091649,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091650,"byte_end":11091653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091654,"byte_end":11091668,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091669,"byte_end":11091672,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091673,"byte_end":11091719,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091720,"byte_end":11091723,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091724,"byte_end":11091731,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091732,"byte_end":11091759,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091760,"byte_end":11091763,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091764,"byte_end":11091792,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091793,"byte_end":11091796,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091797,"byte_end":11091800,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091801,"byte_end":11091819,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091820,"byte_end":11091841,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091842,"byte_end":11091890,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091891,"byte_end":11091931,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091932,"byte_end":11091937,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091938,"byte_end":11091945,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091946,"byte_end":11091949,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11091950,"byte_end":11092005,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092006,"byte_end":11092009,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092010,"byte_end":11092017,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092018,"byte_end":11092059,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092060,"byte_end":11092063,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092064,"byte_end":11092092,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092093,"byte_end":11092116,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092117,"byte_end":11092122,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092123,"byte_end":11092126,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092127,"byte_end":11092149,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092150,"byte_end":11092217,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092218,"byte_end":11092221,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092222,"byte_end":11092243,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092244,"byte_end":11092284,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092285,"byte_end":11092290,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092291,"byte_end":11092298,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092299,"byte_end":11092306,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092307,"byte_end":11092310,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092311,"byte_end":11092387,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092388,"byte_end":11092391,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092392,"byte_end":11092456,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092457,"byte_end":11092529,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092530,"byte_end":11092605,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092606,"byte_end":11092684,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092685,"byte_end":11092688,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092689,"byte_end":11092763,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092764,"byte_end":11092834,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092835,"byte_end":11092847,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092848,"byte_end":11092851,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092852,"byte_end":11092859,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092860,"byte_end":11092880,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092881,"byte_end":11092884,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092885,"byte_end":11092926,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092927,"byte_end":11092953,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11092954,"byte_end":11093009,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093010,"byte_end":11093015,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093016,"byte_end":11093019,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093020,"byte_end":11093038,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093039,"byte_end":11093060,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093061,"byte_end":11093129,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093130,"byte_end":11093160,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093161,"byte_end":11093164,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093165,"byte_end":11093189,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093190,"byte_end":11093233,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093234,"byte_end":11093279,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093280,"byte_end":11093289,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093290,"byte_end":11093295,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093296,"byte_end":11093303,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093304,"byte_end":11093307,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093308,"byte_end":11093343,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093344,"byte_end":11093385,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161028,"byte_end":11161039,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160640,"byte_end":11160678,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160679,"byte_end":11160682,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160683,"byte_end":11160763,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160764,"byte_end":11160841,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160842,"byte_end":11160877,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160878,"byte_end":11160881,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160882,"byte_end":11160900,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160901,"byte_end":11160904,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160905,"byte_end":11160990,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11160991,"byte_end":11161020,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7633},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11162093,"byte_end":11162098,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161106,"byte_end":11161145,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161146,"byte_end":11161149,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161150,"byte_end":11161225,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161226,"byte_end":11161261,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161262,"byte_end":11161265,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161266,"byte_end":11161346,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161347,"byte_end":11161424,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161425,"byte_end":11161460,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161461,"byte_end":11161464,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161465,"byte_end":11161528,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161529,"byte_end":11161532,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161533,"byte_end":11161624,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161625,"byte_end":11161628,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161629,"byte_end":11161647,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161648,"byte_end":11161651,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161652,"byte_end":11161737,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161738,"byte_end":11161767,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161768,"byte_end":11161771,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161772,"byte_end":11161786,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161787,"byte_end":11161790,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161791,"byte_end":11161838,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161839,"byte_end":11161842,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161843,"byte_end":11161850,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161851,"byte_end":11161890,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161891,"byte_end":11161894,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161895,"byte_end":11161913,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161914,"byte_end":11161935,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161936,"byte_end":11161984,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11161985,"byte_end":11162025,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11162026,"byte_end":11162031,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11162032,"byte_end":11162039,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11162040,"byte_end":11162043,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11162044,"byte_end":11162085,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8313},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165054,"byte_end":11165059,"line_start":150,"line_end":150,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":8314},{"krate":0,"index":8315}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7636},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165505,"byte_end":11165513,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165435,"byte_end":11165493,"line_start":167,"line_end":167,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7637},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165708,"byte_end":11165718,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165567,"byte_end":11165609,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165614,"byte_end":11165617,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165622,"byte_end":11165696,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7638},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166714,"byte_end":11166719,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165779,"byte_end":11165829,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165834,"byte_end":11165837,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165842,"byte_end":11165916,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165921,"byte_end":11165988,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165993,"byte_end":11165996,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166001,"byte_end":11166069,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166074,"byte_end":11166088,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166093,"byte_end":11166096,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166101,"byte_end":11166164,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method with consuming the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166169,"byte_end":11166239,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ `Sleep` itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166244,"byte_end":11166263,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166268,"byte_end":11166271,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166276,"byte_end":11166289,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166294,"byte_end":11166297,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166302,"byte_end":11166309,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166314,"byte_end":11166355,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166360,"byte_end":11166363,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166368,"byte_end":11166415,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166420,"byte_end":11166443,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166448,"byte_end":11166510,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166515,"byte_end":11166538,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166543,"byte_end":11166546,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166551,"byte_end":11166620,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166625,"byte_end":11166632,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166637,"byte_end":11166644,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166649,"byte_end":11166652,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11166657,"byte_end":11166702,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":7710},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7903},{"krate":0,"index":7909},{"krate":0,"index":7908},{"krate":0,"index":7906},{"krate":0,"index":7911},{"krate":0,"index":7930},{"krate":0,"index":7928},{"krate":0,"index":7927},{"krate":0,"index":7924},{"krate":0,"index":7925},{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":7714},{"krate":0,"index":7932},{"krate":0,"index":7939},{"krate":0,"index":7935},{"krate":0,"index":7936},{"krate":0,"index":7941},{"krate":0,"index":7944},{"krate":0,"index":7716},{"krate":0,"index":7723},{"krate":0,"index":7724},{"krate":0,"index":7727},{"krate":0,"index":7729},{"krate":0,"index":7731},{"krate":0,"index":7732}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168008,"byte_end":11168029,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7903},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169216,"byte_end":11169221,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168081,"byte_end":11168132,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168133,"byte_end":11168136,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168137,"byte_end":11168198,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168199,"byte_end":11168202,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168203,"byte_end":11168277,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168278,"byte_end":11168357,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168358,"byte_end":11168433,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168434,"byte_end":11168509,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168510,"byte_end":11168538,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168539,"byte_end":11168542,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168543,"byte_end":11168620,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168621,"byte_end":11168708,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168709,"byte_end":11168785,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168786,"byte_end":11168866,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168867,"byte_end":11168944,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11168945,"byte_end":11169026,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169027,"byte_end":11169109,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169110,"byte_end":11169113,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169114,"byte_end":11169174,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7932},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169525,"byte_end":11169532,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169453,"byte_end":11169485,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7717},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169709,"byte_end":11169717,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169646,"byte_end":11169697,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7718},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169849,"byte_end":11169860,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169766,"byte_end":11169837,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7719},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169996,"byte_end":11170007,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169930,"byte_end":11169984,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7720},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170144,"byte_end":11170158,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170058,"byte_end":11170132,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7721},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170297,"byte_end":11170304,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170230,"byte_end":11170285,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7722},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170440,"byte_end":11170450,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170352,"byte_end":11170428,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7946},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172828,"byte_end":11172835,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7947}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171537,"byte_end":11171594,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171595,"byte_end":11171638,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171639,"byte_end":11171642,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171643,"byte_end":11171720,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171721,"byte_end":11171795,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171796,"byte_end":11171849,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171850,"byte_end":11171853,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171854,"byte_end":11171932,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11171933,"byte_end":11172010,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172011,"byte_end":11172087,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172088,"byte_end":11172162,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172163,"byte_end":11172177,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172178,"byte_end":11172181,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172182,"byte_end":11172262,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172263,"byte_end":11172341,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172342,"byte_end":11172414,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172415,"byte_end":11172429,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172430,"byte_end":11172433,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172434,"byte_end":11172512,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172513,"byte_end":11172524,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172525,"byte_end":11172528,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172529,"byte_end":11172539,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172540,"byte_end":11172543,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172544,"byte_end":11172618,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172619,"byte_end":11172694,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172695,"byte_end":11172755,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173082,"byte_end":11173085,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172889,"byte_end":11172935,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172940,"byte_end":11172943,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172948,"byte_end":11172962,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172967,"byte_end":11172970,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172975,"byte_end":11172982,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172987,"byte_end":11173016,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173021,"byte_end":11173024,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173029,"byte_end":11173058,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173063,"byte_end":11173070,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173211,"byte_end":11173219,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173135,"byte_end":11173199,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173355,"byte_end":11173363,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173293,"byte_end":11173343,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173607,"byte_end":11173621,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173422,"byte_end":11173494,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173499,"byte_end":11173502,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173507,"byte_end":11173519,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173524,"byte_end":11173527,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173532,"byte_end":11173595,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174304,"byte_end":11174326,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173717,"byte_end":11173792,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173797,"byte_end":11173845,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173850,"byte_end":11173853,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173858,"byte_end":11173872,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173877,"byte_end":11173880,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173885,"byte_end":11173892,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173897,"byte_end":11173945,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173950,"byte_end":11173953,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173958,"byte_end":11173976,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11173981,"byte_end":11174002,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174007,"byte_end":11174040,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174045,"byte_end":11174086,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174091,"byte_end":11174128,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174133,"byte_end":11174195,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174200,"byte_end":11174270,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174275,"byte_end":11174280,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174285,"byte_end":11174292,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7744},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175041,"byte_end":11175066,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174438,"byte_end":11174513,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174518,"byte_end":11174577,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174582,"byte_end":11174585,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174590,"byte_end":11174604,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174609,"byte_end":11174612,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174617,"byte_end":11174624,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174629,"byte_end":11174677,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174682,"byte_end":11174685,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174690,"byte_end":11174708,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174713,"byte_end":11174734,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174739,"byte_end":11174772,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174777,"byte_end":11174818,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174823,"byte_end":11174860,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174865,"byte_end":11174930,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11174935,"byte_end":11175007,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175012,"byte_end":11175017,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175022,"byte_end":11175029,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7745},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175829,"byte_end":11175836,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175173,"byte_end":11175243,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175248,"byte_end":11175251,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175256,"byte_end":11175268,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175273,"byte_end":11175276,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175281,"byte_end":11175349,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175354,"byte_end":11175420,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175425,"byte_end":11175452,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175457,"byte_end":11175460,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175465,"byte_end":11175479,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175484,"byte_end":11175487,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175492,"byte_end":11175499,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175504,"byte_end":11175552,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175557,"byte_end":11175560,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175565,"byte_end":11175583,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175588,"byte_end":11175609,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175614,"byte_end":11175651,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175656,"byte_end":11175704,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175709,"byte_end":11175741,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175746,"byte_end":11175795,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175800,"byte_end":11175805,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175810,"byte_end":11175817,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176117,"byte_end":11176128,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175900,"byte_end":11175975,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11175980,"byte_end":11176051,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176056,"byte_end":11176105,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7747},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176467,"byte_end":11176478,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176250,"byte_end":11176325,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176330,"byte_end":11176401,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176406,"byte_end":11176455,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7783},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179922,"byte_end":11179930,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178200,"byte_end":11178277,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178278,"byte_end":11178309,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178310,"byte_end":11178313,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178314,"byte_end":11178394,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178395,"byte_end":11178434,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178435,"byte_end":11178438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178439,"byte_end":11178512,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178513,"byte_end":11178516,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178517,"byte_end":11178529,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178530,"byte_end":11178533,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178534,"byte_end":11178579,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178580,"byte_end":11178583,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178584,"byte_end":11178598,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178599,"byte_end":11178602,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178603,"byte_end":11178610,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178611,"byte_end":11178649,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178650,"byte_end":11178653,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178654,"byte_end":11178672,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178673,"byte_end":11178694,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178695,"byte_end":11178764,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178765,"byte_end":11178768,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178769,"byte_end":11178799,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178800,"byte_end":11178830,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178831,"byte_end":11178861,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178862,"byte_end":11178865,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178866,"byte_end":11178909,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178910,"byte_end":11178915,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178916,"byte_end":11178923,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178924,"byte_end":11178927,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11178928,"byte_end":11179002,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179003,"byte_end":11179006,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179007,"byte_end":11179080,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179081,"byte_end":11179156,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179157,"byte_end":11179233,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179234,"byte_end":11179295,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179296,"byte_end":11179299,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179300,"byte_end":11179374,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179375,"byte_end":11179445,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179446,"byte_end":11179458,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179459,"byte_end":11179462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179463,"byte_end":11179470,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179471,"byte_end":11179491,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179492,"byte_end":11179495,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179496,"byte_end":11179537,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179538,"byte_end":11179564,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179565,"byte_end":11179620,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179621,"byte_end":11179626,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179627,"byte_end":11179630,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179631,"byte_end":11179649,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179650,"byte_end":11179671,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179672,"byte_end":11179744,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179745,"byte_end":11179769,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179770,"byte_end":11179804,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179805,"byte_end":11179850,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179851,"byte_end":11179860,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179861,"byte_end":11179866,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179867,"byte_end":11179874,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179875,"byte_end":11179878,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11179879,"byte_end":11179914,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180819,"byte_end":11180830,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180080,"byte_end":11180153,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180154,"byte_end":11180191,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180192,"byte_end":11180195,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180196,"byte_end":11180276,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180277,"byte_end":11180316,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180317,"byte_end":11180320,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180321,"byte_end":11180333,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180334,"byte_end":11180337,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180338,"byte_end":11180383,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180384,"byte_end":11180387,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180388,"byte_end":11180402,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180403,"byte_end":11180406,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180407,"byte_end":11180414,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180415,"byte_end":11180469,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180470,"byte_end":11180473,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180474,"byte_end":11180492,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180493,"byte_end":11180514,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180515,"byte_end":11180578,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180579,"byte_end":11180652,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180653,"byte_end":11180656,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180657,"byte_end":11180687,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180688,"byte_end":11180718,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180719,"byte_end":11180749,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180750,"byte_end":11180753,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180754,"byte_end":11180797,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180798,"byte_end":11180803,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11180804,"byte_end":11180811,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181585,"byte_end":11181593,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7970},{"krate":0,"index":7971}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181038,"byte_end":11181119,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181120,"byte_end":11181123,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181124,"byte_end":11181197,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181198,"byte_end":11181277,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181278,"byte_end":11181356,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181357,"byte_end":11181369,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181370,"byte_end":11181373,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181374,"byte_end":11181446,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181447,"byte_end":11181450,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181451,"byte_end":11181556,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182326,"byte_end":11182330,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181804,"byte_end":11181873,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181878,"byte_end":11181881,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181886,"byte_end":11181900,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181905,"byte_end":11181908,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181913,"byte_end":11181920,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181925,"byte_end":11181945,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181950,"byte_end":11181953,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181958,"byte_end":11181986,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181991,"byte_end":11181994,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181999,"byte_end":11182017,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182022,"byte_end":11182043,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182048,"byte_end":11182117,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182122,"byte_end":11182125,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182130,"byte_end":11182160,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182165,"byte_end":11182195,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182200,"byte_end":11182230,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182235,"byte_end":11182238,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182243,"byte_end":11182286,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182291,"byte_end":11182296,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182301,"byte_end":11182308,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11183006,"byte_end":11183015,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182413,"byte_end":11182473,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182478,"byte_end":11182481,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182486,"byte_end":11182534,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182539,"byte_end":11182542,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182547,"byte_end":11182615,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182620,"byte_end":11182687,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182692,"byte_end":11182695,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182700,"byte_end":11182775,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182780,"byte_end":11182855,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182860,"byte_end":11182935,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11182940,"byte_end":11182994,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":7808},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184862,"byte_end":11184869,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11183847,"byte_end":11183924,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11183925,"byte_end":11183928,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11183929,"byte_end":11184008,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184009,"byte_end":11184081,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184082,"byte_end":11184095,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184096,"byte_end":11184099,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184100,"byte_end":11184117,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184118,"byte_end":11184121,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184122,"byte_end":11184200,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184201,"byte_end":11184231,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184232,"byte_end":11184235,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184236,"byte_end":11184316,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184317,"byte_end":11184344,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184345,"byte_end":11184348,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184349,"byte_end":11184363,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184364,"byte_end":11184367,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184368,"byte_end":11184428,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184429,"byte_end":11184432,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184433,"byte_end":11184444,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184445,"byte_end":11184474,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184475,"byte_end":11184504,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184505,"byte_end":11184508,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184509,"byte_end":11184537,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184538,"byte_end":11184541,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184542,"byte_end":11184564,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184565,"byte_end":11184603,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184604,"byte_end":11184631,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184632,"byte_end":11184635,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184636,"byte_end":11184709,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184710,"byte_end":11184776,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184777,"byte_end":11184832,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184833,"byte_end":11184838,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184839,"byte_end":11184846,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11184847,"byte_end":11184854,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7810},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186081,"byte_end":11186091,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185050,"byte_end":11185122,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185123,"byte_end":11185126,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185127,"byte_end":11185204,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185205,"byte_end":11185260,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185261,"byte_end":11185264,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185265,"byte_end":11185282,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185283,"byte_end":11185286,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185287,"byte_end":11185365,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185366,"byte_end":11185396,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185397,"byte_end":11185400,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185401,"byte_end":11185481,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185482,"byte_end":11185509,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185510,"byte_end":11185513,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185514,"byte_end":11185528,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185529,"byte_end":11185532,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185533,"byte_end":11185593,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185594,"byte_end":11185597,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185598,"byte_end":11185609,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185610,"byte_end":11185653,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185654,"byte_end":11185683,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185684,"byte_end":11185687,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185688,"byte_end":11185716,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185717,"byte_end":11185720,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185721,"byte_end":11185743,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185744,"byte_end":11185782,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185783,"byte_end":11185810,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185811,"byte_end":11185814,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185815,"byte_end":11185893,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185894,"byte_end":11185908,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185909,"byte_end":11185995,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11185996,"byte_end":11186051,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186052,"byte_end":11186057,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186058,"byte_end":11186065,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186066,"byte_end":11186073,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8275},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186466,"byte_end":11186473,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8277},{"krate":0,"index":8278}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.5\\src\\lib.rs","byte_start":11232503,"byte_end":11232512,"line_start":437,"line_end":437,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7815},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186769,"byte_end":11186776,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186696,"byte_end":11186757,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7816},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186904,"byte_end":11186911,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186823,"byte_end":11186892,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7817},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11187040,"byte_end":11187050,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186970,"byte_end":11187028,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142147,"byte_end":142153,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142056,"byte_end":142085,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142090,"byte_end":142093,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142098,"byte_end":142137,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142183,"byte_end":142189,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142160,"byte_end":142173,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":160611,"byte_end":160623,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":160496,"byte_end":160527,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16448,"byte_end":16454,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14953,"byte_end":15034,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15035,"byte_end":15124,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15125,"byte_end":15135,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15136,"byte_end":15139,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15140,"byte_end":15189,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15190,"byte_end":15193,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15194,"byte_end":15270,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15271,"byte_end":15345,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15346,"byte_end":15424,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15425,"byte_end":15502,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15503,"byte_end":15582,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15583,"byte_end":15665,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15666,"byte_end":15701,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15702,"byte_end":15705,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15706,"byte_end":15785,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15786,"byte_end":15868,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15869,"byte_end":15948,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15949,"byte_end":15952,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15953,"byte_end":16003,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16004,"byte_end":16054,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16055,"byte_end":16109,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16110,"byte_end":16113,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16114,"byte_end":16127,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16128,"byte_end":16131,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16132,"byte_end":16191,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16192,"byte_end":16195,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16196,"byte_end":16214,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16215,"byte_end":16241,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16242,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16246,"byte_end":16296,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16297,"byte_end":16300,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16301,"byte_end":16341,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16342,"byte_end":16390,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16391,"byte_end":16414,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16415,"byte_end":16424,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16425,"byte_end":16431,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16432,"byte_end":16439,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006347,"byte_end":10006357,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012660,"byte_end":10012664,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":840},{"krate":0,"index":844},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024274,"byte_end":10024278,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10026733,"byte_end":10026737,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10028874,"byte_end":10028878,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10031467,"byte_end":10031471,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10031569,"byte_end":10031573,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032135,"byte_end":10032139,"line_start":717,"line_end":717,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032310,"byte_end":10032314,"line_start":724,"line_end":724,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032462,"byte_end":10032467,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037974,"byte_end":10037985,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10050779,"byte_end":10050790,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10058675,"byte_end":10058686,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10058804,"byte_end":10058815,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061926,"byte_end":10061933,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065230,"byte_end":10065238,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075969,"byte_end":10075974,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10076001,"byte_end":10076006,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","byte_start":10077215,"byte_end":10077223,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10079751,"byte_end":10079759,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10080032,"byte_end":10080040,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10081635,"byte_end":10081643,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10084367,"byte_end":10084370,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10086200,"byte_end":10086203,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096762,"byte_end":10096770,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098911,"byte_end":10098919,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10099062,"byte_end":10099070,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10099198,"byte_end":10099206,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099791,"byte_end":10099796,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10104213,"byte_end":10104218,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10104962,"byte_end":10104967,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105128,"byte_end":10105133,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105261,"byte_end":10105266,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105420,"byte_end":10105425,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105572,"byte_end":10105577,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108025,"byte_end":10108037,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108062,"byte_end":10108074,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108118,"byte_end":10108130,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10113558,"byte_end":10113570,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10114169,"byte_end":10114181,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10117584,"byte_end":10117595,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10117855,"byte_end":10117866,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10118046,"byte_end":10118057,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126240,"byte_end":10126251,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126340,"byte_end":10126351,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126376,"byte_end":10126387,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126421,"byte_end":10126432,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10127355,"byte_end":10127361,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10127856,"byte_end":10127865,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132539,"byte_end":10132548,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132913,"byte_end":10132922,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132955,"byte_end":10132964,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10089351,"byte_end":10089357,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092163,"byte_end":10092169,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092284,"byte_end":10092289,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092733,"byte_end":10092739,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10093138,"byte_end":10093144,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10093294,"byte_end":10093300,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10094125,"byte_end":10094131,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10094948,"byte_end":10094954,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10095032,"byte_end":10095038,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10095173,"byte_end":10095178,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10096135,"byte_end":10096144,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10136485,"byte_end":10136496,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10139131,"byte_end":10139142,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10140685,"byte_end":10140696,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10140839,"byte_end":10140850,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10141022,"byte_end":10141033,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdio_common.rs","byte_start":10141768,"byte_end":10141796,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdio_common.rs","byte_start":10142057,"byte_end":10142085,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10151378,"byte_end":10151384,"line_start":84,"line_end":84,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10151523,"byte_end":10151529,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10154115,"byte_end":10154120,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10154257,"byte_end":10154262,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10157102,"byte_end":10157108,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10157247,"byte_end":10157253,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159356,"byte_end":10159364,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160281,"byte_end":10160290,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160540,"byte_end":10160548,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160843,"byte_end":10160852,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10161531,"byte_end":10161536,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10161992,"byte_end":10161997,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162250,"byte_end":10162255,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162378,"byte_end":10162386,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162423,"byte_end":10162432,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162469,"byte_end":10162477,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162514,"byte_end":10162523,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162566,"byte_end":10162574,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162742,"byte_end":10162751,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10163708,"byte_end":10163712,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10175623,"byte_end":10175624,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10214951,"byte_end":10214952,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10217061,"byte_end":10217062,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10252309,"byte_end":10252310,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253678,"byte_end":10253687,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255544,"byte_end":10255553,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10256363,"byte_end":10256372,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10257285,"byte_end":10257294,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10257805,"byte_end":10257814,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259303,"byte_end":10259312,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10261149,"byte_end":10261158,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10261300,"byte_end":10261309,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262021,"byte_end":10262030,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262560,"byte_end":10262569,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262824,"byte_end":10262833,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264769,"byte_end":10264778,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10267056,"byte_end":10267065,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10267955,"byte_end":10267964,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10268218,"byte_end":10268227,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10268514,"byte_end":10268523,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269701,"byte_end":10269706,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270846,"byte_end":10270851,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10271130,"byte_end":10271135,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10271721,"byte_end":10271726,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10274561,"byte_end":10274565,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10278259,"byte_end":10278266,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280533,"byte_end":10280538,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280752,"byte_end":10280757,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280990,"byte_end":10280995,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10282122,"byte_end":10282127,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283458,"byte_end":10283463,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284715,"byte_end":10284720,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288998,"byte_end":10289010,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10289554,"byte_end":10289566,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290264,"byte_end":10290276,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290427,"byte_end":10290431,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290837,"byte_end":10290841,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10291707,"byte_end":10291711,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10293892,"byte_end":10293896,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10295030,"byte_end":10295037,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10297418,"byte_end":10297427,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10306517,"byte_end":10306525,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10310178,"byte_end":10310187,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310582,"byte_end":10310585,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310874,"byte_end":10310877,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10311577,"byte_end":10311595,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10311775,"byte_end":10311793,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10317163,"byte_end":10317175,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10319479,"byte_end":10319488,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10321066,"byte_end":10321072,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10322451,"byte_end":10322459,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10324099,"byte_end":10324103,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10324613,"byte_end":10324617,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325774,"byte_end":10325779,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326518,"byte_end":10326523,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328836,"byte_end":10328840,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330468,"byte_end":10330472,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10331116,"byte_end":10331120,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10332919,"byte_end":10332924,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10333959,"byte_end":10333967,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10335452,"byte_end":10335460,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343325,"byte_end":10343336,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351615,"byte_end":10351626,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351952,"byte_end":10351963,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10352391,"byte_end":10352402,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355692,"byte_end":10355701,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368342,"byte_end":10368351,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368976,"byte_end":10368985,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10369115,"byte_end":10369124,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10369253,"byte_end":10369262,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371318,"byte_end":10371326,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10374129,"byte_end":10374137,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10374353,"byte_end":10374362,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10375279,"byte_end":10375287,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10375381,"byte_end":10375390,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378276,"byte_end":10378288,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378491,"byte_end":10378503,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378513,"byte_end":10378526,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381708,"byte_end":10381721,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381922,"byte_end":10381936,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382619,"byte_end":10382633,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382797,"byte_end":10382811,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10383858,"byte_end":10383871,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10383967,"byte_end":10383981,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386668,"byte_end":10386677,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3522},{"krate":0,"index":3728},{"krate":0,"index":3525},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419947,"byte_end":10419956,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10420314,"byte_end":10420323,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10420533,"byte_end":10420542,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10421368,"byte_end":10421377,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3563}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10421799,"byte_end":10421808,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426536,"byte_end":10426545,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3625},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3644},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469148,"byte_end":10469157,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3672},{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469482,"byte_end":10469491,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469918,"byte_end":10469927,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":104106,"byte_end":104111,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":104886,"byte_end":104892,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":105208,"byte_end":105215,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":106190,"byte_end":106200,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10470235,"byte_end":10470241,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10471198,"byte_end":10471204,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10471418,"byte_end":10471424,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111364,"byte_end":111374,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111639,"byte_end":111649,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":112175,"byte_end":112180,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116945,"byte_end":116955,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":117064,"byte_end":117076,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":117431,"byte_end":117447,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":118710,"byte_end":118726,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":119321,"byte_end":119333,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":119513,"byte_end":119518,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":110411,"byte_end":110414,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":110503,"byte_end":110506,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518158,"byte_end":10518163,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3878}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518551,"byte_end":10518558,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518583,"byte_end":10518590,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519005,"byte_end":10519010,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519208,"byte_end":10519213,"line_start":95,"line_end":95,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519310,"byte_end":10519315,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3893}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10520917,"byte_end":10520924,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479120,"byte_end":10479127,"line_start":231,"line_end":231,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3945},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3958},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3967},{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498692,"byte_end":10498699,"line_start":804,"line_end":804,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499029,"byte_end":10499043,"line_start":820,"line_end":820,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499249,"byte_end":10499263,"line_start":832,"line_end":832,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499400,"byte_end":10499414,"line_start":840,"line_end":840,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502256,"byte_end":10502261,"line_start":923,"line_end":923,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510269,"byte_end":10510279,"line_start":1136,"line_end":1136,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510734,"byte_end":10510745,"line_start":1154,"line_end":1154,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511033,"byte_end":10511044,"line_start":1165,"line_end":1165,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4012}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511337,"byte_end":10511347,"line_start":1176,"line_end":1176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511508,"byte_end":10511519,"line_start":1184,"line_end":1184,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511680,"byte_end":10511691,"line_start":1192,"line_end":1192,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512496,"byte_end":10512506,"line_start":1231,"line_end":1231,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512637,"byte_end":10512648,"line_start":1237,"line_end":1237,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512779,"byte_end":10512790,"line_start":1243,"line_end":1243,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10543141,"byte_end":10543153,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10544904,"byte_end":10544909,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4602}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10546099,"byte_end":10546120,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4611}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10546836,"byte_end":10546841,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4616},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10548481,"byte_end":10548486,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10548616,"byte_end":10548621,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556443,"byte_end":10556449,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556474,"byte_end":10556480,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556839,"byte_end":10556843,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10557730,"byte_end":10557739,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4167}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10560893,"byte_end":10560902,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10563578,"byte_end":10563584,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4628},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10563940,"byte_end":10563947,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4187},{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10564878,"byte_end":10564887,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567613,"byte_end":10567622,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4212}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567865,"byte_end":10567874,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10568151,"byte_end":10568160,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10568194,"byte_end":10568199,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10568952,"byte_end":10568959,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10569614,"byte_end":10569621,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10574994,"byte_end":10575007,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10581988,"byte_end":10581993,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587466,"byte_end":10587476,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587513,"byte_end":10587523,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587539,"byte_end":10587549,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588784,"byte_end":10588794,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588821,"byte_end":10588831,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10590057,"byte_end":10590067,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10590333,"byte_end":10590343,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10591590,"byte_end":10591597,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10593128,"byte_end":10593135,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10593225,"byte_end":10593232,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10595914,"byte_end":10595919,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4429},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4440},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4449},{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10604775,"byte_end":10604783,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10606660,"byte_end":10606665,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10606824,"byte_end":10606832,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":10608650,"byte_end":10608658,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4501},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10610406,"byte_end":10610419,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10611577,"byte_end":10611581,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10611981,"byte_end":10611985,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549616,"byte_end":10549620,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549651,"byte_end":10549655,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549792,"byte_end":10549800,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549841,"byte_end":10549849,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10551836,"byte_end":10551840,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4550},{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552141,"byte_end":10552149,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552400,"byte_end":10552404,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552597,"byte_end":10552605,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552736,"byte_end":10552740,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552909,"byte_end":10552917,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4557},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553203,"byte_end":10553207,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553447,"byte_end":10553451,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4564}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553603,"byte_end":10553611,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553827,"byte_end":10553831,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10614716,"byte_end":10614730,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10616968,"byte_end":10616973,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4760}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10619596,"byte_end":10619601,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10620294,"byte_end":10620308,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4782}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10621527,"byte_end":10621541,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10621707,"byte_end":10621714,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4791}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10622244,"byte_end":10622251,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10622419,"byte_end":10622422,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4795},{"krate":0,"index":4797},{"krate":0,"index":4800}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10623511,"byte_end":10623517,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4803},{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10623979,"byte_end":10623989,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10624264,"byte_end":10624274,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4816}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10628757,"byte_end":10628769,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631344,"byte_end":10631356,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631442,"byte_end":10631454,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631615,"byte_end":10631622,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10634054,"byte_end":10634059,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4888}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10637298,"byte_end":10637305,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4890}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10637808,"byte_end":10637820,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4902},{"krate":0,"index":4903},{"krate":0,"index":4904}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10638693,"byte_end":10638701,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640450,"byte_end":10640462,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640688,"byte_end":10640700,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640730,"byte_end":10640742,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4930},{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10643936,"byte_end":10643943,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10654934,"byte_end":10654941,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10655503,"byte_end":10655510,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10656753,"byte_end":10656760,"line_start":525,"line_end":525,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10658198,"byte_end":10658205,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":10660725,"byte_end":10660735,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10665277,"byte_end":10665283,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5022}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10665867,"byte_end":10665873,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5029}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667621,"byte_end":10667627,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673003,"byte_end":10673018,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673166,"byte_end":10673181,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673321,"byte_end":10673336,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10673721,"byte_end":10673728,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10673970,"byte_end":10673977,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5173}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10675571,"byte_end":10675577,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5206}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10676040,"byte_end":10676046,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5208}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10676362,"byte_end":10676368,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5216}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10677087,"byte_end":10677095,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5218}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10677164,"byte_end":10677169,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684377,"byte_end":10684382,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684413,"byte_end":10684418,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684449,"byte_end":10684455,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684486,"byte_end":10684492,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10685351,"byte_end":10685356,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5291}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10691937,"byte_end":10691942,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5298}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697110,"byte_end":10697115,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697211,"byte_end":10697216,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697375,"byte_end":10697380,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697568,"byte_end":10697574,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10701034,"byte_end":10701040,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10704999,"byte_end":10705009,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705046,"byte_end":10705056,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705072,"byte_end":10705082,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705836,"byte_end":10705846,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10706652,"byte_end":10706656,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10710494,"byte_end":10710499,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10711977,"byte_end":10711982,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10712155,"byte_end":10712160,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5391}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10717955,"byte_end":10717960,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5458}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10721291,"byte_end":10721297,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10722072,"byte_end":10722079,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10726366,"byte_end":10726370,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10731481,"byte_end":10731487,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5495}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10731927,"byte_end":10731930,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5499},{"krate":0,"index":5508},{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10735234,"byte_end":10735240,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10703046,"byte_end":10703056,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5535}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10703990,"byte_end":10704000,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704139,"byte_end":10704149,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704252,"byte_end":10704259,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5542},{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704680,"byte_end":10704687,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5546}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10532700,"byte_end":10532707,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5572},{"krate":0,"index":5575},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":124284,"byte_end":124290,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125062,"byte_end":125068,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125650,"byte_end":125660,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":126631,"byte_end":126647,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":126779,"byte_end":126795,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":128535,"byte_end":128541,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5630},{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743019,"byte_end":10743022,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5660},{"krate":0,"index":5661}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743744,"byte_end":10743752,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743842,"byte_end":10743850,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5671},{"krate":0,"index":5673},{"krate":0,"index":5674}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10746003,"byte_end":10746010,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5681},{"krate":0,"index":5682}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10746118,"byte_end":10746125,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10767530,"byte_end":10767539,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10767705,"byte_end":10767714,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10768187,"byte_end":10768198,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10769073,"byte_end":10769078,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5729},{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771668,"byte_end":10771673,"line_start":173,"line_end":173,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5743},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773971,"byte_end":10773980,"line_start":247,"line_end":247,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795229,"byte_end":10795236,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798515,"byte_end":10798532,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805971,"byte_end":10805980,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5834}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806156,"byte_end":10806165,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806813,"byte_end":10806822,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807127,"byte_end":10807136,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10808059,"byte_end":10808071,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10808449,"byte_end":10808461,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810424,"byte_end":10810428,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810473,"byte_end":10810477,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813251,"byte_end":10813257,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813294,"byte_end":10813300,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813338,"byte_end":10813346,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813383,"byte_end":10813391,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813407,"byte_end":10813413,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":5897},{"krate":0,"index":5898}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819023,"byte_end":10819027,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819419,"byte_end":10819425,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819605,"byte_end":10819611,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5910}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819765,"byte_end":10819773,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824636,"byte_end":10824644,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5917},{"krate":0,"index":5920}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828820,"byte_end":10828828,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5923}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10829454,"byte_end":10829458,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10830237,"byte_end":10830241,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5932},{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10830902,"byte_end":10830906,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10831654,"byte_end":10831660,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832075,"byte_end":10832081,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832225,"byte_end":10832233,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832368,"byte_end":10832377,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5955}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832550,"byte_end":10832559,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5960}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10839441,"byte_end":10839446,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6010},{"krate":0,"index":6011},{"krate":0,"index":6012},{"krate":0,"index":6013},{"krate":0,"index":6015},{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6028}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10849547,"byte_end":10849553,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10850035,"byte_end":10850041,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853430,"byte_end":10853438,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6074}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860450,"byte_end":10860458,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6077}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860654,"byte_end":10860662,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860678,"byte_end":10860684,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6086},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6098}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873576,"byte_end":10873582,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6101}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873714,"byte_end":10873720,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6104}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873932,"byte_end":10873938,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875188,"byte_end":10875194,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6111}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875521,"byte_end":10875527,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10876188,"byte_end":10876190,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6146}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10876483,"byte_end":10876485,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6154}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10877422,"byte_end":10877426,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878059,"byte_end":10878067,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878333,"byte_end":10878337,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878386,"byte_end":10878390,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878897,"byte_end":10878899,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10879331,"byte_end":10879333,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6199},{"krate":0,"index":6200}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10879883,"byte_end":10879885,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6206}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10880224,"byte_end":10880226,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6210}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10880549,"byte_end":10880551,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10883942,"byte_end":10883944,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6224}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10884356,"byte_end":10884360,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6230}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10884545,"byte_end":10884549,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10885550,"byte_end":10885561,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10887302,"byte_end":10887304,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6283}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10893017,"byte_end":10893019,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6286}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10893296,"byte_end":10893298,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6292}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10896697,"byte_end":10896699,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6295}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897357,"byte_end":10897372,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897513,"byte_end":10897528,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898201,"byte_end":10898218,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6318}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899217,"byte_end":10899234,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902532,"byte_end":10902547,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6342},{"krate":0,"index":6345}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906237,"byte_end":10906246,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6355}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906406,"byte_end":10906415,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906901,"byte_end":10906913,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906946,"byte_end":10906958,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907298,"byte_end":10907310,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907539,"byte_end":10907548,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6367}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907678,"byte_end":10907687,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909188,"byte_end":10909204,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909241,"byte_end":10909257,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7065}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915629,"byte_end":10915634,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915688,"byte_end":10915693,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915747,"byte_end":10915757,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915822,"byte_end":10915837,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916516,"byte_end":10916528,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916665,"byte_end":10916677,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917485,"byte_end":10917490,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6408},{"krate":0,"index":6411},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923243,"byte_end":10923248,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6421}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923332,"byte_end":10923337,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6424}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923461,"byte_end":10923466,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6427}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923861,"byte_end":10923871,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6430}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923972,"byte_end":10923982,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6433},{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924129,"byte_end":10924139,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924296,"byte_end":10924306,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924472,"byte_end":10924482,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924660,"byte_end":10924675,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6446}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924772,"byte_end":10924787,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6449},{"krate":0,"index":6450}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924930,"byte_end":10924945,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10925098,"byte_end":10925113,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10925275,"byte_end":10925290,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6459}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10930153,"byte_end":10930161,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10930194,"byte_end":10930202,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931032,"byte_end":10931038,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10939614,"byte_end":10939620,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6505}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10941530,"byte_end":10941538,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6508}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10942051,"byte_end":10942059,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6510},{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10947755,"byte_end":10947763,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6514}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10950818,"byte_end":10950824,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6520},{"krate":0,"index":6521}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952700,"byte_end":10952709,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952871,"byte_end":10952880,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952949,"byte_end":10952961,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6550}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10953260,"byte_end":10953272,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10953766,"byte_end":10953770,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6563},{"krate":0,"index":6565},{"krate":0,"index":6569},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955806,"byte_end":10955812,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6577},{"krate":0,"index":6579},{"krate":0,"index":6584},{"krate":0,"index":6585}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963439,"byte_end":10963445,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963584,"byte_end":10963592,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6591},{"krate":0,"index":6592}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967983,"byte_end":10967991,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10968138,"byte_end":10968146,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6598},{"krate":0,"index":6599}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10968609,"byte_end":10968614,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971720,"byte_end":10971725,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971762,"byte_end":10971767,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971868,"byte_end":10971873,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6615}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10972250,"byte_end":10972255,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10972650,"byte_end":10972655,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10974368,"byte_end":10974373,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6639}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10978432,"byte_end":10978441,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6683},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6696}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10989466,"byte_end":10989475,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10989674,"byte_end":10989680,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6702},{"krate":0,"index":6703}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10990546,"byte_end":10990553,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6705},{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10991231,"byte_end":10991238,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6709},{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10992037,"byte_end":10992044,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993294,"byte_end":10993301,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993348,"byte_end":10993360,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6717}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993453,"byte_end":10993465,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993609,"byte_end":10993621,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993668,"byte_end":10993683,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6722},{"krate":0,"index":6723}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994201,"byte_end":10994216,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6725}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994502,"byte_end":10994517,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994610,"byte_end":10994616,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6732}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997484,"byte_end":10997493,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6750},{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6759}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003831,"byte_end":11003846,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004091,"byte_end":11004111,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6764}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004365,"byte_end":11004380,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6767}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004488,"byte_end":11004508,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6769}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007920,"byte_end":11007935,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6794},{"krate":0,"index":6797}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011353,"byte_end":11011368,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6803}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011548,"byte_end":11011563,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6807}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011739,"byte_end":11011754,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012218,"byte_end":11012234,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6821}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013856,"byte_end":11013872,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11014052,"byte_end":11014068,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6829}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11014244,"byte_end":11014260,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015336,"byte_end":11015342,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015396,"byte_end":11015402,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015636,"byte_end":11015651,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015709,"byte_end":11015724,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015789,"byte_end":11015805,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016118,"byte_end":11016134,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016192,"byte_end":11016198,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023567,"byte_end":11023582,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023713,"byte_end":11023729,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023863,"byte_end":11023879,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023993,"byte_end":11023999,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6875}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11024091,"byte_end":11024097,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6878}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11030372,"byte_end":11030383,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6909},{"krate":0,"index":6910}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036405,"byte_end":11036416,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6913}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036502,"byte_end":11036513,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036646,"byte_end":11036657,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036682,"byte_end":11036693,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036789,"byte_end":11036794,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6922},{"krate":0,"index":6923}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041023,"byte_end":11041032,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6944}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041212,"byte_end":11041221,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041414,"byte_end":11041423,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6948}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041585,"byte_end":11041594,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042800,"byte_end":11042808,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6955},{"krate":0,"index":6956}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11045341,"byte_end":11045349,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6963}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11045687,"byte_end":11045695,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046065,"byte_end":11046071,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6969},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048655,"byte_end":11048661,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6977}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048851,"byte_end":11048854,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":11061079,"byte_end":11061087,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7424},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072009,"byte_end":11072017,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7299},{"krate":0,"index":7300},{"krate":0,"index":7302},{"krate":0,"index":7304},{"krate":0,"index":7308},{"krate":0,"index":7310},{"krate":0,"index":7313}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11080010,"byte_end":11080018,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7317}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11080157,"byte_end":11080165,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7319},{"krate":0,"index":7320}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11081130,"byte_end":11081138,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11081219,"byte_end":11081227,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11082094,"byte_end":11082102,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11082987,"byte_end":11082993,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7334},{"krate":0,"index":7336}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11083556,"byte_end":11083559,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7338},{"krate":0,"index":7340},{"krate":0,"index":7343}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087066,"byte_end":11087074,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7366},{"krate":0,"index":7370},{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088850,"byte_end":11088858,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7379}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089066,"byte_end":11089074,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7383}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089395,"byte_end":11089410,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7387},{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089711,"byte_end":11089716,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7397}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090334,"byte_end":11090335,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090520,"byte_end":11090531,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7404}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090675,"byte_end":11090686,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090833,"byte_end":11090844,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":11094411,"byte_end":11094416,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7832},{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7835}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11118847,"byte_end":11118856,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7481}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11118940,"byte_end":11118949,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7483}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11119095,"byte_end":11119104,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11126122,"byte_end":11126132,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11126157,"byte_end":11126167,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11127608,"byte_end":11127619,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7503},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131142,"byte_end":11131159,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7515}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131460,"byte_end":11131477,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7517}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131716,"byte_end":11131727,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131752,"byte_end":11131763,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131802,"byte_end":11131813,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7521},{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7524},{"krate":0,"index":7525}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11132331,"byte_end":11132341,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7527},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7532}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11135217,"byte_end":11135228,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7538},{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11137619,"byte_end":11137629,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7541}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11138134,"byte_end":11138140,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7554},{"krate":0,"index":7555},{"krate":0,"index":7556}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11138711,"byte_end":11138717,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7874}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11140753,"byte_end":11140759,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7558}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11153357,"byte_end":11153362,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7580},{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11159430,"byte_end":11159435,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":11142380,"byte_end":11142385,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7600},{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604},{"krate":0,"index":7606},{"krate":0,"index":7608},{"krate":0,"index":7609},{"krate":0,"index":7611},{"krate":0,"index":7612},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7615}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165225,"byte_end":11165230,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7638},{"krate":0,"index":7639}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11167232,"byte_end":11167237,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7642},{"krate":0,"index":7643}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11103830,"byte_end":11103839,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7666},{"krate":0,"index":7667}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11105246,"byte_end":11105252,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11108258,"byte_end":11108264,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7688},{"krate":0,"index":7689}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11112958,"byte_end":11112964,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7693},{"krate":0,"index":7694},{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11113695,"byte_end":11113701,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7701}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11113827,"byte_end":11113832,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7703}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11114140,"byte_end":11114145,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7705}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169388,"byte_end":11169393,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7715}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169634,"byte_end":11169639,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721},{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170539,"byte_end":11170544,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170571,"byte_end":11170576,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7725}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171038,"byte_end":11171045,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7728}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171133,"byte_end":11171140,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7730}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171284,"byte_end":11171291,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171328,"byte_end":11171333,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7733}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172875,"byte_end":11172882,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7739},{"krate":0,"index":7740},{"krate":0,"index":7741},{"krate":0,"index":7742},{"krate":0,"index":7743},{"krate":0,"index":7744},{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176632,"byte_end":11176639,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176768,"byte_end":11176775,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176890,"byte_end":11176897,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7753},{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177062,"byte_end":11177069,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177174,"byte_end":11177181,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7758},{"krate":0,"index":7759}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177322,"byte_end":11177329,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177490,"byte_end":11177497,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7764}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177604,"byte_end":11177611,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7766}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181789,"byte_end":11181797,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7786},{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186566,"byte_end":11186573,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11187111,"byte_end":11187118,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7820},{"krate":0,"index":7821}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":11187763,"byte_end":11187767,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7977},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7980},{"krate":0,"index":7981},{"krate":0,"index":7982},{"krate":0,"index":7983}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":11189195,"byte_end":11189199,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7985}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194349,"byte_end":11194353,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194390,"byte_end":11194394,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194431,"byte_end":11194441,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194478,"byte_end":11194488,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194525,"byte_end":11194528,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194565,"byte_end":11194568,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11195184,"byte_end":11195188,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8060},{"krate":0,"index":8061},{"krate":0,"index":8062},{"krate":0,"index":8064}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11200794,"byte_end":11200798,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8067}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11200937,"byte_end":11200946,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201513,"byte_end":11201522,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8073}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201680,"byte_end":11201683,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8076},{"krate":0,"index":8077}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201945,"byte_end":11201948,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11202215,"byte_end":11202218,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8083}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11202339,"byte_end":11202343,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8086}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11204850,"byte_end":11204854,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8090},{"krate":0,"index":8091}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205198,"byte_end":11205202,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8094}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205550,"byte_end":11205554,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205916,"byte_end":11205926,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8100},{"krate":0,"index":8101}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11206863,"byte_end":11206873,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8104}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11207016,"byte_end":11207021,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11207904,"byte_end":11207908,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8111}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11208468,"byte_end":11208473,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8114}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11208799,"byte_end":11208806,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8116},{"krate":0,"index":8117},{"krate":0,"index":8118}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141483,"byte_end":141493,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141563,"byte_end":141573,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142873,"byte_end":142881,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142918,"byte_end":142926,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142977,"byte_end":142987,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143222,"byte_end":143232,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146081,"byte_end":146091,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146448,"byte_end":146458,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146645,"byte_end":146655,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146932,"byte_end":146942,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8153}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":147175,"byte_end":147179,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8157},{"krate":0,"index":8158}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":147827,"byte_end":147837,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8168}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":148206,"byte_end":148217,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8174},{"krate":0,"index":8175}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":148891,"byte_end":148899,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":149098,"byte_end":149106,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":159486,"byte_end":159494,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":11216408,"byte_end":11216416,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8198},{"krate":0,"index":8199}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218504,"byte_end":11218511,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218548,"byte_end":11218555,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218593,"byte_end":11218602,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218788,"byte_end":11218795,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8252},{"krate":0,"index":8253}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219429,"byte_end":11219438,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8257}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219570,"byte_end":11219579,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8260}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219701,"byte_end":11219710,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8263}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14339,"byte_end":14345,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":18014,"byte_end":18021,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14370,"byte_end":14372,"line_start":354,"line_end":354,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":744}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14398,"byte_end":14400,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14410,"byte_end":14413,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82370,"byte_end":82373,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3293}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14464,"byte_end":14471,"line_start":366,"line_end":366,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3833}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14578,"byte_end":14585,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4078}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14638,"byte_end":14644,"line_start":379,"line_end":379,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5632}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\mod.rs","byte_start":10740206,"byte_end":10740213,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5694}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14816,"byte_end":14820,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5787}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792799,"byte_end":10792808,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5801}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792823,"byte_end":10792827,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5964}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":10836841,"byte_end":10836846,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6350}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10792985,"byte_end":10792992,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6525}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":10793336,"byte_end":10793341,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6929}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14865,"byte_end":14869,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":664}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14933,"byte_end":14937,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7451}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":11093605,"byte_end":11093610,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7710}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\dir_builder.rs","byte_start":10006347,"byte_end":10006357,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10012660,"byte_end":10012664,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10024274,"byte_end":10024278,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10026733,"byte_end":10026737,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10028874,"byte_end":10028878,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10031467,"byte_end":10031471,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10031569,"byte_end":10031573,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032135,"byte_end":10032139,"line_start":717,"line_end":717,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":817},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032310,"byte_end":10032314,"line_start":724,"line_end":724,"column_start":46,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":817},"to":{"krate":1,"index":9195}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\file.rs","byte_start":10032462,"byte_end":10032467,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10037974,"byte_end":10037985,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10050779,"byte_end":10050790,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10058675,"byte_end":10058686,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\open_options.rs","byte_start":10058804,"byte_end":10058815,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10061926,"byte_end":10061933,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\fs\\read_dir.rs","byte_start":10065230,"byte_end":10065238,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1199},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1199},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10075969,"byte_end":10075974,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":10076001,"byte_end":10076006,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","byte_start":10077215,"byte_end":10077223,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":11197},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10079751,"byte_end":10079759,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10080032,"byte_end":10080040,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10081635,"byte_end":10081643,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10084367,"byte_end":10084370,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\blocking.rs","byte_start":10086200,"byte_end":10086203,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45597,"byte_end":45606,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":35}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10096762,"byte_end":10096770,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10098911,"byte_end":10098919,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10099062,"byte_end":10099070,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":2223}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":10099198,"byte_end":10099206,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10099791,"byte_end":10099796,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10104213,"byte_end":10104218,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10104962,"byte_end":10104967,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105128,"byte_end":10105133,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":2223}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105261,"byte_end":10105266,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":2192}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105420,"byte_end":10105425,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":10105572,"byte_end":10105577,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108025,"byte_end":10108037,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108062,"byte_end":10108074,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10108118,"byte_end":10108130,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10113558,"byte_end":10113570,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":10114169,"byte_end":10114181,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10117584,"byte_end":10117595,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1672},"to":{"krate":0,"index":8013}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10117855,"byte_end":10117866,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10118046,"byte_end":10118057,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126240,"byte_end":10126251,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126340,"byte_end":10126351,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126376,"byte_end":10126387,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1672},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10126421,"byte_end":10126432,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10127355,"byte_end":10127361,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1699},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10127856,"byte_end":10127865,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132539,"byte_end":10132548,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132913,"byte_end":10132922,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132955,"byte_end":10132964,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10089351,"byte_end":10089357,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092163,"byte_end":10092169,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092284,"byte_end":10092289,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10092733,"byte_end":10092739,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1523},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10093138,"byte_end":10093144,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1523},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10093294,"byte_end":10093300,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10094125,"byte_end":10094131,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10094948,"byte_end":10094954,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1726},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10095032,"byte_end":10095038,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1726},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10095173,"byte_end":10095178,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":10096135,"byte_end":10096144,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10136485,"byte_end":10136496,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10139131,"byte_end":10139142,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10140685,"byte_end":10140696,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10140839,"byte_end":10140850,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":10141022,"byte_end":10141033,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1751},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdio_common.rs","byte_start":10141768,"byte_end":10141796,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdio_common.rs","byte_start":10142057,"byte_end":10142085,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10151378,"byte_end":10151384,"line_start":84,"line_end":84,"column_start":44,"column_end":50},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1848},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stderr.rs","byte_start":10151523,"byte_end":10151529,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1848},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10154115,"byte_end":10154120,"line_start":59,"line_end":59,"column_start":44,"column_end":49},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1853},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdin.rs","byte_start":10154257,"byte_end":10154262,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1853},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10157102,"byte_end":10157108,"line_start":83,"line_end":83,"column_start":44,"column_end":50},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1858},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\stdout.rs","byte_start":10157247,"byte_end":10157253,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1858},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10159356,"byte_end":10159364,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160281,"byte_end":10160290,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160540,"byte_end":10160548,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1969},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10160843,"byte_end":10160852,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1972},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10161531,"byte_end":10161536,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10161992,"byte_end":10161997,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162250,"byte_end":10162255,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1883},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162378,"byte_end":10162386,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162423,"byte_end":10162432,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162469,"byte_end":10162477,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162514,"byte_end":10162523,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162566,"byte_end":10162574,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1969},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":10162742,"byte_end":10162751,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":10163708,"byte_end":10163712,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11151},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10166590,"byte_end":10166602,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":2757}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10175623,"byte_end":10175624,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1992},"to":{"krate":0,"index":2757}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10177545,"byte_end":10177554,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":2765}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":10214951,"byte_end":10214952,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2039},"to":{"krate":0,"index":2765}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10215877,"byte_end":10215886,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":2816}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10217061,"byte_end":10217062,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2048},"to":{"krate":0,"index":2816}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10219014,"byte_end":10219024,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":211},"to":{"krate":0,"index":2819}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":10252309,"byte_end":10252310,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2089},"to":{"krate":0,"index":2819}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10253678,"byte_end":10253687,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10255544,"byte_end":10255553,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11099},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10256363,"byte_end":10256372,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11099},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10257285,"byte_end":10257294,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11099},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":10257805,"byte_end":10257814,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11099},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10259303,"byte_end":10259312,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10261149,"byte_end":10261158,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11068},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10261300,"byte_end":10261309,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11068},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262021,"byte_end":10262030,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11068},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262560,"byte_end":10262569,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11068},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":10262824,"byte_end":10262833,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11068},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10264769,"byte_end":10264778,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10267056,"byte_end":10267065,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11022},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10267955,"byte_end":10267964,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11022},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10268218,"byte_end":10268227,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11022},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":10268514,"byte_end":10268523,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11022},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10269701,"byte_end":10269706,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10270846,"byte_end":10270851,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10973},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10271130,"byte_end":10271135,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10973},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":10271721,"byte_end":10271726,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10973},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":10274561,"byte_end":10274565,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":10278259,"byte_end":10278266,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2893},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280533,"byte_end":10280538,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2905},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280752,"byte_end":10280757,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2905},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":10280990,"byte_end":10280995,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2905},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":10282122,"byte_end":10282127,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10931},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10283458,"byte_end":10283463,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":10284715,"byte_end":10284720,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10288998,"byte_end":10289010,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2908},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10289554,"byte_end":10289566,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2908},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290264,"byte_end":10290276,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290427,"byte_end":10290431,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10290837,"byte_end":10290841,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2913},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":10291707,"byte_end":10291711,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2913},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":10293892,"byte_end":10293896,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10830},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":10295030,"byte_end":10295037,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10770},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":10297418,"byte_end":10297427,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10715},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":10306517,"byte_end":10306525,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9796},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":10310178,"byte_end":10310187,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9739},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310582,"byte_end":10310585,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":2521}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310822,"byte_end":10310827,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":2524}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310848,"byte_end":10310854,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":2521},"to":{"krate":0,"index":2524}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10310874,"byte_end":10310877,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":2524}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10311577,"byte_end":10311595,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10311775,"byte_end":10311793,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":10317163,"byte_end":10317175,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":9678},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":10319479,"byte_end":10319488,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":9617},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":10321066,"byte_end":10321072,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3074},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":10322451,"byte_end":10322459,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":9568},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10324099,"byte_end":10324103,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3078},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":10324613,"byte_end":10324617,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10325774,"byte_end":10325779,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":9518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":10326518,"byte_end":10326523,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":9518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10328836,"byte_end":10328840,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":9478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10330468,"byte_end":10330472,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9478},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":10331116,"byte_end":10331120,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":9478},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":10332919,"byte_end":10332924,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":9427},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":10333959,"byte_end":10333967,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9374},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":10335452,"byte_end":10335460,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":9314},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83428,"byte_end":83445,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":179}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":1,"index":7228},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":1,"index":7228},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":1,"index":7231},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":183}},"from":{"krate":1,"index":7231},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":186}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":187}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3268},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10343325,"byte_end":10343336,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351615,"byte_end":10351626,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10351952,"byte_end":10351963,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":10352391,"byte_end":10352402,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3692},"to":{"krate":1,"index":9220}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10355692,"byte_end":10355701,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368342,"byte_end":10368351,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10368976,"byte_end":10368985,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3694},"to":{"krate":1,"index":9224}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10369115,"byte_end":10369124,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3694},"to":{"krate":1,"index":9220}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":10369253,"byte_end":10369262,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3694},"to":{"krate":1,"index":9222}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10371318,"byte_end":10371326,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10374129,"byte_end":10374137,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10374353,"byte_end":10374362,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10375279,"byte_end":10375287,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":10375381,"byte_end":10375390,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3703},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378276,"byte_end":10378288,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378491,"byte_end":10378503,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3719},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10378513,"byte_end":10378526,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381708,"byte_end":10381721,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3710},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10381922,"byte_end":10381936,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382619,"byte_end":10382633,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10382797,"byte_end":10382811,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10383858,"byte_end":10383871,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":10383967,"byte_end":10383981,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10386668,"byte_end":10386677,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10419947,"byte_end":10419956,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3726},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10420314,"byte_end":10420323,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3726},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10420533,"byte_end":10420542,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3726},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10421368,"byte_end":10421377,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3726},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":10421799,"byte_end":10421808,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3726},"to":{"krate":1,"index":9220}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10426536,"byte_end":10426545,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469148,"byte_end":10469157,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469482,"byte_end":10469491,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":10469918,"byte_end":10469927,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3733},"to":{"krate":1,"index":9220}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":104106,"byte_end":104111,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":104886,"byte_end":104892,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\parking_lot.rs","byte_start":105208,"byte_end":105215,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":106190,"byte_end":106200,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10470235,"byte_end":10470241,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3783},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10471198,"byte_end":10471204,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3783},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":10471418,"byte_end":10471424,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3783},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111364,"byte_end":111374,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":111639,"byte_end":111649,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3809},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":112175,"byte_end":112180,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116945,"byte_end":116955,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":117064,"byte_end":117076,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":117431,"byte_end":117447,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":118710,"byte_end":118726,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3829},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":119321,"byte_end":119333,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":119513,"byte_end":119518,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":109931,"byte_end":109935,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":109938,"byte_end":109942,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":110411,"byte_end":110414,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":110503,"byte_end":110506,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":266}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518158,"byte_end":10518163,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3874},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518551,"byte_end":10518558,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3879},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10518583,"byte_end":10518590,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3879},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519005,"byte_end":10519010,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519208,"byte_end":10519213,"line_start":95,"line_end":95,"column_start":15,"column_end":20},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3874},"to":{"krate":0,"index":3905}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10519310,"byte_end":10519315,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3874},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":10520917,"byte_end":10520924,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3879},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10479120,"byte_end":10479127,"line_start":231,"line_end":231,"column_start":6,"column_end":13},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10498692,"byte_end":10498699,"line_start":804,"line_end":804,"column_start":27,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4036},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499029,"byte_end":10499043,"line_start":820,"line_end":820,"column_start":24,"column_end":38},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":3905}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499249,"byte_end":10499263,"line_start":832,"line_end":832,"column_start":24,"column_end":38},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4041},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10499400,"byte_end":10499414,"line_start":840,"line_end":840,"column_start":26,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4041},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10502256,"byte_end":10502261,"line_start":923,"line_end":923,"column_start":6,"column_end":11},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510269,"byte_end":10510279,"line_start":1136,"line_end":1136,"column_start":21,"column_end":31},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4064},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10510734,"byte_end":10510745,"line_start":1154,"line_end":1154,"column_start":20,"column_end":31},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4068},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511033,"byte_end":10511044,"line_start":1165,"line_end":1165,"column_start":20,"column_end":31},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4072},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511337,"byte_end":10511347,"line_start":1176,"line_end":1176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4064},"to":{"krate":2,"index":1992}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511508,"byte_end":10511519,"line_start":1184,"line_end":1184,"column_start":25,"column_end":36},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":1992}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10511680,"byte_end":10511691,"line_start":1192,"line_end":1192,"column_start":25,"column_end":36},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4072},"to":{"krate":2,"index":1992}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512496,"byte_end":10512506,"line_start":1231,"line_end":1231,"column_start":26,"column_end":36},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4064},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512637,"byte_end":10512648,"line_start":1237,"line_end":1237,"column_start":26,"column_end":37},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4068},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":10512779,"byte_end":10512790,"line_start":1243,"line_end":1243,"column_start":26,"column_end":37},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4072},"to":{"krate":1,"index":9193}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10543141,"byte_end":10543153,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10544904,"byte_end":10544909,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4598},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10546099,"byte_end":10546120,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4607},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10546836,"byte_end":10546841,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10548481,"byte_end":10548486,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4087},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":10548616,"byte_end":10548621,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4087},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556443,"byte_end":10556449,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4130},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556474,"byte_end":10556480,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4130},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10556839,"byte_end":10556843,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10557730,"byte_end":10557739,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10560893,"byte_end":10560902,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10563578,"byte_end":10563584,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":10563940,"byte_end":10563947,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10564878,"byte_end":10564887,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567613,"byte_end":10567622,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4632},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10567865,"byte_end":10567874,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4632},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10568151,"byte_end":10568160,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4632},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":10568194,"byte_end":10568199,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10568952,"byte_end":10568959,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10569614,"byte_end":10569621,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10574994,"byte_end":10575007,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":10581988,"byte_end":10581993,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4308},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587466,"byte_end":10587476,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587513,"byte_end":10587523,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10587539,"byte_end":10587549,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588784,"byte_end":10588794,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10588821,"byte_end":10588831,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10590057,"byte_end":10590067,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":10590333,"byte_end":10590343,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4634},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10591590,"byte_end":10591597,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10593128,"byte_end":10593135,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4358},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":10593225,"byte_end":10593232,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4358},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10595914,"byte_end":10595919,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10604775,"byte_end":10604783,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10606660,"byte_end":10606665,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4407},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":10606824,"byte_end":10606832,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4638},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":10608650,"byte_end":10608658,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4491},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10610406,"byte_end":10610419,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10611577,"byte_end":10611581,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4668},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":10611981,"byte_end":10611985,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4668},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549616,"byte_end":10549620,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4525},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549651,"byte_end":10549655,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4525},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549792,"byte_end":10549800,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4533},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549841,"byte_end":10549849,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4533},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549974,"byte_end":10549978,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10549981,"byte_end":10549986,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10551836,"byte_end":10551840,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552141,"byte_end":10552149,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552400,"byte_end":10552404,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552597,"byte_end":10552605,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552736,"byte_end":10552740,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10552909,"byte_end":10552917,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553203,"byte_end":10553207,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4525},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553447,"byte_end":10553451,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4525},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553603,"byte_end":10553611,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4533},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":10553827,"byte_end":10553831,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4525},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10614716,"byte_end":10614730,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10616968,"byte_end":10616973,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10619596,"byte_end":10619601,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4771},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10620294,"byte_end":10620308,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10621527,"byte_end":10621541,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10621707,"byte_end":10621714,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10622244,"byte_end":10622251,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5070},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10622419,"byte_end":10622422,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":350}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10623511,"byte_end":10623517,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4741},"to":{"krate":0,"index":8194}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10623979,"byte_end":10623989,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":10624264,"byte_end":10624274,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4805},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10628757,"byte_end":10628769,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631344,"byte_end":10631356,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4843},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631442,"byte_end":10631454,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4843},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10631615,"byte_end":10631622,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10634054,"byte_end":10634059,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":10637298,"byte_end":10637305,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10637808,"byte_end":10637820,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4899},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10638693,"byte_end":10638701,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640450,"byte_end":10640462,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640688,"byte_end":10640700,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4919},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":10640730,"byte_end":10640742,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4919},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10643936,"byte_end":10643943,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10654934,"byte_end":10654941,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10655503,"byte_end":10655510,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10656753,"byte_end":10656760,"line_start":525,"line_end":525,"column_start":10,"column_end":17},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":10658198,"byte_end":10658205,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4947},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":10660725,"byte_end":10660735,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5114},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10665277,"byte_end":10665283,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":10665867,"byte_end":10665873,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5135},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10667621,"byte_end":10667627,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673003,"byte_end":10673018,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5055},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673166,"byte_end":10673181,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5055},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":10673321,"byte_end":10673336,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5055},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10673721,"byte_end":10673728,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":10673970,"byte_end":10673977,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10675571,"byte_end":10675577,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10676040,"byte_end":10676046,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10676362,"byte_end":10676368,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5189},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10677087,"byte_end":10677095,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5191},"to":{"krate":0,"index":638}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":10677164,"byte_end":10677169,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684377,"byte_end":10684382,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684413,"byte_end":10684418,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684449,"byte_end":10684455,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10684486,"byte_end":10684492,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10685351,"byte_end":10685356,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10691937,"byte_end":10691942,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697110,"byte_end":10697115,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697211,"byte_end":10697216,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697375,"byte_end":10697380,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10697568,"byte_end":10697574,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":10701034,"byte_end":10701040,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10704999,"byte_end":10705009,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5333},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705046,"byte_end":10705056,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5333},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705072,"byte_end":10705082,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10705836,"byte_end":10705846,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5333},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10706652,"byte_end":10706656,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10710494,"byte_end":10710499,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10711977,"byte_end":10711982,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5548},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10712155,"byte_end":10712160,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5548},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10717955,"byte_end":10717960,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5454},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10721291,"byte_end":10721297,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10722072,"byte_end":10722079,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10726366,"byte_end":10726370,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10731481,"byte_end":10731487,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10731927,"byte_end":10731930,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10735234,"byte_end":10735240,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10703046,"byte_end":10703056,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10703990,"byte_end":10704000,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704139,"byte_end":10704149,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704252,"byte_end":10704259,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10704680,"byte_end":10704687,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5559},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":10532700,"byte_end":10532707,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":124284,"byte_end":124290,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125062,"byte_end":125068,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125650,"byte_end":125660,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":126631,"byte_end":126647,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":126779,"byte_end":126795,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5619},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":128535,"byte_end":128541,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743019,"byte_end":10743022,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":423}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":5654}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743744,"byte_end":10743752,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10743842,"byte_end":10743850,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10746003,"byte_end":10746010,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5677},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\registry.rs","byte_start":10746118,"byte_end":10746125,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10767530,"byte_end":10767539,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5767},"to":{"krate":0,"index":5664}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10767705,"byte_end":10767714,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5767},"to":{"krate":0,"index":5654}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10768187,"byte_end":10768198,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":5664}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10769073,"byte_end":10769078,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10771668,"byte_end":10771673,"line_start":173,"line_end":173,"column_start":6,"column_end":11},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\signal\\windows.rs","byte_start":10773971,"byte_end":10773980,"line_start":247,"line_end":247,"column_start":6,"column_end":15},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10795229,"byte_end":10795236,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":10798515,"byte_end":10798532,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10805971,"byte_end":10805980,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7001},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806156,"byte_end":10806165,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7001},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10806813,"byte_end":10806822,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":7008},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10807127,"byte_end":10807136,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7008},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10808059,"byte_end":10808071,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10808449,"byte_end":10808461,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7020},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810424,"byte_end":10810428,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10810473,"byte_end":10810477,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813251,"byte_end":10813257,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5823},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813294,"byte_end":10813300,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5823},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813338,"byte_end":10813346,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5826},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813383,"byte_end":10813391,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5826},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10813407,"byte_end":10813413,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819023,"byte_end":10819027,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819419,"byte_end":10819425,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5823},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819605,"byte_end":10819611,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5823},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10819765,"byte_end":10819773,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10824636,"byte_end":10824644,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10828820,"byte_end":10828828,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5826},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10829454,"byte_end":10829458,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10830237,"byte_end":10830241,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10830902,"byte_end":10830906,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10831654,"byte_end":10831660,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5861},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832075,"byte_end":10832081,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5823},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832225,"byte_end":10832233,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5826},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832368,"byte_end":10832377,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":10832550,"byte_end":10832559,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5866},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10839441,"byte_end":10839446,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10849547,"byte_end":10849553,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":10850035,"byte_end":10850041,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5995},"to":{"krate":2,"index":2352}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853430,"byte_end":10853438,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860450,"byte_end":10860458,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6058},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860654,"byte_end":10860662,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6058},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860678,"byte_end":10860684,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873576,"byte_end":10873582,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6051},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873714,"byte_end":10873720,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6051},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10873932,"byte_end":10873938,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875188,"byte_end":10875194,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6054},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10875521,"byte_end":10875527,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6054},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10876188,"byte_end":10876190,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10876483,"byte_end":10876485,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6147},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10877422,"byte_end":10877426,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878059,"byte_end":10878067,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6173},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878333,"byte_end":10878337,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878386,"byte_end":10878390,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10878897,"byte_end":10878899,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10879331,"byte_end":10879333,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10879883,"byte_end":10879885,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10880224,"byte_end":10880226,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6139},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10880549,"byte_end":10880551,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10883942,"byte_end":10883944,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6147},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10884356,"byte_end":10884360,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10884545,"byte_end":10884549,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":10885550,"byte_end":10885561,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":6155}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10887302,"byte_end":10887304,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10893017,"byte_end":10893019,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6266},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10893296,"byte_end":10893298,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":10896697,"byte_end":10896699,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6270},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897357,"byte_end":10897372,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6304},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10897513,"byte_end":10897528,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6304},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10898201,"byte_end":10898218,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6313},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10899217,"byte_end":10899234,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10902532,"byte_end":10902547,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906237,"byte_end":10906246,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906406,"byte_end":10906415,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7038},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906901,"byte_end":10906913,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7045},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10906946,"byte_end":10906958,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7045},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907298,"byte_end":10907310,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7045},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907539,"byte_end":10907548,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7056},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10907678,"byte_end":10907687,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7056},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909188,"byte_end":10909204,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7066},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":10909241,"byte_end":10909257,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7066},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915629,"byte_end":10915634,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915688,"byte_end":10915693,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915747,"byte_end":10915757,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10915822,"byte_end":10915837,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916516,"byte_end":10916528,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7077},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10916665,"byte_end":10916677,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7077},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10917485,"byte_end":10917490,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923243,"byte_end":10923248,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923332,"byte_end":10923337,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923461,"byte_end":10923466,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923861,"byte_end":10923871,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10923972,"byte_end":10923982,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924129,"byte_end":10924139,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924296,"byte_end":10924306,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924472,"byte_end":10924482,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924660,"byte_end":10924675,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924772,"byte_end":10924787,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10924930,"byte_end":10924945,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10925098,"byte_end":10925113,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":10925275,"byte_end":10925290,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6387},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10930153,"byte_end":10930161,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10930194,"byte_end":10930202,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10931032,"byte_end":10931038,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10939614,"byte_end":10939620,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7082},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10941530,"byte_end":10941538,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10942051,"byte_end":10942059,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10947755,"byte_end":10947763,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":10950818,"byte_end":10950824,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7097},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952700,"byte_end":10952709,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7134},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952871,"byte_end":10952880,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":7134},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10952949,"byte_end":10952961,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7146},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10953260,"byte_end":10953272,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":7146},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10953766,"byte_end":10953770,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10955806,"byte_end":10955812,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963439,"byte_end":10963445,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7122},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10963584,"byte_end":10963592,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10967983,"byte_end":10967991,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7128},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10968138,"byte_end":10968146,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7128},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10968609,"byte_end":10968614,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971720,"byte_end":10971725,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6553},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971762,"byte_end":10971767,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6553},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10971868,"byte_end":10971873,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6553},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10972250,"byte_end":10972255,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6553},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10972650,"byte_end":10972655,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":10974368,"byte_end":10974373,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7159},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10978432,"byte_end":10978441,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10989466,"byte_end":10989475,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6662},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10989674,"byte_end":10989680,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10990546,"byte_end":10990553,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6668},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10991231,"byte_end":10991238,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10992037,"byte_end":10992044,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6668},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993294,"byte_end":10993301,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6668},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993348,"byte_end":10993360,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993453,"byte_end":10993465,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7175},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993609,"byte_end":10993621,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7175},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10993668,"byte_end":10993683,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994201,"byte_end":10994216,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7165},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994502,"byte_end":10994517,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7165},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":10994610,"byte_end":10994616,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":10997484,"byte_end":10997493,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11003831,"byte_end":11003846,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004091,"byte_end":11004111,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004365,"byte_end":11004380,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7184},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":11004488,"byte_end":11004508,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7191},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11007920,"byte_end":11007935,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011353,"byte_end":11011368,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011548,"byte_end":11011563,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11011739,"byte_end":11011754,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11012218,"byte_end":11012234,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11013856,"byte_end":11013872,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11014052,"byte_end":11014068,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11014244,"byte_end":11014260,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015336,"byte_end":11015342,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7196},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015396,"byte_end":11015402,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7196},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015636,"byte_end":11015651,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015709,"byte_end":11015724,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11015789,"byte_end":11015805,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016118,"byte_end":11016134,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11016192,"byte_end":11016198,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023567,"byte_end":11023582,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6785},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023713,"byte_end":11023729,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023863,"byte_end":11023879,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11023993,"byte_end":11023999,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7196},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":11024091,"byte_end":11024097,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7196},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11030372,"byte_end":11030383,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036405,"byte_end":11036416,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036502,"byte_end":11036513,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036646,"byte_end":11036657,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036682,"byte_end":11036693,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":6895},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11036789,"byte_end":11036794,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":597}},"from":{"krate":2,"index":9554},"to":{"krate":0,"index":6918}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041023,"byte_end":11041032,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7234},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041212,"byte_end":11041221,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7234},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041414,"byte_end":11041423,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7240},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11041585,"byte_end":11041594,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7240},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11042800,"byte_end":11042808,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11045341,"byte_end":11045349,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7203},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11045687,"byte_end":11045695,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7203},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11046065,"byte_end":11046071,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048655,"byte_end":11048661,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7210},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":11048851,"byte_end":11048854,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7216},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":11061079,"byte_end":11061087,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7421},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11072009,"byte_end":11072017,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11080010,"byte_end":11080018,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7426},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11080157,"byte_end":11080165,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7426},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11081130,"byte_end":11081138,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7426},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11081219,"byte_end":11081227,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7426},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11082094,"byte_end":11082102,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8397},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11082987,"byte_end":11082993,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":11083556,"byte_end":11083559,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":616}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":4543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11087066,"byte_end":11087074,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11088850,"byte_end":11088858,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089066,"byte_end":11089074,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7361},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089395,"byte_end":11089410,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8341},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11089711,"byte_end":11089716,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7389},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090334,"byte_end":11090335,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7402},"to":{"krate":0,"index":7400}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090520,"byte_end":11090531,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7438},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090675,"byte_end":11090686,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7438},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":11090833,"byte_end":11090844,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7438},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":11094411,"byte_end":11094416,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11118847,"byte_end":11118856,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7476},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11118940,"byte_end":11118949,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7476},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11119095,"byte_end":11119104,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11126122,"byte_end":11126132,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7841},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11126157,"byte_end":11126167,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7841},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11127608,"byte_end":11127619,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131142,"byte_end":11131159,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7510},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131460,"byte_end":11131477,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131716,"byte_end":11131727,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7852},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131752,"byte_end":11131763,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7852},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11131802,"byte_end":11131813,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7852},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11132331,"byte_end":11132341,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11135217,"byte_end":11135228,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":11137619,"byte_end":11137629,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7841},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11138134,"byte_end":11138140,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11138711,"byte_end":11138717,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":11140753,"byte_end":11140759,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7868},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11153357,"byte_end":11153362,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11159430,"byte_end":11159435,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7573},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":11142380,"byte_end":11142385,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11165225,"byte_end":11165230,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":8313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":11167232,"byte_end":11167237,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":8313},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11103830,"byte_end":11103839,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11105246,"byte_end":11105252,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11108258,"byte_end":11108264,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11112958,"byte_end":11112964,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7888},"to":{"krate":0,"index":631}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11113695,"byte_end":11113701,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7888},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11113827,"byte_end":11113832,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":11114140,"byte_end":11114145,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7668},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169388,"byte_end":11169393,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7903},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11169634,"byte_end":11169639,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170539,"byte_end":11170544,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7903},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11170571,"byte_end":11170576,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7903},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171038,"byte_end":11171045,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171133,"byte_end":11171140,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7932},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171284,"byte_end":11171291,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7932},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":11171328,"byte_end":11171333,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":663}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11172875,"byte_end":11172882,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176632,"byte_end":11176639,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176768,"byte_end":11176775,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":666}},"from":{"krate":1,"index":8112},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11176890,"byte_end":11176897,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":2136}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177062,"byte_end":11177069,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":2167}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177174,"byte_end":11177181,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177322,"byte_end":11177329,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177490,"byte_end":11177497,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":11177604,"byte_end":11177611,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":11181789,"byte_end":11181797,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11186566,"byte_end":11186573,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":11187111,"byte_end":11187118,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8275},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":11187763,"byte_end":11187767,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":11189195,"byte_end":11189199,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11193142,"byte_end":11193149,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":8013}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194349,"byte_end":11194353,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8021},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194390,"byte_end":11194394,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8021},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194431,"byte_end":11194441,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8028},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194478,"byte_end":11194488,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8028},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194525,"byte_end":11194528,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8015},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11194565,"byte_end":11194568,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8015},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11195184,"byte_end":11195188,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11200794,"byte_end":11200798,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8003},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11200937,"byte_end":11200946,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201513,"byte_end":11201522,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8009},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201680,"byte_end":11201683,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8015},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11201945,"byte_end":11201948,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8015},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11202215,"byte_end":11202218,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8015},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11202339,"byte_end":11202343,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11204850,"byte_end":11204854,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205198,"byte_end":11205202,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":8021},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205550,"byte_end":11205554,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11205916,"byte_end":11205926,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":8028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11206863,"byte_end":11206873,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":8028},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11207016,"byte_end":11207021,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":8032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11207904,"byte_end":11207908,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":8049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11208468,"byte_end":11208473,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":11208799,"byte_end":11208806,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141483,"byte_end":141493,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":141563,"byte_end":141573,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142873,"byte_end":142881,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142918,"byte_end":142926,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":142977,"byte_end":142987,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143222,"byte_end":143232,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146081,"byte_end":146091,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146448,"byte_end":146458,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146645,"byte_end":146655,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146932,"byte_end":146942,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":147175,"byte_end":147179,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8146},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":147827,"byte_end":147837,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":148206,"byte_end":148217,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8159},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":148891,"byte_end":148899,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":149098,"byte_end":149106,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":159486,"byte_end":159494,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":11216086,"byte_end":11216090,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":8194}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":11216093,"byte_end":11216097,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":8194}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":11216408,"byte_end":11216416,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8218},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218504,"byte_end":11218511,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8234},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218548,"byte_end":11218555,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8234},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218593,"byte_end":11218602,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11218788,"byte_end":11218795,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219429,"byte_end":11219438,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219570,"byte_end":11219579,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":11219701,"byte_end":11219710,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2295}}]}