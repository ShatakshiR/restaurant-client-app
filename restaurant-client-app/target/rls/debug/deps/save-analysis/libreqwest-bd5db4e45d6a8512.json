{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","reqwest","--edition=2018","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"__rustls\"","--cfg","feature=\"__tls\"","--cfg","feature=\"hyper-rustls\"","--cfg","feature=\"json\"","--cfg","feature=\"rustls\"","--cfg","feature=\"rustls-tls\"","--cfg","feature=\"rustls-tls-webpki-roots\"","--cfg","feature=\"serde_json\"","--cfg","feature=\"tokio-rustls\"","--cfg","feature=\"webpki-roots\"","-C","metadata=bd5db4e45d6a8512","-C","extra-filename=-bd5db4e45d6a8512","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","base64=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbase64-a8b435654f0f813f.rmeta","--extern","bytes=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbytes-0d9b9a37934dc76f.rmeta","--extern","encoding_rs=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libencoding_rs-ddeb2051d31c2952.rmeta","--extern","futures_core=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfutures_core-c18b2759a74772ee.rmeta","--extern","futures_util=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfutures_util-99d11e807ec811f1.rmeta","--extern","http=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libhttp-7dc26e94adc2e15a.rmeta","--extern","http_body=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libhttp_body-213031efc9c11d22.rmeta","--extern","hyper=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libhyper-ab127c93e7082ce0.rmeta","--extern","hyper_rustls=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libhyper_rustls-fc2cc9e1e061ee64.rmeta","--extern","ipnet=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libipnet-ef3b16073b254002.rmeta","--extern","lazy_static=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblazy_static-45157252ee590ae1.rmeta","--extern","log=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblog-762306cfa0445324.rmeta","--extern","mime=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmime-d1f71bad4a0a0a0b.rmeta","--extern","mime_guess=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmime_guess-f9bebc90a7a84169.rmeta","--extern","percent_encoding=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libpercent_encoding-bd4977dcebc3e53c.rmeta","--extern","pin_project_lite=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libpin_project_lite-a139b3d45b69cf72.rmeta","--extern","rustls=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\librustls-862706c03ef8ed1c.rmeta","--extern","serde=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libserde-c903a4eac6bbf43b.rmeta","--extern","serde_json=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libserde_json-7d04c86b9c4ba060.rmeta","--extern","serde_urlencoded=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libserde_urlencoded-939318d360a89b88.rmeta","--extern","tokio=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio-7caba66929e5f739.rmeta","--extern","tokio_rustls=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio_rustls-2ce3668076c953a3.rmeta","--extern","url=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liburl-5ad4fbe66d621bd4.rmeta","--extern","webpki_roots=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libwebpki_roots-51758221de934dc8.rmeta","--extern","winreg=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libwinreg-39d9126ab9d93c25.rmeta","--cap-lints","allow","-L","native=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\build\\ring-c9ff80a21dc4b97d\\out","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libreqwest-bd5db4e45d6a8512.rmeta"},"prelude":{"crate_id":{"name":"reqwest","disambiguator":[8023204804244252430,11835839654061675759]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":13,"id":{"name":"http","disambiguator":[253129302861878686,4638318453360457123]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":14,"id":{"name":"fnv","disambiguator":[2489852198916710370,6210931132834131286]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":15,"id":{"name":"bytes","disambiguator":[7196057975529454472,2047189198684000506]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":16,"id":{"name":"itoa","disambiguator":[3952745943175287038,3083261914376456478]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":17,"id":{"name":"url","disambiguator":[4861564704506466829,90531417543853101]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":18,"id":{"name":"matches","disambiguator":[11014272447762748173,16648359093321650840]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":19,"id":{"name":"form_urlencoded","disambiguator":[3024766702294307067,1281899634146512626]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","num":20,"id":{"name":"percent_encoding","disambiguator":[2805728907668164948,17987202506523671423]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":21,"id":{"name":"idna","disambiguator":[17430652402367823503,15867985309781907540]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":22,"id":{"name":"unicode_bidi","disambiguator":[15165649380447209132,13368300463009242033]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":23,"id":{"name":"unicode_normalization","disambiguator":[13653842789095296078,3712808708835134662]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":24,"id":{"name":"tinyvec","disambiguator":[254441545068744588,13939351994377385125]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":25,"id":{"name":"tinyvec_macros","disambiguator":[3740025176718053707,1767883453454209463]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","num":26,"id":{"name":"lazy_static","disambiguator":[15015519582684158761,6705730272629463748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":27,"id":{"name":"futures_core","disambiguator":[13077712991614553716,2746775383264141978]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":28,"id":{"name":"log","disambiguator":[11988239905312418642,14929643071484238321]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":29,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":30,"id":{"name":"bytes","disambiguator":[9019378406746688441,8470750716336469938]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":31,"id":{"name":"http_body","disambiguator":[6706659423734045863,13171927039021606804]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":32,"id":{"name":"pin_project_lite","disambiguator":[6831644894231998757,15463925350842481924]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":33,"id":{"name":"tokio","disambiguator":[10766661440287024334,987395534943628092]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[11458692054556465735,9113638017520811829]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":35,"id":{"name":"mio","disambiguator":[14426611954319851920,8010177769537004241]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":36,"id":{"name":"net2","disambiguator":[4264490826184072537,4561712397809616144]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":37,"id":{"name":"winapi","disambiguator":[4006827767281335465,13430598760160072842]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":38,"id":{"name":"cfg_if","disambiguator":[9160317425730696183,18175083639061721631]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":39,"id":{"name":"iovec","disambiguator":[12152129518108939196,1813996528491099070]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":40,"id":{"name":"slab","disambiguator":[14467334786303022905,4170068910821487195]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":41,"id":{"name":"miow","disambiguator":[15377211746358681375,14881981367405233104]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":42,"id":{"name":"kernel32","disambiguator":[16820212478691107798,8111668972782052801]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":43,"id":{"name":"winapi","disambiguator":[753043324285959879,10675845759397145029]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":44,"id":{"name":"ws2_32","disambiguator":[775372795951657822,11907615947731107891]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":45,"id":{"name":"tokio_macros","disambiguator":[10066805158715599723,2422332116856004130]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":46,"id":{"name":"memchr","disambiguator":[16632542777199346109,14088241813478408171]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":47,"id":{"name":"num_cpus","disambiguator":[2891945326073920803,16438406934100408411]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":48,"id":{"name":"futures_util","disambiguator":[6591374189855559440,6132881787856325873]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":49,"id":{"name":"pin_utils","disambiguator":[16365774037557991733,15375960528251589375]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":50,"id":{"name":"proc_macro_hack","disambiguator":[7474119745638034050,2806127308268777189]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":51,"id":{"name":"futures_task","disambiguator":[5743165425015945084,6317043654763795065]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":52,"id":{"name":"futures_sink","disambiguator":[8471841468798012181,8450363099045499337]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":53,"id":{"name":"futures_channel","disambiguator":[12357172854418198567,16191114919839761633]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":54,"id":{"name":"futures_io","disambiguator":[14849412076251759278,1845216843192803194]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","num":55,"id":{"name":"futures_macro","disambiguator":[13473047785218776419,13069375350084109674]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":56,"id":{"name":"hyper","disambiguator":[315869767620557631,11416887727126061833]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":57,"id":{"name":"tracing","disambiguator":[1519874576800317767,13290103514904381260]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":58,"id":{"name":"tracing_core","disambiguator":[7156280290664879487,11990394855138489855]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":59,"id":{"name":"pin_project","disambiguator":[18204422041064097437,1848538992283828856]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":60,"id":{"name":"pin_project_internal","disambiguator":[1116135904180888763,11470719430166703051]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":61,"id":{"name":"tower_service","disambiguator":[16069787305034705873,4462195955749094177]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":62,"id":{"name":"socket2","disambiguator":[126504307609738451,16234442710876005410]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":63,"id":{"name":"httpdate","disambiguator":[15136869678608050936,7061471615982677605]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":64,"id":{"name":"h2","disambiguator":[1728061508223371903,9291957608881029818]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":65,"id":{"name":"tokio_util","disambiguator":[14592850188028345135,5086023511809303591]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":66,"id":{"name":"indexmap","disambiguator":[12010419235297194710,15242852176958992948]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":67,"id":{"name":"hashbrown","disambiguator":[12863106205742173651,5412819497830497650]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":68,"id":{"name":"tracing_futures","disambiguator":[9589859288362866586,3420546340961183455]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":69,"id":{"name":"want","disambiguator":[9839177327874012678,7756593326489125356]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":70,"id":{"name":"try_lock","disambiguator":[12267023648655342982,13062530771737454236]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":71,"id":{"name":"httparse","disambiguator":[2187462968322623730,3405900760588158552]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","num":72,"id":{"name":"mime_guess","disambiguator":[17315410451146200671,3617232928874970051]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","num":73,"id":{"name":"mime","disambiguator":[2989495952748633070,11103149534438670305]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","num":74,"id":{"name":"unicase","disambiguator":[12153824628980967454,10662435083149653987]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":75,"id":{"name":"base64","disambiguator":[5086544280025110015,16259343462833000600]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":76,"id":{"name":"serde","disambiguator":[7726349748653087478,18305965747655658644]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":77,"id":{"name":"serde_derive","disambiguator":[5214723321485607833,10357800902283826234]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":78,"id":{"name":"serde_json","disambiguator":[11828549158403202617,16900018290782391945]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":79,"id":{"name":"ryu","disambiguator":[14468772150109226523,17250392272384711565]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","num":80,"id":{"name":"encoding_rs","disambiguator":[12451523111699872024,14289593172082633494]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":81,"id":{"name":"tokio_rustls","disambiguator":[15231433611441746956,9840080201233407491]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":82,"id":{"name":"rustls","disambiguator":[6826528205961989249,11726123503717650735]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":83,"id":{"name":"webpki","disambiguator":[10456741910828855427,12698051124183503571]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":84,"id":{"name":"ring","disambiguator":[9756764791980652279,18219608114778004747]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":85,"id":{"name":"untrusted","disambiguator":[9168760248426327093,13482126668996091033]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":86,"id":{"name":"spin","disambiguator":[2611876641070612315,17340318998664487261]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":87,"id":{"name":"sct","disambiguator":[12905500647729257638,14728047956834201523]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":88,"id":{"name":"base64","disambiguator":[3906732271287526408,12039393918393938381]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","num":89,"id":{"name":"ipnet","disambiguator":[6624124098071886292,5408133817758766647]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","num":90,"id":{"name":"winreg","disambiguator":[6756484461328448060,3058410724513536529]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","num":91,"id":{"name":"webpki_roots","disambiguator":[2390341735449098596,8615268995783204176]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","num":92,"id":{"name":"serde_urlencoded","disambiguator":[6349970628161047548,15088346844935710951]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","num":93,"id":{"name":"hyper_rustls","disambiguator":[2245462447750219826,11929191280956517053]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":0,"byte_end":9939,"line_start":1,"line_end":320,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":13,"index":5},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7560,"byte_end":7566,"line_start":216,"line_end":216,"column_start":15,"column_end":21},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":2416},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7582,"byte_end":7588,"line_start":217,"line_end":217,"column_start":15,"column_end":21},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":2509},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7605,"byte_end":7615,"line_start":218,"line_end":218,"column_start":16,"column_end":26},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":2694},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7617,"byte_end":7624,"line_start":218,"line_end":218,"column_start":28,"column_end":35},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":719},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7640,"byte_end":7643,"line_start":219,"line_end":219,"column_start":14,"column_end":17},"alias_span":null,"name":"Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7725,"byte_end":7730,"line_start":226,"line_end":226,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7732,"byte_end":7738,"line_start":226,"line_end":226,"column_start":30,"column_end":36},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7765,"byte_end":7772,"line_start":227,"line_end":227,"column_start":25,"column_end":32},"alias_span":null,"name":"IntoUrl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9295,"byte_end":9304,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"alias_span":null,"name":"multipart","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9306,"byte_end":9310,"line_start":293,"line_end":293,"column_start":20,"column_end":24},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9312,"byte_end":9318,"line_start":293,"line_end":293,"column_start":26,"column_end":32},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9320,"byte_end":9333,"line_start":293,"line_end":293,"column_start":34,"column_end":47},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9335,"byte_end":9342,"line_start":293,"line_end":293,"column_start":49,"column_end":56},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9344,"byte_end":9358,"line_start":293,"line_end":293,"column_start":58,"column_end":72},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9360,"byte_end":9368,"line_start":293,"line_end":293,"column_start":74,"column_end":82},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9370,"byte_end":9388,"line_start":293,"line_end":293,"column_start":84,"column_end":102},"alias_span":null,"name":"ResponseBuilderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9422,"byte_end":9427,"line_start":295,"line_end":295,"column_start":26,"column_end":31},"alias_span":null,"name":"Proxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9483,"byte_end":9494,"line_start":297,"line_end":297,"column_start":25,"column_end":36},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9496,"byte_end":9504,"line_start":297,"line_end":297,"column_start":38,"column_end":46},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":0,"byte_end":9939,"line_start":1,"line_end":320,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":73},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":792},{"krate":0,"index":962},{"krate":0,"index":1066},{"krate":0,"index":1115},{"krate":0,"index":1168}],"decl_id":null,"docs":" # reqwest","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # reqwest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":158,"byte_end":171,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":172,"byte_end":175,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `reqwest` crate provides a convenient, higher-level HTTP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":176,"byte_end":240,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ [`Client`][client].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":241,"byte_end":264,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":265,"byte_end":268,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It handles many of the things that most people just expect an HTTP client","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":269,"byte_end":346,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ to do for them.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":347,"byte_end":366,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":367,"byte_end":370,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - Async and [blocking](blocking) Clients","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":371,"byte_end":415,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ - Plain bodies, [JSON](#json), [urlencoded](#forms), [multipart](multipart)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":416,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ - Customizable [redirect policy](#redirect-policies)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":496,"byte_end":552,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ - HTTP [Proxies](#proxies)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":553,"byte_end":583,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ - Uses system-native [TLS](#tls)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":584,"byte_end":620,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ - Cookies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":621,"byte_end":634,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":635,"byte_end":638,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The [`reqwest::Client`][client] is asynchronous. For applications wishing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":639,"byte_end":716,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ to only make a few HTTP requests, the [`reqwest::blocking`](blocking) API","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":717,"byte_end":794,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ may be more convenient.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":795,"byte_end":822,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":823,"byte_end":826,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Additional learning resources include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":827,"byte_end":869,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":870,"byte_end":873,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - [The Rust Cookbook](https://rust-lang-nursery.github.io/rust-cookbook/web/clients.html)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":874,"byte_end":967,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ - [Reqwest Repository Examples](https://github.com/seanmonstar/reqwest/tree/master/examples)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":968,"byte_end":1064,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1065,"byte_end":1068,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Making a GET request","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1069,"byte_end":1096,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1097,"byte_end":1100,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ For a single request, you can use the [`get`][get] shortcut method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1101,"byte_end":1172,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1173,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1177,"byte_end":1188,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1189,"byte_end":1241,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1242,"byte_end":1298,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1299,"byte_end":1314,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/     .text()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1315,"byte_end":1330,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1331,"byte_end":1347,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1348,"byte_end":1351,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ println!(\"body = {:?}\", body);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1352,"byte_end":1386,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1387,"byte_end":1399,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1400,"byte_end":1407,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1408,"byte_end":1415,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1416,"byte_end":1419,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If you plan to perform multiple requests, it is best to create a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1420,"byte_end":1498,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ [`Client`][client] and reuse it, taking advantage of keep-alive connection","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1499,"byte_end":1577,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ pooling.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1578,"byte_end":1590,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1591,"byte_end":1594,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Making POST requests (or setting request bodies)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1595,"byte_end":1650,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1651,"byte_end":1654,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ There are several ways you can set the body of a request. The basic one is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1655,"byte_end":1733,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ by using the `body()` method of a [`RequestBuilder`][builder]. This lets you set the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1734,"byte_end":1822,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/ exact raw bytes of what the body should be. It accepts various types,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1823,"byte_end":1896,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ including `String`, `Vec<u8>`, and `File`. If you wish to pass a custom","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1897,"byte_end":1972,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ type, you can use the `reqwest::Body` constructors.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":1973,"byte_end":2028,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2029,"byte_end":2032,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2033,"byte_end":2044,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2045,"byte_end":2070,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2071,"byte_end":2076,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2077,"byte_end":2120,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2121,"byte_end":2161,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2162,"byte_end":2214,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/     .body(\"the exact body that is sent\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2215,"byte_end":2259,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2260,"byte_end":2275,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2276,"byte_end":2292,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2293,"byte_end":2305,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2306,"byte_end":2313,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2314,"byte_end":2321,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2322,"byte_end":2325,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ### Forms","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2326,"byte_end":2339,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2340,"byte_end":2343,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ It's very common to want to send form data in a request body. This can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2344,"byte_end":2421,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ done with any type that can be serialized into form data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2422,"byte_end":2483,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2484,"byte_end":2487,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This can be an array of tuples, or a `HashMap`, or a custom type that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2488,"byte_end":2561,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ implements [`Serialize`][serde].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2562,"byte_end":2598,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2603,"byte_end":2614,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2615,"byte_end":2640,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2641,"byte_end":2646,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2647,"byte_end":2690,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `foo=bar&baz=quux`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2691,"byte_end":2741,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ let params = [(\"foo\", \"bar\"), (\"baz\", \"quux\")];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2742,"byte_end":2793,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2794,"byte_end":2834,"line_start":85,"line_end":85,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2835,"byte_end":2887,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"/     .form(&params)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2888,"byte_end":2910,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2911,"byte_end":2926,"line_start":88,"line_end":88,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2927,"byte_end":2943,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2944,"byte_end":2956,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2957,"byte_end":2964,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2965,"byte_end":2972,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2973,"byte_end":2976,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ### JSON","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2977,"byte_end":2989,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2990,"byte_end":2993,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ There is also a `json` method helper on the [`RequestBuilder`][builder] that works in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":2994,"byte_end":3083,"line_start":96,"line_end":96,"column_start":1,"column_end":90}},{"value":"/ a similar fashion the `form` method. It can take any value that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3084,"byte_end":3158,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ serialized into JSON. The feature `json` is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3159,"byte_end":3216,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3217,"byte_end":3220,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3221,"byte_end":3232,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3233,"byte_end":3258,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3259,"byte_end":3295,"line_start":102,"line_end":102,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3296,"byte_end":3301,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(feature = \"json\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3302,"byte_end":3332,"line_start":104,"line_end":104,"column_start":1,"column_end":31}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3333,"byte_end":3376,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `{\"lang\":\"rust\",\"body\":\"json\"}`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3377,"byte_end":3440,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3441,"byte_end":3474,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"lang\", \"rust\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3475,"byte_end":3506,"line_start":108,"line_end":108,"column_start":1,"column_end":32}},{"value":"/ map.insert(\"body\", \"json\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3507,"byte_end":3538,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3539,"byte_end":3542,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3543,"byte_end":3583,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3584,"byte_end":3636,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/     .json(&map)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3637,"byte_end":3656,"line_start":113,"line_end":113,"column_start":1,"column_end":20}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3657,"byte_end":3672,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3673,"byte_end":3689,"line_start":115,"line_end":115,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3690,"byte_end":3702,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3703,"byte_end":3710,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3711,"byte_end":3718,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3719,"byte_end":3722,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ## Redirect Policies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3723,"byte_end":3747,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3748,"byte_end":3751,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3752,"byte_end":3829,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3830,"byte_end":3898,"line_start":123,"line_end":123,"column_start":1,"column_end":69}},{"value":"/ [`redirect::Policy`][redirect] can be used with a `ClientBuilder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3899,"byte_end":3969,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3970,"byte_end":3973,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ## Cookies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3974,"byte_end":3988,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3989,"byte_end":3992,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The automatic storing and sending of session cookies can be enabled with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":3993,"byte_end":4069,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ the [`cookie_store`][ClientBuilder::cookie_store] method on `ClientBuilder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4070,"byte_end":4150,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4151,"byte_end":4154,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ## Proxies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4155,"byte_end":4169,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4170,"byte_end":4173,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: System proxies are enabled by default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4174,"byte_end":4226,"line_start":133,"line_end":133,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4227,"byte_end":4230,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ System proxies look in environment variables to set HTTP or HTTPS proxies.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4231,"byte_end":4309,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4310,"byte_end":4313,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ `HTTP_PROXY` or `http_proxy` provide http proxies for http connections while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4314,"byte_end":4394,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ `HTTPS_PROXY` or `https_proxy` provide HTTPS proxies for HTTPS connections.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4395,"byte_end":4474,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4475,"byte_end":4478,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ These can be overwritten by adding a [`Proxy`](Proxy) to `ClientBuilder`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4479,"byte_end":4555,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/ i.e. `let proxy = reqwest::Proxy::http(\"https://secure.example\")?;`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4556,"byte_end":4627,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/ or disabled by calling `ClientBuilder::no_proxy()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4628,"byte_end":4683,"line_start":142,"line_end":142,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4684,"byte_end":4687,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `socks` feature is required if you have configured socks proxy like this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4688,"byte_end":4765,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4766,"byte_end":4769,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4770,"byte_end":4781,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ export https_proxy=socks5://127.0.0.1:1086","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4782,"byte_end":4828,"line_start":147,"line_end":147,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4829,"byte_end":4836,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4837,"byte_end":4840,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ## TLS","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4841,"byte_end":4851,"line_start":150,"line_end":150,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4852,"byte_end":4855,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will make use of system-native transport layer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4856,"byte_end":4929,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/ security to connect to HTTPS destinations. This means schannel on Windows,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":4930,"byte_end":5008,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ Security-Framework on macOS, and OpenSSL on Linux.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5009,"byte_end":5063,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5064,"byte_end":5067,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ - Additional X509 certificates can be configured on a `ClientBuilder` with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5068,"byte_end":5150,"line_start":156,"line_end":156,"column_start":1,"column_end":83}},{"value":"/   [`Certificate`](Certificate) type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5151,"byte_end":5191,"line_start":157,"line_end":157,"column_start":1,"column_end":41}},{"value":"/ - Client certificates can be add to a `ClientBuilder` with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5192,"byte_end":5258,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/   [`Identity`][Identity] type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5259,"byte_end":5293,"line_start":159,"line_end":159,"column_start":1,"column_end":35}},{"value":"/ - Various parts of TLS can also be configured or even disabled on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5294,"byte_end":5367,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/   `ClientBuilder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5368,"byte_end":5390,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5391,"byte_end":5394,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5395,"byte_end":5419,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5420,"byte_end":5423,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The following are a list of [Cargo features][cargo-features] that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5424,"byte_end":5500,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ enabled or disabled:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5501,"byte_end":5525,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5526,"byte_end":5529,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ - **default-tls** *(enabled by default)*: Provides TLS support to connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5530,"byte_end":5607,"line_start":168,"line_end":168,"column_start":1,"column_end":78}},{"value":"/   over HTTPS.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5608,"byte_end":5625,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ - **native-tls**: Enables TLS functionality provided by `native-tls`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5626,"byte_end":5699,"line_start":170,"line_end":170,"column_start":1,"column_end":74}},{"value":"/ - **native-tls-vendored**: Enables the `vendored` feature of `native-tls`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5700,"byte_end":5778,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ - **rustls-tls**: Enables TLS functionality provided by `rustls`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5779,"byte_end":5848,"line_start":172,"line_end":172,"column_start":1,"column_end":70}},{"value":"/   Equivalent to `rustls-tls-webpki-roots`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5849,"byte_end":5895,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/ - **rustls-tls-manual-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5896,"byte_end":5978,"line_start":174,"line_end":174,"column_start":1,"column_end":83}},{"value":"/   without setting any root certificates. Roots have to be specified manually.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":5979,"byte_end":6060,"line_start":175,"line_end":175,"column_start":1,"column_end":82}},{"value":"/ - **rustls-tls-webpki-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6061,"byte_end":6143,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `webpki-roots` crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6144,"byte_end":6210,"line_start":177,"line_end":177,"column_start":1,"column_end":67}},{"value":"/ - **rustls-tls-native-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6211,"byte_end":6293,"line_start":178,"line_end":178,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `rustls-native-certs` crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6294,"byte_end":6367,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ - **blocking**: Provides the [blocking][] client API.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6368,"byte_end":6425,"line_start":180,"line_end":180,"column_start":1,"column_end":58}},{"value":"/ - **cookies**: Provides cookie session support.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6426,"byte_end":6477,"line_start":181,"line_end":181,"column_start":1,"column_end":52}},{"value":"/ - **gzip**: Provides response body gzip decompression.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6478,"byte_end":6536,"line_start":182,"line_end":182,"column_start":1,"column_end":59}},{"value":"/ - **brotli**: Provides response body brotli decompression.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6537,"byte_end":6599,"line_start":183,"line_end":183,"column_start":1,"column_end":63}},{"value":"/ - **json**: Provides serialization and deserialization for JSON bodies.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6600,"byte_end":6675,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ - **stream**: Adds support for `futures::Stream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6676,"byte_end":6729,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ - **socks**: Provides SOCKS5 proxy support.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6730,"byte_end":6777,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/ - **trust-dns**: Enables a trust-dns async resolver instead of default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6778,"byte_end":6852,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/   threadpool using `getaddrinfo`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6853,"byte_end":6890,"line_start":188,"line_end":188,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6891,"byte_end":6894,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6895,"byte_end":6898,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [hyper]: http://hyper.rs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6899,"byte_end":6927,"line_start":191,"line_end":191,"column_start":1,"column_end":29}},{"value":"/ [blocking]: ./blocking/index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6928,"byte_end":6965,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/ [client]: ./struct.Client.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":6966,"byte_end":7000,"line_start":193,"line_end":193,"column_start":1,"column_end":35}},{"value":"/ [response]: ./struct.Response.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7001,"byte_end":7039,"line_start":194,"line_end":194,"column_start":1,"column_end":39}},{"value":"/ [get]: ./fn.get.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7040,"byte_end":7064,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ [builder]: ./struct.RequestBuilder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7065,"byte_end":7108,"line_start":196,"line_end":196,"column_start":1,"column_end":44}},{"value":"/ [serde]: http://serde.rs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7109,"byte_end":7137,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/ [redirect]: crate::redirect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7138,"byte_end":7169,"line_start":198,"line_end":198,"column_start":1,"column_end":32}},{"value":"/ [Proxy]: ./struct.Proxy.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7170,"byte_end":7202,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"/ [cargo-features]: https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7203,"byte_end":7308,"line_start":200,"line_end":200,"column_start":1,"column_end":106}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10159,"byte_end":10165,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A `Result` alias where the `Err` case is `reqwest::Error`.\n","sig":null,"attributes":[{"value":"/ A `Result` alias where the `Err` case is `reqwest::Error`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10087,"byte_end":10149,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10273,"byte_end":10278,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" The Errors that may occur when processing a `Request`.\n","sig":null,"attributes":[{"value":"/ The Errors that may occur when processing a `Request`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10203,"byte_end":10261,"line_start":11,"line_end":11,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11273,"byte_end":11276,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"url","qualname":"<Error>::url","value":"pub fn url(&Self) -> Option<&Url>","parent":null,"children":[],"decl_id":null,"docs":" Returns a possible URL related to this error.","sig":null,"attributes":[{"value":"/ Returns a possible URL related to this error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10761,"byte_end":10810,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10815,"byte_end":10818,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10823,"byte_end":10837,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10842,"byte_end":10845,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10850,"byte_end":10857,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # async fn run() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10862,"byte_end":10884,"line_start":43,"line_end":43,"column_start":5,"column_end":27}},{"value":"/ // displays last stop of a redirect loop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10889,"byte_end":10933,"line_start":44,"line_end":44,"column_start":5,"column_end":49}},{"value":"/ let response = reqwest::get(\"http://site.with.redirect.loop\").await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10938,"byte_end":11010,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ if let Err(e) = response {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11015,"byte_end":11045,"line_start":46,"line_end":46,"column_start":5,"column_end":35}},{"value":"/     if e.is_redirect() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11050,"byte_end":11078,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/         if let Some(final_stop) = e.url() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11083,"byte_end":11130,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/             println!(\"redirect loop at {}\", final_stop);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11135,"byte_end":11195,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11200,"byte_end":11213,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11218,"byte_end":11227,"line_start":51,"line_end":51,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11232,"byte_end":11237,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11242,"byte_end":11249,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11254,"byte_end":11261,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11410,"byte_end":11420,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"is_builder","qualname":"<Error>::is_builder","value":"pub fn is_builder(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a type Builder.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a type Builder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11345,"byte_end":11398,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11619,"byte_end":11630,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"is_redirect","qualname":"<Error>::is_redirect","value":"pub fn is_redirect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a `RedirectPolicy`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a `RedirectPolicy`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11550,"byte_end":11607,"line_start":67,"line_end":67,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11840,"byte_end":11849,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"is_status","qualname":"<Error>::is_status","value":"pub fn is_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from `Response::error_for_status`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from `Response::error_for_status`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11761,"byte_end":11828,"line_start":75,"line_end":75,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12047,"byte_end":12057,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to a timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":11981,"byte_end":12035,"line_start":83,"line_end":83,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12374,"byte_end":12384,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"is_request","qualname":"<Error>::is_request","value":"pub fn is_request(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12307,"byte_end":12362,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12617,"byte_end":12627,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to connect\n","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12514,"byte_end":12549,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/ Returns true if the error is related to connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12554,"byte_end":12605,"line_start":106,"line_end":106,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13064,"byte_end":13071,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"is_body","qualname":"<Error>::is_body","value":"pub fn is_body(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request or response body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request or response body","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":12980,"byte_end":13052,"line_start":123,"line_end":123,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13282,"byte_end":13291,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"is_decode","qualname":"<Error>::is_decode","value":"pub fn is_decode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to decoding the response's body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to decoding the response's body","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13198,"byte_end":13270,"line_start":131,"line_end":131,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13504,"byte_end":13510,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"status","qualname":"<Error>::status","value":"pub fn status(&Self) -> Option<StatusCode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status code, if the error was generated from a response.\n","sig":null,"attributes":[{"value":"/ Returns the status code, if the error was generated from a response.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13420,"byte_end":13492,"line_start":139,"line_end":139,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19810,"byte_end":19817,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"IntoUrl","qualname":"::into_url::IntoUrl","value":"IntoUrl: PolyfillTryInto","parent":null,"children":[],"decl_id":null,"docs":" A trait to try to convert some type into a `Url`.","sig":null,"attributes":[{"value":"/ A trait to try to convert some type into a `Url`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19543,"byte_end":19596,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19597,"byte_end":19600,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait is \"sealed\", such that only types within reqwest can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19601,"byte_end":19668,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ implement it. The reason is that it will eventually be deprecated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19669,"byte_end":19738,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ and removed, when `std::convert::TryFrom` is stabilized.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19739,"byte_end":19799,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19892,"byte_end":19907,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"PolyfillTryInto","qualname":"::into_url::PolyfillTryInto","value":"PolyfillTryInto","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":20056,"byte_end":20064,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"into_url","qualname":"::into_url::PolyfillTryInto::into_url","value":"pub fn into_url(Self) -> crate::Result<Url>","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8546,"byte_end":8549,"line_start":256,"line_end":256,"column_start":14,"column_end":17},"name":"get","qualname":"::get","value":"pub async fn get<T: IntoUrl>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to quickly make a `GET` request.","sig":null,"attributes":[{"value":"/ Shortcut method to quickly make a `GET` request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7775,"byte_end":7827,"line_start":229,"line_end":229,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7828,"byte_end":7831,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ See also the methods on the [`reqwest::Response`](./struct.Response.html)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7832,"byte_end":7909,"line_start":231,"line_end":231,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7910,"byte_end":7919,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7920,"byte_end":7923,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: This function creates a new internal `Client` on each call,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7924,"byte_end":7997,"line_start":234,"line_end":234,"column_start":1,"column_end":74}},{"value":"/ and so should not be used if making many requests. Create a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7998,"byte_end":8061,"line_start":235,"line_end":235,"column_start":1,"column_end":64}},{"value":"/ [`Client`](./struct.Client.html) instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8062,"byte_end":8107,"line_start":236,"line_end":236,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8108,"byte_end":8111,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8112,"byte_end":8126,"line_start":238,"line_end":238,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8127,"byte_end":8130,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8131,"byte_end":8142,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8143,"byte_end":8195,"line_start":241,"line_end":241,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\").await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8196,"byte_end":8259,"line_start":242,"line_end":242,"column_start":1,"column_end":64}},{"value":"/     .text().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8260,"byte_end":8283,"line_start":243,"line_end":243,"column_start":1,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8284,"byte_end":8296,"line_start":244,"line_end":244,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8297,"byte_end":8304,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8305,"byte_end":8312,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8313,"byte_end":8316,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8317,"byte_end":8329,"line_start":248,"line_end":248,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8330,"byte_end":8333,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This function fails if:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8334,"byte_end":8361,"line_start":250,"line_end":250,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8362,"byte_end":8365,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ - native TLS backend cannot be initialized","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8366,"byte_end":8412,"line_start":252,"line_end":252,"column_start":1,"column_end":47}},{"value":"/ - supplied `Url` cannot be parsed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8413,"byte_end":8450,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/ - there was an error while sending request","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8451,"byte_end":8497,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ - redirect limit was exhausted","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":8498,"byte_end":8532,"line_start":255,"line_end":255,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273020,"byte_end":10273024,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Body","qualname":"::async_impl::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":163}],"decl_id":null,"docs":" An asynchronous request body.\n","sig":null,"attributes":[{"value":"/ An asynchronous request body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10272975,"byte_end":10273008,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273724,"byte_end":10273732,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Body>::as_bytes","value":"pub fn as_bytes(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal data of the `Body`.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal data of the `Body`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273581,"byte_end":10273640,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273645,"byte_end":10273648,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ `None` is returned, if the underlying data is a stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273653,"byte_end":10273712,"line_start":46,"line_end":46,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283276,"byte_end":10283282,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Client","qualname":"::async_impl::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1181}],"decl_id":null,"docs":" An asynchronous `Client` to make Requests with.","sig":null,"attributes":[{"value":"/ An asynchronous `Client` to make Requests with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282711,"byte_end":10282762,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282763,"byte_end":10282766,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The Client has various configuration values to tweak, but the defaults","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282767,"byte_end":10282841,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ are set to what is usually the most commonly desired value. To configure a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282842,"byte_end":10282920,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ `Client`, use `Client::builder()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282921,"byte_end":10282959,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282960,"byte_end":10282963,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `Client` holds a connection pool internally, so it is advised that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10282964,"byte_end":10283038,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ you create one and **reuse** it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283039,"byte_end":10283075,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283076,"byte_end":10283079,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ You do **not** have to wrap the `Client` it in an [`Rc`] or [`Arc`] to **reuse** it,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283080,"byte_end":10283168,"line_start":59,"line_end":59,"column_start":1,"column_end":89}},{"value":"/ because it already uses an [`Arc`] internally.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283169,"byte_end":10283219,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283220,"byte_end":10283223,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`Rc`]: std::rc::Rc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283224,"byte_end":10283247,"line_start":62,"line_end":62,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283421,"byte_end":10283434,"line_start":70,"line_end":70,"column_start":12,"column_end":25},"name":"ClientBuilder","qualname":"::async_impl::client::ClientBuilder","value":"ClientBuilder {  }","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":" A `ClientBuilder` can be used to create a `Client` with  custom configuration.\n","sig":null,"attributes":[{"value":"/ A `ClientBuilder` can be used to create a `Client` with  custom configuration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283315,"byte_end":10283397,"line_start":68,"line_end":68,"column_start":1,"column_end":83}},{"value":"must_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10283398,"byte_end":10283409,"line_start":69,"line_end":69,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284853,"byte_end":10284856,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientBuilder>::new","value":"pub fn new() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ClientBuilder`.","sig":null,"attributes":[{"value":"/ Constructs a new `ClientBuilder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284747,"byte_end":10284784,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284789,"byte_end":10284792,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Client::builder()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284797,"byte_end":10284841,"line_start":121,"line_end":121,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286965,"byte_end":10286970,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientBuilder>::build","value":"pub fn build(Self) -> crate::Result<Client>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Client` that uses this `ClientBuilder` configuration.","sig":null,"attributes":[{"value":"/ Returns a `Client` that uses this `ClientBuilder` configuration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286726,"byte_end":10286794,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286799,"byte_end":10286802,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286807,"byte_end":10286819,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286824,"byte_end":10286827,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method fails if TLS backend cannot be initialized, or the resolver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286832,"byte_end":10286907,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ cannot load the system configuration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10286912,"byte_end":10286953,"line_start":173,"line_end":173,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294519,"byte_end":10294529,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<ClientBuilder>::user_agent","value":"pub fn user_agent<V>(Self, V) -> ClientBuilder where V: TryInto<HeaderValue>,\nV::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `User-Agent` header to be used by this client.","sig":null,"attributes":[{"value":"/ Sets the `User-Agent` header to be used by this client.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10293910,"byte_end":10293969,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10293974,"byte_end":10293977,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10293982,"byte_end":10293995,"line_start":365,"line_end":365,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294000,"byte_end":10294003,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294008,"byte_end":10294019,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294024,"byte_end":10294076,"line_start":368,"line_end":368,"column_start":5,"column_end":57}},{"value":"/ // Name your user agent after your app?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294081,"byte_end":10294124,"line_start":369,"line_end":369,"column_start":5,"column_end":48}},{"value":"/ static APP_USER_AGENT: &str = concat!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294129,"byte_end":10294171,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/     env!(\"CARGO_PKG_NAME\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294176,"byte_end":10294207,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/     \"/\",","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294212,"byte_end":10294224,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/     env!(\"CARGO_PKG_VERSION\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294229,"byte_end":10294263,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294268,"byte_end":10294274,"line_start":374,"line_end":374,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294279,"byte_end":10294282,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294287,"byte_end":10294330,"line_start":376,"line_end":376,"column_start":5,"column_end":48}},{"value":"/     .user_agent(APP_USER_AGENT)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294335,"byte_end":10294370,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294375,"byte_end":10294393,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294398,"byte_end":10294466,"line_start":379,"line_end":379,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294471,"byte_end":10294483,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294488,"byte_end":10294495,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294500,"byte_end":10294507,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296194,"byte_end":10296209,"line_start":437,"line_end":437,"column_start":12,"column_end":27},"name":"default_headers","qualname":"<ClientBuilder>::default_headers","value":"pub fn default_headers(Self, HeaderMap) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the default headers for every request.","sig":null,"attributes":[{"value":"/ Sets the default headers for every request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294940,"byte_end":10294987,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10294992,"byte_end":10294995,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295000,"byte_end":10295013,"line_start":400,"line_end":400,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295018,"byte_end":10295021,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295026,"byte_end":10295037,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295042,"byte_end":10295066,"line_start":403,"line_end":403,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295071,"byte_end":10295123,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295128,"byte_end":10295175,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/ headers.insert(header::AUTHORIZATION, header::HeaderValue::from_static(\"secret\"));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295180,"byte_end":10295266,"line_start":406,"line_end":406,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295271,"byte_end":10295274,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295279,"byte_end":10295306,"line_start":408,"line_end":408,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295311,"byte_end":10295354,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295359,"byte_end":10295392,"line_start":410,"line_end":410,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295397,"byte_end":10295415,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295420,"byte_end":10295488,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295493,"byte_end":10295505,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295510,"byte_end":10295517,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295522,"byte_end":10295529,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295534,"byte_end":10295537,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Override the default headers:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295542,"byte_end":10295575,"line_start":417,"line_end":417,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295580,"byte_end":10295583,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295588,"byte_end":10295599,"line_start":419,"line_end":419,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295604,"byte_end":10295628,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295633,"byte_end":10295685,"line_start":421,"line_end":421,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295690,"byte_end":10295737,"line_start":422,"line_end":422,"column_start":5,"column_end":52}},{"value":"/ headers.insert(header::AUTHORIZATION, header::HeaderValue::from_static(\"secret\"));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295742,"byte_end":10295828,"line_start":423,"line_end":423,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295833,"byte_end":10295836,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295841,"byte_end":10295868,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295873,"byte_end":10295916,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295921,"byte_end":10295954,"line_start":427,"line_end":427,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295959,"byte_end":10295977,"line_start":428,"line_end":428,"column_start":5,"column_end":23}},{"value":"/ let res = client","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10295982,"byte_end":10296002,"line_start":429,"line_end":429,"column_start":5,"column_end":25}},{"value":"/     .get(\"https://www.rust-lang.org\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296007,"byte_end":10296048,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/     .header(header::AUTHORIZATION, \"token\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296053,"byte_end":10296100,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296105,"byte_end":10296120,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296125,"byte_end":10296141,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296146,"byte_end":10296158,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296163,"byte_end":10296170,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10296175,"byte_end":10296182,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299309,"byte_end":10299316,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"no_gzip","qualname":"<ClientBuilder>::no_gzip","value":"pub fn no_gzip(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body gzip decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body gzip decompression.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299004,"byte_end":10299054,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299059,"byte_end":10299062,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `gzip` feature is not enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299067,"byte_end":10299141,"line_start":510,"line_end":510,"column_start":5,"column_end":79}},{"value":"/ This can be used to ensure a `Client` doesn't use gzip decompression","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299146,"byte_end":10299218,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"/ even if another dependency were to enable the optional `gzip` feature.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299223,"byte_end":10299297,"line_start":512,"line_end":512,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299824,"byte_end":10299833,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"no_brotli","qualname":"<ClientBuilder>::no_brotli","value":"pub fn no_brotli(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body brotli decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body brotli decompression.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299511,"byte_end":10299563,"line_start":525,"line_end":525,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299568,"byte_end":10299571,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `brotli` feature is not enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299576,"byte_end":10299652,"line_start":527,"line_end":527,"column_start":5,"column_end":81}},{"value":"/ This can be used to ensure a `Client` doesn't use brotli decompression","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299657,"byte_end":10299731,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ even if another dependency were to enable the optional `brotli` feature.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10299736,"byte_end":10299812,"line_start":529,"line_end":529,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300183,"byte_end":10300191,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"redirect","qualname":"<ClientBuilder>::redirect","value":"pub fn redirect(Self, redirect::Policy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a `RedirectPolicy` for this client.","sig":null,"attributes":[{"value":"/ Set a `RedirectPolicy` for this client.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300059,"byte_end":10300102,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300107,"byte_end":10300110,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Default will follow redirects up to a maximum of 10.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300115,"byte_end":10300171,"line_start":546,"line_end":546,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300428,"byte_end":10300435,"line_start":555,"line_end":555,"column_start":12,"column_end":19},"name":"referer","qualname":"<ClientBuilder>::referer","value":"pub fn referer(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic setting of the `Referer` header.","sig":null,"attributes":[{"value":"/ Enable or disable automatic setting of the `Referer` header.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300317,"byte_end":10300381,"line_start":552,"line_end":552,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300386,"byte_end":10300389,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300394,"byte_end":10300416,"line_start":554,"line_end":554,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300748,"byte_end":10300753,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"proxy","qualname":"<ClientBuilder>::proxy","value":"pub fn proxy(Self, Proxy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a `Proxy` to the list of proxies the `Client` will use.","sig":null,"attributes":[{"value":"/ Add a `Proxy` to the list of proxies the `Client` will use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300563,"byte_end":10300626,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300631,"byte_end":10300634,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300639,"byte_end":10300649,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300654,"byte_end":10300657,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Adding a proxy will disable the automatic usage of the \"system\" proxy.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300662,"byte_end":10300736,"line_start":566,"line_end":566,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301059,"byte_end":10301067,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"no_proxy","qualname":"<ClientBuilder>::no_proxy","value":"pub fn no_proxy(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear all `Proxies`, so `Client` will use no proxy anymore.","sig":null,"attributes":[{"value":"/ Clear all `Proxies`, so `Client` will use no proxy anymore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300906,"byte_end":10300969,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300974,"byte_end":10300977,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ This also disables the automatic usage of the \"system\" proxy.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10300982,"byte_end":10301047,"line_start":575,"line_end":575,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301295,"byte_end":10301308,"line_start":584,"line_end":584,"column_start":12,"column_end":25},"name":"use_sys_proxy","qualname":"<ClientBuilder>::use_sys_proxy","value":"pub fn use_sys_proxy(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"the system proxy is used automatically\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301221,"byte_end":10301283,"line_start":583,"line_end":583,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301588,"byte_end":10301595,"line_start":596,"line_end":596,"column_start":12,"column_end":19},"name":"timeout","qualname":"<ClientBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301382,"byte_end":10301412,"line_start":590,"line_end":590,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301417,"byte_end":10301420,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301425,"byte_end":10301501,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ response body has finished.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301506,"byte_end":10301537,"line_start":593,"line_end":593,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301542,"byte_end":10301545,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Default is no timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301550,"byte_end":10301576,"line_start":595,"line_end":595,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301955,"byte_end":10301970,"line_start":609,"line_end":609,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<ClientBuilder>::connect_timeout","value":"pub fn connect_timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for only the connect phase of a `Client`.","sig":null,"attributes":[{"value":"/ Set a timeout for only the connect phase of a `Client`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301713,"byte_end":10301772,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301777,"byte_end":10301780,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301785,"byte_end":10301807,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301812,"byte_end":10301815,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301820,"byte_end":10301830,"line_start":605,"line_end":605,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301835,"byte_end":10301838,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ This **requires** the futures be executed in a tokio runtime with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301843,"byte_end":10301912,"line_start":607,"line_end":607,"column_start":5,"column_end":74}},{"value":"/ a tokio timer enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10301917,"byte_end":10301943,"line_start":608,"line_end":608,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302352,"byte_end":10302370,"line_start":620,"line_end":620,"column_start":12,"column_end":30},"name":"connection_verbose","qualname":"<ClientBuilder>::connection_verbose","value":"pub fn connection_verbose(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether connections should emit verbose logs.","sig":null,"attributes":[{"value":"/ Set whether connections should emit verbose logs.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302096,"byte_end":10302149,"line_start":614,"line_end":614,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302154,"byte_end":10302157,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Enabling this option will emit [log][] messages at the `TRACE` level","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302162,"byte_end":10302234,"line_start":616,"line_end":616,"column_start":5,"column_end":77}},{"value":"/ for read and write operations on connections.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302239,"byte_end":10302288,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302293,"byte_end":10302296,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ [log]: https://crates.io/crates/log","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302301,"byte_end":10302340,"line_start":619,"line_end":619,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302671,"byte_end":10302688,"line_start":632,"line_end":632,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<ClientBuilder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302510,"byte_end":10302572,"line_start":627,"line_end":627,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302577,"byte_end":10302580,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302585,"byte_end":10302620,"line_start":629,"line_end":629,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302625,"byte_end":10302628,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302633,"byte_end":10302659,"line_start":631,"line_end":631,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302932,"byte_end":10302954,"line_start":641,"line_end":641,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<ClientBuilder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(Self, usize) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.\n","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10302854,"byte_end":10302920,"line_start":640,"line_end":640,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303160,"byte_end":10303177,"line_start":648,"line_end":648,"column_start":12,"column_end":29},"name":"max_idle_per_host","qualname":"<ClientBuilder>::max_idle_per_host","value":"pub fn max_idle_per_host(Self, usize) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_max_idle_per_host`\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303089,"byte_end":10303148,"line_start":647,"line_end":647,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303313,"byte_end":10303337,"line_start":653,"line_end":653,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<ClientBuilder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable case sensitive headers.\n","sig":null,"attributes":[{"value":"/ Enable case sensitive headers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303267,"byte_end":10303301,"line_start":652,"line_end":652,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303685,"byte_end":10303697,"line_start":661,"line_end":661,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<ClientBuilder>::http1_writev","value":"pub fn http1_writev(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Force hyper to use either queued(if true), or flattened(if false) write strategy\n This may eliminate unnecessary cloning of buffers for some TLS backends\n By default hyper will try to guess which strategy to use\n","sig":null,"attributes":[{"value":"/ Force hyper to use either queued(if true), or flattened(if false) write strategy","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303444,"byte_end":10303528,"line_start":658,"line_end":658,"column_start":5,"column_end":89}},{"value":"/ This may eliminate unnecessary cloning of buffers for some TLS backends","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303533,"byte_end":10303608,"line_start":659,"line_end":659,"column_start":5,"column_end":80}},{"value":"/ By default hyper will try to guess which strategy to use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303613,"byte_end":10303673,"line_start":660,"line_end":660,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303846,"byte_end":10303867,"line_start":667,"line_end":667,"column_start":12,"column_end":33},"name":"http2_prior_knowledge","qualname":"<ClientBuilder>::http2_prior_knowledge","value":"pub fn http2_prior_knowledge(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/2.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/2.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303814,"byte_end":10303834,"line_start":666,"line_end":666,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304158,"byte_end":10304190,"line_start":675,"line_end":675,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<ClientBuilder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                   impl Into<Option<u32>>)\n-> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10303960,"byte_end":10304047,"line_start":672,"line_end":672,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304052,"byte_end":10304055,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304060,"byte_end":10304146,"line_start":674,"line_end":674,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304505,"byte_end":10304541,"line_start":683,"line_end":683,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<ClientBuilder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                       impl Into<Option<u32>>)\n-> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304338,"byte_end":10304394,"line_start":680,"line_end":680,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304399,"byte_end":10304402,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304407,"byte_end":10304493,"line_start":682,"line_end":682,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304855,"byte_end":10304866,"line_start":695,"line_end":695,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<ClientBuilder>::tcp_nodelay","value":"pub fn tcp_nodelay(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"tcp_nodelay is enabled by default, use `tcp_nodelay_` to disable\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304755,"byte_end":10304843,"line_start":694,"line_end":694,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305297,"byte_end":10305309,"line_start":708,"line_end":708,"column_start":12,"column_end":24},"name":"tcp_nodelay_","qualname":"<ClientBuilder>::tcp_nodelay_","value":"pub fn tcp_nodelay_(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether sockets have `SO_NODELAY` enabled.","sig":null,"attributes":[{"value":"/ Set whether sockets have `SO_NODELAY` enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304935,"byte_end":10304985,"line_start":699,"line_end":699,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304990,"byte_end":10304993,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10304998,"byte_end":10305020,"line_start":701,"line_end":701,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305720,"byte_end":10305733,"line_start":724,"line_end":724,"column_start":12,"column_end":25},"name":"local_address","qualname":"<ClientBuilder>::local_address","value":"pub fn local_address<T>(Self, T) -> ClientBuilder where\nT: Into<Option<IpAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Bind to a local IP Address.","sig":null,"attributes":[{"value":"/ Bind to a local IP Address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305417,"byte_end":10305448,"line_start":713,"line_end":713,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305453,"byte_end":10305456,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305461,"byte_end":10305474,"line_start":715,"line_end":715,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305479,"byte_end":10305482,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305487,"byte_end":10305494,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305499,"byte_end":10305524,"line_start":718,"line_end":718,"column_start":5,"column_end":30}},{"value":"/ let local_addr = IpAddr::from([12, 4, 1, 8]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305529,"byte_end":10305578,"line_start":719,"line_end":719,"column_start":5,"column_end":54}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305583,"byte_end":10305626,"line_start":720,"line_end":720,"column_start":5,"column_end":48}},{"value":"/     .local_address(local_addr)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305631,"byte_end":10305665,"line_start":721,"line_end":721,"column_start":5,"column_end":39}},{"value":"/     .build().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305670,"byte_end":10305696,"line_start":722,"line_end":722,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305701,"byte_end":10305708,"line_start":723,"line_end":723,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306038,"byte_end":10306051,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<ClientBuilder>::tcp_keepalive","value":"pub fn tcp_keepalive<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305895,"byte_end":10305971,"line_start":732,"line_end":732,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305976,"byte_end":10305979,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10305984,"byte_end":10306026,"line_start":734,"line_end":734,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306581,"byte_end":10306601,"line_start":755,"line_end":755,"column_start":12,"column_end":32},"name":"add_root_certificate","qualname":"<ClientBuilder>::add_root_certificate","value":"pub fn add_root_certificate(Self, Certificate) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a custom root certificate.","sig":null,"attributes":[{"value":"/ Add a custom root certificate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306241,"byte_end":10306275,"line_start":745,"line_end":745,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306280,"byte_end":10306283,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This can be used to connect to a server that has a self-signed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306288,"byte_end":10306354,"line_start":747,"line_end":747,"column_start":5,"column_end":71}},{"value":"/ certificate for example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306359,"byte_end":10306387,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306392,"byte_end":10306395,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306400,"byte_end":10306414,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306419,"byte_end":10306422,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306427,"byte_end":10306508,"line_start":752,"line_end":752,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306513,"byte_end":10306539,"line_start":753,"line_end":753,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306544,"byte_end":10306569,"line_start":754,"line_end":754,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306966,"byte_end":10306974,"line_start":767,"line_end":767,"column_start":12,"column_end":20},"name":"identity","qualname":"<ClientBuilder>::identity","value":"pub fn identity(Self, Identity) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the identity to be used for client certificate authentication.","sig":null,"attributes":[{"value":"/ Sets the identity to be used for client certificate authentication.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306717,"byte_end":10306788,"line_start":760,"line_end":760,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306793,"byte_end":10306796,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306801,"byte_end":10306815,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306820,"byte_end":10306823,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `native-tls` or `rustls-tls(-...)` feature to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306828,"byte_end":10306907,"line_start":764,"line_end":764,"column_start":5,"column_end":84}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306912,"byte_end":10306924,"line_start":765,"line_end":765,"column_start":5,"column_end":17}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10306929,"byte_end":10306954,"line_start":766,"line_end":766,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308481,"byte_end":10308508,"line_start":812,"line_end":812,"column_start":12,"column_end":39},"name":"danger_accept_invalid_certs","qualname":"<ClientBuilder>::danger_accept_invalid_certs","value":"pub fn danger_accept_invalid_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of certificate validation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307853,"byte_end":10307900,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307905,"byte_end":10307908,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307913,"byte_end":10307937,"line_start":797,"line_end":797,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307942,"byte_end":10307945,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307950,"byte_end":10307963,"line_start":799,"line_end":799,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307968,"byte_end":10307971,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ You should think very carefully before using this method. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10307976,"byte_end":10308040,"line_start":801,"line_end":801,"column_start":5,"column_end":69}},{"value":"/ invalid certificates are trusted, *any* certificate for *any* site","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308045,"byte_end":10308115,"line_start":802,"line_end":802,"column_start":5,"column_end":75}},{"value":"/ will be trusted for use. This includes expired certificates. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308120,"byte_end":10308189,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ introduces significant vulnerabilities, and should only be used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308194,"byte_end":10308261,"line_start":804,"line_end":804,"column_start":5,"column_end":72}},{"value":"/ as a last resort.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308266,"byte_end":10308287,"line_start":805,"line_end":805,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308292,"byte_end":10308295,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308300,"byte_end":10308314,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308319,"byte_end":10308322,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308327,"byte_end":10308408,"line_start":809,"line_end":809,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308413,"byte_end":10308439,"line_start":810,"line_end":810,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10308444,"byte_end":10308469,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309467,"byte_end":10309481,"line_start":840,"line_end":840,"column_start":12,"column_end":26},"name":"use_rustls_tls","qualname":"<ClientBuilder>::use_rustls_tls","value":"pub fn use_rustls_tls(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Force using the Rustls TLS backend.","sig":null,"attributes":[{"value":"/ Force using the Rustls TLS backend.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309118,"byte_end":10309157,"line_start":831,"line_end":831,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309162,"byte_end":10309165,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Since multiple TLS backends can be optionally enabled, this option will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309170,"byte_end":10309245,"line_start":833,"line_end":833,"column_start":5,"column_end":80}},{"value":"/ force the `rustls` backend to be used for this `Client`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309250,"byte_end":10309310,"line_start":834,"line_end":834,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309315,"byte_end":10309318,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309323,"byte_end":10309337,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309342,"byte_end":10309345,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `rustls-tls(-...)` feature to be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309350,"byte_end":10309422,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"__rustls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309427,"byte_end":10309455,"line_start":839,"line_end":839,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310396,"byte_end":10310417,"line_start":867,"line_end":867,"column_start":12,"column_end":33},"name":"use_preconfigured_tls","qualname":"<ClientBuilder>::use_preconfigured_tls","value":"pub fn use_preconfigured_tls<impl Any: Any>(Self, impl Any) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use a preconfigured TLS backend.","sig":null,"attributes":[{"value":"/ Use a preconfigured TLS backend.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309581,"byte_end":10309617,"line_start":845,"line_end":845,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309622,"byte_end":10309625,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ If the passed `Any` argument is not a TLS backend that reqwest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309630,"byte_end":10309696,"line_start":847,"line_end":847,"column_start":5,"column_end":71}},{"value":"/ understands, the `ClientBuilder` will error when calling `build`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309701,"byte_end":10309770,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309775,"byte_end":10309778,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Advanced","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309783,"byte_end":10309797,"line_start":850,"line_end":850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309802,"byte_end":10309805,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This is an advanced option, and can be somewhat brittle. Usage requires","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309810,"byte_end":10309885,"line_start":852,"line_end":852,"column_start":5,"column_end":80}},{"value":"/ keeping the preconfigured TLS argument version in sync with reqwest,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309890,"byte_end":10309962,"line_start":853,"line_end":853,"column_start":5,"column_end":77}},{"value":"/ since version mismatches will result in an \"unknown\" TLS backend.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10309967,"byte_end":10310036,"line_start":854,"line_end":854,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310041,"byte_end":10310044,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ If possible, it's preferable to use the methods on `ClientBuilder`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310049,"byte_end":10310119,"line_start":856,"line_end":856,"column_start":5,"column_end":75}},{"value":"/ to configure reqwest's TLS.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310124,"byte_end":10310155,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310160,"byte_end":10310163,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310168,"byte_end":10310182,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310187,"byte_end":10310190,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This requires one of the optional features `native-tls` or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310195,"byte_end":10310257,"line_start":861,"line_end":861,"column_start":5,"column_end":67}},{"value":"/ `rustls-tls(-...)` to be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310262,"byte_end":10310299,"line_start":862,"line_end":862,"column_start":5,"column_end":42}},{"value":"cfg(any(feature = \"native-tls\", feature = \"__rustls\",))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10310304,"byte_end":10310384,"line_start":863,"line_end":866,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312219,"byte_end":10312231,"line_start":912,"line_end":912,"column_start":12,"column_end":24},"name":"no_trust_dns","qualname":"<ClientBuilder>::no_trust_dns","value":"pub fn no_trust_dns(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disables the trust-dns async resolver.","sig":null,"attributes":[{"value":"/ Disables the trust-dns async resolver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10311902,"byte_end":10311944,"line_start":907,"line_end":907,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10311949,"byte_end":10311952,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `trust-dns` feature is not enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10311957,"byte_end":10312036,"line_start":909,"line_end":909,"column_start":5,"column_end":84}},{"value":"/ This can be used to ensure a `Client` doesn't use the trust-dns async resolver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312041,"byte_end":10312123,"line_start":910,"line_end":910,"column_start":5,"column_end":87}},{"value":"/ even if another dependency were to enable the optional `trust-dns` feature.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312128,"byte_end":10312207,"line_start":911,"line_end":911,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312549,"byte_end":10312559,"line_start":927,"line_end":927,"column_start":12,"column_end":22},"name":"https_only","qualname":"<ClientBuilder>::https_only","value":"pub fn https_only(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Restrict the Client to be used with HTTPS only requests.\n \n Defaults to false.\n","sig":null,"attributes":[{"value":"/ Restrict the Client to be used with HTTPS only requests.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312441,"byte_end":10312501,"line_start":924,"line_end":924,"column_start":5,"column_end":65}},{"value":"/ ","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312506,"byte_end":10312510,"line_start":925,"line_end":925,"column_start":5,"column_end":9}},{"value":"/ Defaults to false.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312515,"byte_end":10312537,"line_start":926,"line_end":926,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313156,"byte_end":10313159,"line_start":951,"line_end":951,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"pub fn new() -> Client","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Client`.","sig":null,"attributes":[{"value":"/ Constructs a new `Client`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312839,"byte_end":10312869,"line_start":942,"line_end":942,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312874,"byte_end":10312877,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312882,"byte_end":10312894,"line_start":944,"line_end":944,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312899,"byte_end":10312902,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This method panics if TLS backend cannot initialized, or the resolver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312907,"byte_end":10312980,"line_start":946,"line_end":946,"column_start":5,"column_end":78}},{"value":"/ cannot load the system configuration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312985,"byte_end":10313026,"line_start":947,"line_end":947,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313031,"byte_end":10313034,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Use `Client::builder()` if you wish to handle the failure as an `Error`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313039,"byte_end":10313114,"line_start":949,"line_end":949,"column_start":5,"column_end":80}},{"value":"/ instead of panicking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313119,"byte_end":10313144,"line_start":950,"line_end":950,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313372,"byte_end":10313379,"line_start":958,"line_end":958,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client>::builder","value":"pub fn builder() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ClientBuilder` to configure a `Client`.","sig":null,"attributes":[{"value":"/ Creates a `ClientBuilder` to configure a `Client`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313246,"byte_end":10313300,"line_start":955,"line_end":955,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313305,"byte_end":10313308,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ This is the same as `ClientBuilder::new()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313313,"byte_end":10313360,"line_start":957,"line_end":957,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313610,"byte_end":10313613,"line_start":967,"line_end":967,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"pub fn get<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `GET` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `GET` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313441,"byte_end":10313497,"line_start":962,"line_end":962,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313502,"byte_end":10313505,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313510,"byte_end":10313522,"line_start":964,"line_end":964,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313527,"byte_end":10313530,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313535,"byte_end":10313598,"line_start":966,"line_end":966,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313881,"byte_end":10313885,"line_start":976,"line_end":976,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"pub fn post<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `POST` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `POST` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313711,"byte_end":10313768,"line_start":971,"line_end":971,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313773,"byte_end":10313776,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313781,"byte_end":10313793,"line_start":973,"line_end":973,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313798,"byte_end":10313801,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313806,"byte_end":10313869,"line_start":975,"line_end":975,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314153,"byte_end":10314156,"line_start":985,"line_end":985,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"pub fn put<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PUT` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PUT` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10313984,"byte_end":10314040,"line_start":980,"line_end":980,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314045,"byte_end":10314048,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314053,"byte_end":10314065,"line_start":982,"line_end":982,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314070,"byte_end":10314073,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314078,"byte_end":10314141,"line_start":984,"line_end":984,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314425,"byte_end":10314430,"line_start":994,"line_end":994,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"pub fn patch<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PATCH` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PATCH` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314254,"byte_end":10314312,"line_start":989,"line_end":989,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314317,"byte_end":10314320,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314325,"byte_end":10314337,"line_start":991,"line_end":991,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314342,"byte_end":10314345,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314350,"byte_end":10314413,"line_start":993,"line_end":993,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314702,"byte_end":10314708,"line_start":1003,"line_end":1003,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"pub fn delete<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `DELETE` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `DELETE` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314530,"byte_end":10314589,"line_start":998,"line_end":998,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314594,"byte_end":10314597,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314602,"byte_end":10314614,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314619,"byte_end":10314622,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314627,"byte_end":10314690,"line_start":1002,"line_end":1002,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314979,"byte_end":10314983,"line_start":1012,"line_end":1012,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"pub fn head<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `HEAD` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `HEAD` request to a URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314809,"byte_end":10314866,"line_start":1007,"line_end":1007,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314871,"byte_end":10314874,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314879,"byte_end":10314891,"line_start":1009,"line_end":1009,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314896,"byte_end":10314899,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10314904,"byte_end":10314967,"line_start":1011,"line_end":1011,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315372,"byte_end":10315379,"line_start":1024,"line_end":1024,"column_start":12,"column_end":19},"name":"request","qualname":"<Client>::request","value":"pub fn request<U: IntoUrl>(&Self, Method, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Start building a `Request` with the `Method` and `Url`.","sig":null,"attributes":[{"value":"/ Start building a `Request` with the `Method` and `Url`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315082,"byte_end":10315141,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315146,"byte_end":10315149,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns a `RequestBuilder`, which will allow setting headers and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315154,"byte_end":10315222,"line_start":1018,"line_end":1018,"column_start":5,"column_end":73}},{"value":"/ request body before sending.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315227,"byte_end":10315259,"line_start":1019,"line_end":1019,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315264,"byte_end":10315267,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315272,"byte_end":10315284,"line_start":1021,"line_end":1021,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315289,"byte_end":10315292,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315297,"byte_end":10315360,"line_start":1023,"line_end":1023,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10316032,"byte_end":10316039,"line_start":1041,"line_end":1041,"column_start":12,"column_end":19},"name":"execute","qualname":"<Client>::execute","value":"pub fn execute(&Self, Request) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes a `Request`.","sig":null,"attributes":[{"value":"/ Executes a `Request`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315577,"byte_end":10315602,"line_start":1029,"line_end":1029,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315607,"byte_end":10315610,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ A `Request` can be built manually with `Request::new()` or obtained","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315615,"byte_end":10315686,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/ from a RequestBuilder with `RequestBuilder::build()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315691,"byte_end":10315748,"line_start":1032,"line_end":1032,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315753,"byte_end":10315756,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ You should prefer to use the `RequestBuilder` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315761,"byte_end":10315814,"line_start":1034,"line_end":1034,"column_start":5,"column_end":58}},{"value":"/ `RequestBuilder::send()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315819,"byte_end":10315848,"line_start":1035,"line_end":1035,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315853,"byte_end":10315856,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315861,"byte_end":10315873,"line_start":1037,"line_end":1037,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315878,"byte_end":10315881,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315886,"byte_end":10315952,"line_start":1039,"line_end":1039,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10315957,"byte_end":10316020,"line_start":1040,"line_end":1040,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multipart","qualname":"::async_impl::multipart","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":614},{"krate":0,"index":619}],"decl_id":null,"docs":" multipart/form-data\n","sig":null,"attributes":[{"value":"/ multipart/form-data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10344581,"byte_end":10344604,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10344926,"byte_end":10344930,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Form","qualname":"::async_impl::multipart::Form","value":"Form {  }","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" An async multipart/form-data request.\n","sig":null,"attributes":[{"value":"/ An async multipart/form-data request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10344873,"byte_end":10344914,"line_start":16,"line_end":16,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345008,"byte_end":10345012,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Part","qualname":"::async_impl::multipart::Part","value":"Part {  }","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" A field in a multipart form.\n","sig":null,"attributes":[{"value":"/ A field in a multipart form.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10344964,"byte_end":10344996,"line_start":21,"line_end":21,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345740,"byte_end":10345743,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Form>::new","value":"pub fn new() -> Form","parent":null,"children":[],"decl_id":null,"docs":" Creates a new async Form without any content.\n","sig":null,"attributes":[{"value":"/ Creates a new async Form without any content.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345679,"byte_end":10345728,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345900,"byte_end":10345908,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"boundary","qualname":"<Form>::boundary","value":"pub fn boundary(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the boundary that this form will use.\n","sig":null,"attributes":[{"value":"/ Get the boundary that this form will use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345829,"byte_end":10345874,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345879,"byte_end":10345888,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346225,"byte_end":10346229,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"text","qualname":"<Form>::text","value":"pub fn text<T, U>(Self, T, U) -> Form where T: Into<Cow>, U: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Add a data field with supplied name and value.","sig":null,"attributes":[{"value":"/ Add a data field with supplied name and value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345967,"byte_end":10346017,"line_start":68,"line_end":68,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346022,"byte_end":10346025,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346030,"byte_end":10346044,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346049,"byte_end":10346052,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346057,"byte_end":10346064,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ let form = reqwest::multipart::Form::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346069,"byte_end":10346115,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/     .text(\"username\", \"seanmonstar\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346120,"byte_end":10346160,"line_start":74,"line_end":74,"column_start":5,"column_end":45}},{"value":"/     .text(\"password\", \"secret\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346165,"byte_end":10346201,"line_start":75,"line_end":75,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346206,"byte_end":10346213,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346450,"byte_end":10346454,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"part","qualname":"<Form>::part","value":"pub fn part<T>(Self, T, Part) -> Form where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Adds a customized Part.\n","sig":null,"attributes":[{"value":"/ Adds a customized Part.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346411,"byte_end":10346438,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346704,"byte_end":10346731,"line_start":94,"line_end":94,"column_start":12,"column_end":39},"name":"percent_encode_path_segment","qualname":"<Form>::percent_encode_path_segment","value":"pub fn percent_encode_path_segment(Self) -> Form","parent":null,"children":[],"decl_id":null,"docs":" Configure this `Form` to percent-encode using the `path-segment` rules.\n","sig":null,"attributes":[{"value":"/ Configure this `Form` to percent-encode using the `path-segment` rules.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346617,"byte_end":10346692,"line_start":93,"line_end":93,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346912,"byte_end":10346937,"line_start":99,"line_end":99,"column_start":12,"column_end":37},"name":"percent_encode_attr_chars","qualname":"<Form>::percent_encode_attr_chars","value":"pub fn percent_encode_attr_chars(Self) -> Form","parent":null,"children":[],"decl_id":null,"docs":" Configure this `Form` to percent-encode using the `attr-char` rules.\n","sig":null,"attributes":[{"value":"/ Configure this `Form` to percent-encode using the `attr-char` rules.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10346828,"byte_end":10346900,"line_start":98,"line_end":98,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10347094,"byte_end":10347113,"line_start":104,"line_end":104,"column_start":12,"column_end":31},"name":"percent_encode_noop","qualname":"<Form>::percent_encode_noop","value":"pub fn percent_encode_noop(Self) -> Form","parent":null,"children":[],"decl_id":null,"docs":" Configure this `Form` to skip percent-encoding\n","sig":null,"attributes":[{"value":"/ Configure this `Form` to skip percent-encoding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10347032,"byte_end":10347082,"line_start":103,"line_end":103,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349731,"byte_end":10349735,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"text","qualname":"<Part>::text","value":"pub fn text<T>(T) -> Part where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Makes a text parameter.\n","sig":null,"attributes":[{"value":"/ Makes a text parameter.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349692,"byte_end":10349719,"line_start":185,"line_end":185,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350069,"byte_end":10350074,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Part>::bytes","value":"pub fn bytes<T>(T) -> Part where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new parameter from arbitrary bytes.\n","sig":null,"attributes":[{"value":"/ Makes a new parameter from arbitrary bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350010,"byte_end":10350057,"line_start":197,"line_end":197,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350407,"byte_end":10350413,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"stream","qualname":"<Part>::stream","value":"pub fn stream<T: Into<Body>>(T) -> Part","parent":null,"children":[],"decl_id":null,"docs":" Makes a new parameter from an arbitrary stream.\n","sig":null,"attributes":[{"value":"/ Makes a new parameter from an arbitrary stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350344,"byte_end":10350395,"line_start":209,"line_end":209,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350729,"byte_end":10350747,"line_start":217,"line_end":217,"column_start":12,"column_end":30},"name":"stream_with_length","qualname":"<Part>::stream_with_length","value":"pub fn stream_with_length<T: Into<Body>>(T, u64) -> Part","parent":null,"children":[],"decl_id":null,"docs":" Makes a new parameter from an arbitrary stream with a known length. This is particularly\n useful when adding something like file contents as a stream, where you can know the content\n length beforehand.\n","sig":null,"attributes":[{"value":"/ Makes a new parameter from an arbitrary stream with a known length. This is particularly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350498,"byte_end":10350590,"line_start":214,"line_end":214,"column_start":5,"column_end":97}},{"value":"/ useful when adding something like file contents as a stream, where you can know the content","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350595,"byte_end":10350690,"line_start":215,"line_end":215,"column_start":5,"column_end":100}},{"value":"/ length beforehand.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10350695,"byte_end":10350717,"line_start":216,"line_end":216,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351079,"byte_end":10351087,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"mime_str","qualname":"<Part>::mime_str","value":"pub fn mime_str(Self, &str) -> crate::Result<Part>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the mime of this part.\n","sig":null,"attributes":[{"value":"/ Tries to set the mime of this part.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351028,"byte_end":10351067,"line_start":229,"line_end":229,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351439,"byte_end":10351448,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Part>::file_name","value":"pub fn file_name<T>(Self, T) -> Part where T: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Sets the filename, builder style.\n","sig":null,"attributes":[{"value":"/ Sets the filename, builder style.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351390,"byte_end":10351427,"line_start":239,"line_end":239,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10365940,"byte_end":10365947,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"Request","qualname":"::async_impl::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":" A request which can be executed with `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ A request which can be executed with `Client::execute()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10365867,"byte_end":10365928,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366277,"byte_end":10366291,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"RequestBuilder","qualname":"::async_impl::request::RequestBuilder","value":"RequestBuilder {  }","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"decl_id":null,"docs":" A builder to construct the properties of a `Request`.","sig":null,"attributes":[{"value":"/ A builder to construct the properties of a `Request`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366066,"byte_end":10366123,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366124,"byte_end":10366127,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ To construct a `RequestBuilder`, refer to the `Client` documentation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366128,"byte_end":10366201,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"must_use = \"RequestBuilder does nothing until you 'send' it\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366202,"byte_end":10366265,"line_start":32,"line_end":32,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366428,"byte_end":10366431,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new(Method, Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new request.\n","sig":null,"attributes":[{"value":"/ Constructs a new request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366373,"byte_end":10366402,"line_start":39,"line_end":39,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366407,"byte_end":10366416,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366678,"byte_end":10366684,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"pub fn method(&Self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Get the method.\n","sig":null,"attributes":[{"value":"/ Get the method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366633,"byte_end":10366652,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366657,"byte_end":10366666,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366805,"byte_end":10366815,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"method_mut","qualname":"<Request>::method_mut","value":"pub fn method_mut(&mut Self) -> &mut Method","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the method.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366737,"byte_end":10366779,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366784,"byte_end":10366793,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366922,"byte_end":10366925,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the url.\n","sig":null,"attributes":[{"value":"/ Get the url.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366880,"byte_end":10366896,"line_start":63,"line_end":63,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366901,"byte_end":10366910,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367037,"byte_end":10367044,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Request>::url_mut","value":"pub fn url_mut(&mut Self) -> &mut Url","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the url.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the url.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366972,"byte_end":10367011,"line_start":69,"line_end":69,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367016,"byte_end":10367025,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367149,"byte_end":10367156,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the headers.\n","sig":null,"attributes":[{"value":"/ Get the headers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367103,"byte_end":10367123,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367128,"byte_end":10367137,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367282,"byte_end":10367293,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the headers.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the headers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367213,"byte_end":10367256,"line_start":81,"line_end":81,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367261,"byte_end":10367270,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367405,"byte_end":10367409,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"body","qualname":"<Request>::body","value":"pub fn body(&Self) -> Option<&Body>","parent":null,"children":[],"decl_id":null,"docs":" Get the body.\n","sig":null,"attributes":[{"value":"/ Get the body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367362,"byte_end":10367379,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367384,"byte_end":10367393,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367540,"byte_end":10367548,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"body_mut","qualname":"<Request>::body_mut","value":"pub fn body_mut(&mut Self) -> &mut Option<Body>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the body.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367474,"byte_end":10367514,"line_start":93,"line_end":93,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367519,"byte_end":10367528,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367663,"byte_end":10367670,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request>::timeout","value":"pub fn timeout(&Self) -> Option<&Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the timeout.\n","sig":null,"attributes":[{"value":"/ Get the timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367617,"byte_end":10367637,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367642,"byte_end":10367651,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367811,"byte_end":10367822,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"timeout_mut","qualname":"<Request>::timeout_mut","value":"pub fn timeout_mut(&mut Self) -> &mut Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the timeout.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367742,"byte_end":10367785,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367790,"byte_end":10367799,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10368042,"byte_end":10368051,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Request>::try_clone","value":"pub fn try_clone(&Self) -> Option<Request>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the request.","sig":null,"attributes":[{"value":"/ Attempt to clone the request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367898,"byte_end":10367931,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367936,"byte_end":10367939,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the request can not be cloned, i.e. if the body is a stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10367944,"byte_end":10368030,"line_start":113,"line_end":113,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10369161,"byte_end":10369167,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"header","qualname":"<RequestBuilder>::header","value":"pub fn header<K, V>(Self, K, V) -> RequestBuilder where\nHeaderName: TryFrom<K>, <HeaderName as TryFrom<K>>::Error: Into<http::Error>,\nHeaderValue: TryFrom<V>, <HeaderValue as TryFrom<V>>::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a `Header` to this Request.\n","sig":null,"attributes":[{"value":"/ Add a `Header` to this Request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10369114,"byte_end":10369149,"line_start":148,"line_end":148,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370709,"byte_end":10370716,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"headers","qualname":"<RequestBuilder>::headers","value":"pub fn headers(Self, crate::header::HeaderMap) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a set of Headers to the existing ones on this Request.","sig":null,"attributes":[{"value":"/ Add a set of Headers to the existing ones on this Request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370569,"byte_end":10370631,"line_start":186,"line_end":186,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370636,"byte_end":10370639,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The headers will be merged in to any already set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370644,"byte_end":10370697,"line_start":188,"line_end":188,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370983,"byte_end":10370993,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<RequestBuilder>::basic_auth","value":"pub fn basic_auth<U, P>(Self, U, Option<P>) -> RequestBuilder where\nU: fmt::Display, P: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP basic authentication.\n","sig":null,"attributes":[{"value":"/ Enable HTTP basic authentication.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10370934,"byte_end":10370971,"line_start":196,"line_end":196,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10371674,"byte_end":10371685,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"bearer_auth","qualname":"<RequestBuilder>::bearer_auth","value":"pub fn bearer_auth<T>(Self, T) -> RequestBuilder where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP bearer authentication.\n","sig":null,"attributes":[{"value":"/ Enable HTTP bearer authentication.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10371624,"byte_end":10371662,"line_start":215,"line_end":215,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10371948,"byte_end":10371952,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"body","qualname":"<RequestBuilder>::body","value":"pub fn body<T: Into<Body>>(Self, T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the request body.\n","sig":null,"attributes":[{"value":"/ Set the request body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10371911,"byte_end":10371936,"line_start":224,"line_end":224,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372413,"byte_end":10372420,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RequestBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372138,"byte_end":10372168,"line_start":232,"line_end":232,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372173,"byte_end":10372176,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372181,"byte_end":10372257,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ response body has finished. It affects only this request and overrides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372262,"byte_end":10372336,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ the timeout configured using `ClientBuilder::timeout()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372341,"byte_end":10372401,"line_start":236,"line_end":236,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373098,"byte_end":10373107,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"multipart","qualname":"<RequestBuilder>::multipart","value":"pub fn multipart(Self, multipart::Form) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sends a multipart/form-data body.","sig":null,"attributes":[{"value":"/ Sends a multipart/form-data body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372600,"byte_end":10372637,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372642,"byte_end":10372645,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372650,"byte_end":10372657,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372662,"byte_end":10372687,"line_start":247,"line_end":247,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372692,"byte_end":10372695,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372700,"byte_end":10372743,"line_start":249,"line_end":249,"column_start":5,"column_end":48}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372748,"byte_end":10372788,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ let form = reqwest::multipart::Form::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372793,"byte_end":10372839,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/     .text(\"key3\", \"value3\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372844,"byte_end":10372875,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/     .text(\"key4\", \"value4\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372880,"byte_end":10372912,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372917,"byte_end":10372920,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372925,"byte_end":10372928,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let response = client.post(\"your url\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372933,"byte_end":10372975,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/     .multipart(form)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10372980,"byte_end":10373004,"line_start":257,"line_end":257,"column_start":5,"column_end":29}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373009,"byte_end":10373024,"line_start":258,"line_end":258,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373029,"byte_end":10373045,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373050,"byte_end":10373062,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373067,"byte_end":10373074,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373079,"byte_end":10373086,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374526,"byte_end":10374531,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"query","qualname":"<RequestBuilder>::query","value":"pub fn query<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Modify the query string of the URL.","sig":null,"attributes":[{"value":"/ Modify the query string of the URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373636,"byte_end":10373675,"line_start":280,"line_end":280,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373680,"byte_end":10373683,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Modifies the URL of this request, adding the parameters provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373688,"byte_end":10373757,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/ This method appends and does not overwrite. This means that it can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373762,"byte_end":10373832,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ be called multiple times and that existing query parameters are not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373837,"byte_end":10373908,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ overwritten if the same key is used. The key will simply show up","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373913,"byte_end":10373981,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/ twice in the query string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10373986,"byte_end":10374016,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ Calling `.query([(\"foo\", \"a\"), (\"foo\", \"b\")])` gives `\"foo=a&foo=b\"`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374021,"byte_end":10374094,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374099,"byte_end":10374102,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374107,"byte_end":10374117,"line_start":289,"line_end":289,"column_start":5,"column_end":15}},{"value":"/ This method does not support serializing a single key-value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374122,"byte_end":10374185,"line_start":290,"line_end":290,"column_start":5,"column_end":68}},{"value":"/ pair. Instead of using `.query((\"key\", \"val\"))`, use a sequence, such","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374190,"byte_end":10374263,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ as `.query(&[(\"key\", \"val\")])`. It's also possible to serialize structs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374268,"byte_end":10374343,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ and maps into a key-value pair.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374348,"byte_end":10374383,"line_start":293,"line_end":293,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374388,"byte_end":10374391,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374396,"byte_end":10374408,"line_start":295,"line_end":295,"column_start":5,"column_end":17}},{"value":"/ This method will fail if the object you provide cannot be serialized","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374413,"byte_end":10374485,"line_start":296,"line_end":296,"column_start":5,"column_end":77}},{"value":"/ into a query string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10374490,"byte_end":10374514,"line_start":297,"line_end":297,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10375289,"byte_end":10375293,"line_start":321,"line_end":321,"column_start":12,"column_end":16},"name":"form","qualname":"<RequestBuilder>::form","value":"pub fn form<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a form body.\n","sig":null,"attributes":[{"value":"/ Send a form body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10375256,"byte_end":10375277,"line_start":320,"line_end":320,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376319,"byte_end":10376323,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"json","qualname":"<RequestBuilder>::json","value":"pub fn json<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a JSON body.","sig":null,"attributes":[{"value":"/ Send a JSON body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10375988,"byte_end":10376009,"line_start":341,"line_end":341,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376014,"byte_end":10376017,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376022,"byte_end":10376036,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376041,"byte_end":10376044,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376049,"byte_end":10376103,"line_start":345,"line_end":345,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376108,"byte_end":10376111,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376116,"byte_end":10376128,"line_start":347,"line_end":347,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376133,"byte_end":10376136,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376141,"byte_end":10376217,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376222,"byte_end":10376278,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"json\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376283,"byte_end":10376307,"line_start":351,"line_end":351,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377244,"byte_end":10377262,"line_start":379,"line_end":379,"column_start":12,"column_end":30},"name":"fetch_mode_no_cors","qualname":"<RequestBuilder>::fetch_mode_no_cors","value":"pub fn fetch_mode_no_cors(Self) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable CORS on fetching the request.","sig":null,"attributes":[{"value":"/ Disable CORS on fetching the request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376946,"byte_end":10376987,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10376992,"byte_end":10376995,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # WASM","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377000,"byte_end":10377010,"line_start":372,"line_end":372,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377015,"byte_end":10377018,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This option is only effective with WebAssembly target.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377023,"byte_end":10377081,"line_start":374,"line_end":374,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377086,"byte_end":10377089,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The [request mode][mdn] will be set to 'no-cors'.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377094,"byte_end":10377147,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377152,"byte_end":10377155,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/Request/mode","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377160,"byte_end":10377232,"line_start":378,"line_end":378,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377427,"byte_end":10377432,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"build","qualname":"<RequestBuilder>::build","value":"pub fn build(Self) -> crate::Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Request`, which can be inspected, modified and executed with\n `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ Build a `Request`, which can be inspected, modified and executed with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377313,"byte_end":10377386,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ `Client::execute()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377391,"byte_end":10377415,"line_start":384,"line_end":384,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378083,"byte_end":10378087,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"send","qualname":"<RequestBuilder>::send","value":"pub fn send(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Constructs the Request and sends it to the target URL, returning a\n future Response.","sig":null,"attributes":[{"value":"/ Constructs the Request and sends it to the target URL, returning a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377499,"byte_end":10377569,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ future Response.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377574,"byte_end":10377594,"line_start":390,"line_end":390,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377599,"byte_end":10377602,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377607,"byte_end":10377619,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377624,"byte_end":10377627,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377632,"byte_end":10377698,"line_start":394,"line_end":394,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377703,"byte_end":10377766,"line_start":395,"line_end":395,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377771,"byte_end":10377774,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377779,"byte_end":10377792,"line_start":397,"line_end":397,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377797,"byte_end":10377800,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377805,"byte_end":10377818,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377823,"byte_end":10377848,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377853,"byte_end":10377858,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377863,"byte_end":10377906,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ let response = reqwest::Client::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377911,"byte_end":10377952,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/     .get(\"https://hyper.rs\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377957,"byte_end":10377989,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/     .send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10377994,"byte_end":10378009,"line_start":405,"line_end":405,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378014,"byte_end":10378030,"line_start":406,"line_end":406,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378035,"byte_end":10378047,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378052,"byte_end":10378059,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378064,"byte_end":10378071,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378866,"byte_end":10378875,"line_start":436,"line_end":436,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<RequestBuilder>::try_clone","value":"pub fn try_clone(&Self) -> Option<RequestBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the RequestBuilder.","sig":null,"attributes":[{"value":"/ Attempt to clone the RequestBuilder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378306,"byte_end":10378346,"line_start":417,"line_end":417,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378351,"byte_end":10378354,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the RequestBuilder can not be cloned,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378359,"byte_end":10378422,"line_start":419,"line_end":419,"column_start":5,"column_end":68}},{"value":"/ i.e. if the request body is a stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378427,"byte_end":10378468,"line_start":420,"line_end":420,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378473,"byte_end":10378476,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378481,"byte_end":10378495,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378500,"byte_end":10378503,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378508,"byte_end":10378515,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378520,"byte_end":10378545,"line_start":425,"line_end":425,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378550,"byte_end":10378555,"line_start":426,"line_end":426,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378560,"byte_end":10378597,"line_start":427,"line_end":427,"column_start":5,"column_end":42}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378602,"byte_end":10378642,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ let builder = client.post(\"http://httpbin.org/post\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378647,"byte_end":10378703,"line_start":429,"line_end":429,"column_start":5,"column_end":61}},{"value":"/     .body(\"from a &str!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378708,"byte_end":10378738,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378743,"byte_end":10378779,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_some());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378784,"byte_end":10378813,"line_start":432,"line_end":432,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378818,"byte_end":10378830,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378835,"byte_end":10378842,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10378847,"byte_end":10378854,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10394683,"byte_end":10394691,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Response","qualname":"::async_impl::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":" A Response to a submitted `Request`.\n","sig":null,"attributes":[{"value":"/ A Response to a submitted `Request`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10394631,"byte_end":10394671,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395670,"byte_end":10395676,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the `StatusCode` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `StatusCode` of this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395600,"byte_end":10395644,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395649,"byte_end":10395658,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395803,"byte_end":10395810,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"version","qualname":"<Response>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP `Version` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP `Version` of this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395731,"byte_end":10395777,"line_start":66,"line_end":66,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395782,"byte_end":10395791,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395930,"byte_end":10395937,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `Headers` of this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395863,"byte_end":10395904,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395909,"byte_end":10395918,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396084,"byte_end":10396095,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` of this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10395994,"byte_end":10396058,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396063,"byte_end":10396072,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396459,"byte_end":10396473,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"content_length","qualname":"<Response>::content_length","value":"pub fn content_length(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the content-length of this response, if known.","sig":null,"attributes":[{"value":"/ Get the content-length of this response, if known.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396164,"byte_end":10396218,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396223,"byte_end":10396226,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Reasons it may not be known:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396231,"byte_end":10396263,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396268,"byte_end":10396271,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ - The server didn't send a `content-length` header.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396276,"byte_end":10396331,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/ - The response is compressed and automatically decoded (thus changing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396336,"byte_end":10396409,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/   the actual decoded length).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10396414,"byte_end":10396447,"line_start":90,"line_end":90,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397095,"byte_end":10397098,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"url","qualname":"<Response>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the final `Url` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the final `Url` of this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397026,"byte_end":10397069,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397074,"byte_end":10397083,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397212,"byte_end":10397223,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Response>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address used to get this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the remote address used to get this `Response`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397145,"byte_end":10397200,"line_start":115,"line_end":115,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398055,"byte_end":10398059,"line_start":144,"line_end":144,"column_start":18,"column_end":22},"name":"text","qualname":"<Response>::text","value":"pub async fn text(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text.","sig":null,"attributes":[{"value":"/ Get the full response text.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397386,"byte_end":10397417,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397422,"byte_end":10397425,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397430,"byte_end":10397489,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397494,"byte_end":10397567,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ Encoding is determinated from the `charset` parameter of `Content-Type` header,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397572,"byte_end":10397655,"line_start":128,"line_end":128,"column_start":5,"column_end":88}},{"value":"/ and defaults to `utf-8` if not presented.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397660,"byte_end":10397705,"line_start":129,"line_end":129,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397710,"byte_end":10397713,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397718,"byte_end":10397731,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397736,"byte_end":10397739,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397744,"byte_end":10397751,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397756,"byte_end":10397820,"line_start":134,"line_end":134,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397825,"byte_end":10397886,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397891,"byte_end":10397906,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/     .text()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397911,"byte_end":10397926,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397931,"byte_end":10397947,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397952,"byte_end":10397955,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10397960,"byte_end":10397996,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398001,"byte_end":10398013,"line_start":141,"line_end":141,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398018,"byte_end":10398025,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398030,"byte_end":10398037,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10399098,"byte_end":10399115,"line_start":171,"line_end":171,"column_start":18,"column_end":35},"name":"text_with_charset","qualname":"<Response>::text_with_charset","value":"pub async fn text_with_charset<'_>(Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text given a specific encoding.","sig":null,"attributes":[{"value":"/ Get the full response text given a specific encoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398150,"byte_end":10398207,"line_start":148,"line_end":148,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398212,"byte_end":10398215,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398220,"byte_end":10398279,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398284,"byte_end":10398357,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ You can provide a default encoding for decoding the raw message, while the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398362,"byte_end":10398440,"line_start":152,"line_end":152,"column_start":5,"column_end":83}},{"value":"/ `charset` parameter of `Content-Type` header is still prioritized. For more information","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398445,"byte_end":10398536,"line_start":153,"line_end":153,"column_start":5,"column_end":96}},{"value":"/ about the possible encoding name, please go to [`encoding_rs`] docs.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398541,"byte_end":10398613,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398618,"byte_end":10398621,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`encoding_rs`]: https://docs.rs/encoding_rs/0.8/encoding_rs/#relationship-with-windows-code-pages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398626,"byte_end":10398728,"line_start":156,"line_end":156,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398733,"byte_end":10398736,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398741,"byte_end":10398754,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398759,"byte_end":10398762,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398767,"byte_end":10398774,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398779,"byte_end":10398843,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398848,"byte_end":10398909,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398914,"byte_end":10398929,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/     .text_with_charset(\"utf-8\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398934,"byte_end":10398969,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398974,"byte_end":10398990,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10398995,"byte_end":10398998,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10399003,"byte_end":10399039,"line_start":167,"line_end":167,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10399044,"byte_end":10399056,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10399061,"byte_end":10399068,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10399073,"byte_end":10399080,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401199,"byte_end":10401203,"line_start":238,"line_end":238,"column_start":18,"column_end":22},"name":"json","qualname":"<Response>::json","value":"pub async fn json<T: DeserializeOwned>(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to deserialize the response body as JSON.","sig":null,"attributes":[{"value":"/ Try to deserialize the response body as JSON.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400032,"byte_end":10400081,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400086,"byte_end":10400089,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400094,"byte_end":10400108,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400113,"byte_end":10400116,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400121,"byte_end":10400175,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400180,"byte_end":10400183,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400188,"byte_end":10400202,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400207,"byte_end":10400210,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400215,"byte_end":10400222,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400227,"byte_end":10400254,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/ # extern crate serde;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400259,"byte_end":10400284,"line_start":206,"line_end":206,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400289,"byte_end":10400294,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ # use reqwest::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400299,"byte_end":10400324,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400329,"byte_end":10400358,"line_start":209,"line_end":209,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400363,"byte_end":10400368,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ // This `derive` requires the `serde` dependency.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400373,"byte_end":10400426,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400431,"byte_end":10400457,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ struct Ip {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400462,"byte_end":10400477,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     origin: String,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400482,"byte_end":10400505,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400510,"byte_end":10400515,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400520,"byte_end":10400523,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400528,"byte_end":10400571,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ let ip = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400576,"byte_end":10400626,"line_start":218,"line_end":218,"column_start":5,"column_end":55}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400631,"byte_end":10400646,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/     .json::<Ip>()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400651,"byte_end":10400672,"line_start":220,"line_end":220,"column_start":5,"column_end":26}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400677,"byte_end":10400693,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400698,"byte_end":10400701,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ println!(\"ip: {}\", ip.origin);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400706,"byte_end":10400740,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400745,"byte_end":10400757,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400762,"byte_end":10400769,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400774,"byte_end":10400779,"line_start":226,"line_end":226,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400784,"byte_end":10400803,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400808,"byte_end":10400815,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400820,"byte_end":10400823,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400828,"byte_end":10400840,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400845,"byte_end":10400848,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the response body is not in JSON format","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400853,"byte_end":10400923,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ or it cannot be properly deserialized to target type `T`. For more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10400928,"byte_end":10400998,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ details please see [`serde_json::from_reader`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401003,"byte_end":10401054,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401059,"byte_end":10401062,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`serde_json::from_reader`]: https://docs.serde.rs/serde_json/fn.from_reader.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401067,"byte_end":10401152,"line_start":236,"line_end":236,"column_start":5,"column_end":90}},{"value":"cfg(feature = \"json\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401157,"byte_end":10401181,"line_start":237,"line_end":237,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401757,"byte_end":10401762,"line_start":259,"line_end":259,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Response>::bytes","value":"pub async fn bytes(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response body as `Bytes`.","sig":null,"attributes":[{"value":"/ Get the full response body as `Bytes`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401373,"byte_end":10401415,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401420,"byte_end":10401423,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401428,"byte_end":10401441,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401446,"byte_end":10401449,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401454,"byte_end":10401461,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401466,"byte_end":10401530,"line_start":249,"line_end":249,"column_start":5,"column_end":69}},{"value":"/ let bytes = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401535,"byte_end":10401588,"line_start":250,"line_end":250,"column_start":5,"column_end":58}},{"value":"/     .await?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401593,"byte_end":10401608,"line_start":251,"line_end":251,"column_start":5,"column_end":20}},{"value":"/     .bytes()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401613,"byte_end":10401629,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401634,"byte_end":10401650,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401655,"byte_end":10401658,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ println!(\"bytes: {:?}\", bytes);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401663,"byte_end":10401698,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401703,"byte_end":10401715,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401720,"byte_end":10401727,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401732,"byte_end":10401739,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402329,"byte_end":10402334,"line_start":279,"line_end":279,"column_start":18,"column_end":23},"name":"chunk","qualname":"<Response>::chunk","value":"pub async fn chunk<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Stream a chunk of the response body.","sig":null,"attributes":[{"value":"/ Stream a chunk of the response body.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401853,"byte_end":10401893,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401898,"byte_end":10401901,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ When the response body has been exhausted, this will return `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401906,"byte_end":10401977,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401982,"byte_end":10401985,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10401990,"byte_end":10402003,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402008,"byte_end":10402011,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402016,"byte_end":10402023,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402028,"byte_end":10402092,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/ let mut res = reqwest::get(\"https://hyper.rs\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402097,"byte_end":10402155,"line_start":271,"line_end":271,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402160,"byte_end":10402163,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ while let Some(chunk) = res.chunk().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402168,"byte_end":10402216,"line_start":273,"line_end":273,"column_start":5,"column_end":53}},{"value":"/     println!(\"Chunk: {:?}\", chunk);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402221,"byte_end":10402260,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402265,"byte_end":10402270,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402275,"byte_end":10402287,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402292,"byte_end":10402299,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10402304,"byte_end":10402311,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403940,"byte_end":10403956,"line_start":337,"line_end":337,"column_start":12,"column_end":28},"name":"error_for_status","qualname":"<Response>::error_for_status","value":"pub fn error_for_status(Self) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a response into an error if the server returned an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403288,"byte_end":10403354,"line_start":316,"line_end":316,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403359,"byte_end":10403362,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403367,"byte_end":10403380,"line_start":318,"line_end":318,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403385,"byte_end":10403388,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403393,"byte_end":10403400,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403405,"byte_end":10403433,"line_start":321,"line_end":321,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: Response) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403438,"byte_end":10403473,"line_start":322,"line_end":322,"column_start":5,"column_end":40}},{"value":"/     match res.error_for_status() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403478,"byte_end":10403516,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/         Ok(_res) => (),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403521,"byte_end":10403548,"line_start":324,"line_end":324,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403553,"byte_end":10403578,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403583,"byte_end":10403631,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403636,"byte_end":10403695,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403700,"byte_end":10403727,"line_start":328,"line_end":328,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403732,"byte_end":10403765,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403770,"byte_end":10403828,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403833,"byte_end":10403851,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403856,"byte_end":10403869,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403874,"byte_end":10403883,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403888,"byte_end":10403893,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403898,"byte_end":10403916,"line_start":335,"line_end":335,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10403921,"byte_end":10403928,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404862,"byte_end":10404882,"line_start":366,"line_end":366,"column_start":12,"column_end":32},"name":"error_for_status_ref","qualname":"<Response>::error_for_status_ref","value":"pub fn error_for_status_ref(&Self) -> crate::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a reference to a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a reference to a response into an error if the server returned an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404190,"byte_end":10404271,"line_start":345,"line_end":345,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404276,"byte_end":10404279,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404284,"byte_end":10404297,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404302,"byte_end":10404305,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404310,"byte_end":10404317,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404322,"byte_end":10404350,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: &Response) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404355,"byte_end":10404391,"line_start":351,"line_end":351,"column_start":5,"column_end":41}},{"value":"/     match res.error_for_status_ref() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404396,"byte_end":10404438,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/         Ok(_res) => (),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404443,"byte_end":10404470,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404475,"byte_end":10404500,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404505,"byte_end":10404553,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404558,"byte_end":10404617,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404622,"byte_end":10404649,"line_start":357,"line_end":357,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404654,"byte_end":10404687,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404692,"byte_end":10404750,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404755,"byte_end":10404773,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404778,"byte_end":10404791,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404796,"byte_end":10404805,"line_start":362,"line_end":362,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404810,"byte_end":10404815,"line_start":363,"line_end":363,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404820,"byte_end":10404838,"line_start":364,"line_end":364,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10404843,"byte_end":10404850,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406835,"byte_end":10406853,"line_start":431,"line_end":431,"column_start":11,"column_end":29},"name":"ResponseBuilderExt","qualname":"::async_impl::response::ResponseBuilderExt","value":"ResponseBuilderExt","parent":null,"children":[{"krate":0,"index":789}],"decl_id":null,"docs":" Extension trait for http::response::Builder objects","sig":null,"attributes":[{"value":"/ Extension trait for http::response::Builder objects","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406708,"byte_end":10406763,"line_start":428,"line_end":428,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406764,"byte_end":10406767,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Allows the user to add a `Url` to the http::Response","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406768,"byte_end":10406824,"line_start":430,"line_end":430,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406995,"byte_end":10406998,"line_start":434,"line_end":434,"column_start":8,"column_end":11},"name":"url","qualname":"::async_impl::response::ResponseBuilderExt::url","value":"pub fn url(Self, Url) -> Self","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" A builder method for the `http::response::Builder` type that allows the user to add a `Url`\n to the `http::Response`\n","sig":null,"attributes":[{"value":"/ A builder method for the `http::response::Builder` type that allows the user to add a `Url`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406860,"byte_end":10406955,"line_start":432,"line_end":432,"column_start":5,"column_end":100}},{"value":"/ to the `http::Response`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406960,"byte_end":10406987,"line_start":433,"line_end":433,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447849,"byte_end":10447854,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::proxy::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"decl_id":null,"docs":" Configuration of a proxy that a `Client` should pass requests to.","sig":null,"attributes":[{"value":"/ Configuration of a proxy that a `Client` should pass requests to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446610,"byte_end":10446679,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446680,"byte_end":10446683,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A `Proxy` has a couple pieces to it:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446684,"byte_end":10446724,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446725,"byte_end":10446728,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - a URL of how to talk to the proxy","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446729,"byte_end":10446768,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ - rules on what `Client` requests should be directed to the proxy","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446769,"byte_end":10446838,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446839,"byte_end":10446842,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ For instance, let's look at `Proxy::http`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446843,"byte_end":10446889,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446890,"byte_end":10446893,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446894,"byte_end":10446905,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446906,"byte_end":10446960,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"https://secure.example\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10446961,"byte_end":10447025,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447026,"byte_end":10447038,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447039,"byte_end":10447046,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447047,"byte_end":10447054,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447055,"byte_end":10447058,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This proxy will intercept all HTTP requests, and make use of the proxy","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447059,"byte_end":10447133,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ at `https://secure.example`. A request to `http://hyper.rs` will talk","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447134,"byte_end":10447207,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ to your proxy. A request to `https://hyper.rs` will not.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447208,"byte_end":10447268,"line_start":38,"line_end":38,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447269,"byte_end":10447272,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Multiple `Proxy` rules can be configured for a `Client`. The `Client` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447273,"byte_end":10447351,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ check each `Proxy` in the order it was added. This could mean that a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447352,"byte_end":10447424,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ `Proxy` added first with eager intercept rules, such as `Proxy::all`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447425,"byte_end":10447498,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ would prevent a `Proxy` later in the list from ever working, so take care.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447499,"byte_end":10447577,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447578,"byte_end":10447581,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ By enabling the `\"socks\"` feature it is possible to use a socks proxy:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447582,"byte_end":10447656,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447657,"byte_end":10447668,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447669,"byte_end":10447723,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"socks5://192.168.1.1:9000\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447724,"byte_end":10447791,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447792,"byte_end":10447804,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447805,"byte_end":10447812,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10447813,"byte_end":10447820,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448791,"byte_end":10448795,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Http","qualname":"::proxy::ProxyScheme::Http","value":"ProxyScheme::Http { auth, host }","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448880,"byte_end":10448885,"line_start":91,"line_end":91,"column_start":5,"column_end":10},"name":"Https","qualname":"::proxy::ProxyScheme::Https","value":"ProxyScheme::Https { auth, host }","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448773,"byte_end":10448784,"line_start":86,"line_end":86,"column_start":10,"column_end":21},"name":"ProxyScheme","qualname":"::proxy::ProxyScheme","value":"pub enum ProxyScheme {\n    Http {\n        auth: Option<HeaderValue>,\n        host: http::uri::Authority,\n    },\n    Https {\n        auth: Option<HeaderValue>,\n        host: http::uri::Authority,\n    },\n}","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1281}],"decl_id":null,"docs":" A particular scheme used for proxying requests.","sig":null,"attributes":[{"value":"/ A particular scheme used for proxying requests.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448659,"byte_end":10448710,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448711,"byte_end":10448714,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ For example, HTTP vs SOCKS5","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10448715,"byte_end":10448746,"line_start":84,"line_end":84,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449309,"byte_end":10449324,"line_start":106,"line_end":106,"column_start":11,"column_end":26},"name":"IntoProxyScheme","qualname":"::proxy::IntoProxyScheme","value":"IntoProxyScheme","parent":null,"children":[{"krate":0,"index":980}],"decl_id":null,"docs":" Trait used for converting into a proxy scheme. This trait supports\n parsing from a URL-like type, whilst also supporting proxy schemes\n built directly using the factory methods.\n","sig":null,"attributes":[{"value":"/ Trait used for converting into a proxy scheme. This trait supports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449111,"byte_end":10449181,"line_start":103,"line_end":103,"column_start":1,"column_end":71}},{"value":"/ parsing from a URL-like type, whilst also supporting proxy schemes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449182,"byte_end":10449252,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ built directly using the factory methods.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449253,"byte_end":10449298,"line_start":105,"line_end":105,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449334,"byte_end":10449351,"line_start":107,"line_end":107,"column_start":8,"column_end":25},"name":"into_proxy_scheme","qualname":"::proxy::IntoProxyScheme::into_proxy_scheme","value":"pub fn into_proxy_scheme(Self) -> crate::Result<ProxyScheme>","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450085,"byte_end":10450089,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"http","qualname":"<Proxy>::http","value":"pub fn http<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTP traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTP traffic to the passed URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449695,"byte_end":10449740,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449745,"byte_end":10449748,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449753,"byte_end":10449766,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449771,"byte_end":10449774,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449779,"byte_end":10449786,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449791,"byte_end":10449818,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449823,"byte_end":10449877,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449882,"byte_end":10449925,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::http(\"https://my.prox\")?)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449930,"byte_end":10449986,"line_start":131,"line_end":131,"column_start":5,"column_end":61}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449991,"byte_end":10450009,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450014,"byte_end":10450026,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450031,"byte_end":10450038,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450043,"byte_end":10450061,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450066,"byte_end":10450073,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450664,"byte_end":10450669,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"https","qualname":"<Proxy>::https","value":"pub fn https<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTPS traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTPS traffic to the passed URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450262,"byte_end":10450308,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450313,"byte_end":10450316,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450321,"byte_end":10450334,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450339,"byte_end":10450342,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450347,"byte_end":10450354,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450359,"byte_end":10450386,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450391,"byte_end":10450445,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450450,"byte_end":10450493,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::https(\"https://example.prox:4545\")?)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450498,"byte_end":10450565,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450570,"byte_end":10450588,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450593,"byte_end":10450605,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450610,"byte_end":10450617,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450622,"byte_end":10450640,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450645,"byte_end":10450652,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451229,"byte_end":10451232,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"all","qualname":"<Proxy>::all","value":"pub fn all<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy **all** traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy **all** traffic to the passed URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450843,"byte_end":10450887,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450892,"byte_end":10450895,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450900,"byte_end":10450913,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450918,"byte_end":10450921,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450926,"byte_end":10450933,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450938,"byte_end":10450965,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10450970,"byte_end":10451024,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451029,"byte_end":10451072,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::all(\"http://pro.xy\")?)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451077,"byte_end":10451130,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451135,"byte_end":10451153,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451158,"byte_end":10451170,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451175,"byte_end":10451182,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451187,"byte_end":10451205,"line_start":175,"line_end":175,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451210,"byte_end":10451217,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452048,"byte_end":10452054,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"custom","qualname":"<Proxy>::custom","value":"pub fn custom<F, U: IntoProxyScheme>(F) -> Proxy where F: Fn(&Url) ->\nOption<U> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide a custom function to determine what traffix to proxy to where.","sig":null,"attributes":[{"value":"/ Provide a custom function to determine what traffix to proxy to where.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451404,"byte_end":10451478,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451483,"byte_end":10451486,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451491,"byte_end":10451504,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451509,"byte_end":10451512,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451517,"byte_end":10451524,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451529,"byte_end":10451556,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451561,"byte_end":10451615,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/ let target = reqwest::Url::parse(\"https://my.prox\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451620,"byte_end":10451677,"line_start":190,"line_end":190,"column_start":5,"column_end":62}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451682,"byte_end":10451725,"line_start":191,"line_end":191,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::custom(move |url| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451730,"byte_end":10451780,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/         if url.host_str() == Some(\"hyper.rs\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451785,"byte_end":10451836,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/             Some(target.clone())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451841,"byte_end":10451877,"line_start":194,"line_end":194,"column_start":5,"column_end":41}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451882,"byte_end":10451902,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451907,"byte_end":10451927,"line_start":196,"line_end":196,"column_start":5,"column_end":25}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451932,"byte_end":10451945,"line_start":197,"line_end":197,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451950,"byte_end":10451961,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451966,"byte_end":10451984,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10451989,"byte_end":10452001,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452006,"byte_end":10452013,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452018,"byte_end":10452036,"line_start":202,"line_end":202,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453258,"byte_end":10453268,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<Proxy>::basic_auth","value":"pub fn basic_auth(Self, &str, &str) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" Set the `Proxy-Authorization` header using Basic auth.","sig":null,"attributes":[{"value":"/ Set the `Proxy-Authorization` header using Basic auth.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452868,"byte_end":10452926,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452931,"byte_end":10452934,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452939,"byte_end":10452952,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452957,"byte_end":10452960,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452965,"byte_end":10452972,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10452977,"byte_end":10453004,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453009,"byte_end":10453063,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ let proxy = reqwest::Proxy::https(\"http://localhost:1234\")?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453068,"byte_end":10453131,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/     .basic_auth(\"Aladdin\", \"open sesame\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453136,"byte_end":10453182,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453187,"byte_end":10453199,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453204,"byte_end":10453211,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453216,"byte_end":10453234,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10453239,"byte_end":10453246,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"redirect","qualname":"::redirect","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1324},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1079},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1098},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1336},{"krate":0,"index":1344},{"krate":0,"index":1111},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1112},{"krate":0,"index":1114}],"decl_id":null,"docs":" Redirect Handling","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":7485,"byte_end":7520,"line_start":211,"line_end":211,"column_start":9,"column_end":44}},{"value":"/ Redirect Handling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10490799,"byte_end":10490820,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10490821,"byte_end":10490824,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10490825,"byte_end":10490902,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10490903,"byte_end":10490971,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ `redirect::Policy` can be used with a `ClientBuilder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10490972,"byte_end":10491030,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491704,"byte_end":10491710,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Policy","qualname":"::redirect::Policy","value":"Policy {  }","parent":null,"children":[{"krate":0,"index":1078}],"decl_id":null,"docs":" A type that controls the policy on how to handle the following of redirects.","sig":null,"attributes":[{"value":"/ A type that controls the policy on how to handle the following of redirects.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491217,"byte_end":10491297,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491298,"byte_end":10491301,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The default value will catch redirect loops, and has a maximum of 10","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491302,"byte_end":10491374,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ redirects it will follow in a chain before returning an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491375,"byte_end":10491441,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491442,"byte_end":10491445,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `limited` can be used have the same as the default behavior, but adjust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491446,"byte_end":10491523,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   the allowed maximum redirect hops in a chain.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491524,"byte_end":10491575,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/ - `none` can be used to disable all redirect behavior.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491576,"byte_end":10491634,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ - `custom` can be used to create a customized policy.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491635,"byte_end":10491692,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491866,"byte_end":10491873,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Attempt","qualname":"::redirect::Attempt","value":"Attempt {  }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"decl_id":null,"docs":" A type that holds information on the next request and previous requests\n in redirect chain.\n","sig":null,"attributes":[{"value":"/ A type that holds information on the next request and previous requests","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491739,"byte_end":10491814,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ in redirect chain.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491815,"byte_end":10491837,"line_start":29,"line_end":29,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492042,"byte_end":10492048,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Action","qualname":"::redirect::Action","value":"Action {  }","parent":null,"children":[{"krate":0,"index":1333}],"decl_id":null,"docs":" An action to perform when a redirect status code is found.\n","sig":null,"attributes":[{"value":"/ An action to perform when a redirect status code is found.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10491951,"byte_end":10492013,"line_start":37,"line_end":37,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492231,"byte_end":10492238,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"limited","qualname":"<Policy>::limited","value":"pub fn limited(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` with a maximum number of redirects.","sig":null,"attributes":[{"value":"/ Create a `Policy` with a maximum number of redirects.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492095,"byte_end":10492152,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492157,"byte_end":10492160,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ An `Error` will be returned if the max is reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492165,"byte_end":10492219,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492408,"byte_end":10492412,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"none","qualname":"<Policy>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` that does not follow any redirect.\n","sig":null,"attributes":[{"value":"/ Create a `Policy` that does not follow any redirect.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492340,"byte_end":10492396,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493761,"byte_end":10493767,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"custom","qualname":"<Policy>::custom","value":"pub fn custom<T>(T) -> Self where T: Fn(Attempt) -> Action + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Create a custom `Policy` using the passed function.","sig":null,"attributes":[{"value":"/ Create a custom `Policy` using the passed function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492498,"byte_end":10492553,"line_start":60,"line_end":60,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492558,"byte_end":10492561,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492566,"byte_end":10492576,"line_start":62,"line_end":62,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492581,"byte_end":10492584,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The default `Policy` handles a maximum loop","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492589,"byte_end":10492636,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ chain, but the custom variant does not do that for you automatically.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492641,"byte_end":10492714,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ The custom policy should have some way of handling those.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492719,"byte_end":10492780,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492785,"byte_end":10492788,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Information on the next request and previous requests can be found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492793,"byte_end":10492863,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ on the [`Attempt`] argument passed to the closure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492868,"byte_end":10492922,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492927,"byte_end":10492930,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Actions can be conveniently created from methods on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492935,"byte_end":10492994,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ [`Attempt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492999,"byte_end":10493015,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493020,"byte_end":10493023,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493028,"byte_end":10493041,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493046,"byte_end":10493049,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493054,"byte_end":10493065,"line_start":76,"line_end":76,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493070,"byte_end":10493107,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493112,"byte_end":10493117,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493122,"byte_end":10493159,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493164,"byte_end":10493217,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/     if attempt.previous().len() > 5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493222,"byte_end":10493263,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/         attempt.error(\"too many redirects\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493268,"byte_end":10493315,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/     } else if attempt.url().host_str() == Some(\"example.domain\") {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493320,"byte_end":10493390,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/         // prevent redirects to 'example.domain'","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493395,"byte_end":10493447,"line_start":84,"line_end":84,"column_start":5,"column_end":57}},{"value":"/         attempt.stop()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493452,"byte_end":10493478,"line_start":85,"line_end":85,"column_start":5,"column_end":31}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493483,"byte_end":10493499,"line_start":86,"line_end":86,"column_start":5,"column_end":21}},{"value":"/         attempt.follow()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493504,"byte_end":10493532,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493537,"byte_end":10493546,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493551,"byte_end":10493558,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493563,"byte_end":10493606,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/     .redirect(custom)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493611,"byte_end":10493636,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493641,"byte_end":10493659,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493664,"byte_end":10493676,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493681,"byte_end":10493688,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493693,"byte_end":10493700,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493705,"byte_end":10493708,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Attempt`]: struct.Attempt.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493713,"byte_end":10493749,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494579,"byte_end":10494587,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"redirect","qualname":"<Policy>::redirect","value":"pub fn redirect(&Self, Attempt) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Apply this policy to a given [`Attempt`] to produce a [`Action`].","sig":null,"attributes":[{"value":"/ Apply this policy to a given [`Attempt`] to produce a [`Action`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10493957,"byte_end":10494026,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494031,"byte_end":10494034,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494039,"byte_end":10494049,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494054,"byte_end":10494057,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method can be used together with `Policy::custom()`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494062,"byte_end":10494122,"line_start":111,"line_end":111,"column_start":5,"column_end":65}},{"value":"/ to construct one `Policy` that wraps another.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494127,"byte_end":10494176,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494181,"byte_end":10494184,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494189,"byte_end":10494202,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494207,"byte_end":10494210,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494215,"byte_end":10494226,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494231,"byte_end":10494268,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494273,"byte_end":10494278,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494283,"byte_end":10494320,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494325,"byte_end":10494378,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/     eprintln!(\"{}, Location: {:?}\", attempt.status(), attempt.url());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494383,"byte_end":10494456,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/     redirect::Policy::default().redirect(attempt)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494461,"byte_end":10494514,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494519,"byte_end":10494526,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494531,"byte_end":10494543,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494548,"byte_end":10494555,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10494560,"byte_end":10494567,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495595,"byte_end":10495601,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"status","qualname":"<Attempt>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the type of redirect.\n","sig":null,"attributes":[{"value":"/ Get the type of redirect.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495554,"byte_end":10495583,"line_start":166,"line_end":166,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495704,"byte_end":10495707,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"url","qualname":"<Attempt>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the next URL to redirect to.\n","sig":null,"attributes":[{"value":"/ Get the next URL to redirect to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495656,"byte_end":10495692,"line_start":171,"line_end":171,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495847,"byte_end":10495855,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"previous","qualname":"<Attempt>::previous","value":"pub fn previous(&Self) -> &[Url]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of previous URLs that have already been requested in this chain.\n","sig":null,"attributes":[{"value":"/ Get the list of previous URLs that have already been requested in this chain.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495754,"byte_end":10495835,"line_start":176,"line_end":176,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495984,"byte_end":10495990,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"follow","qualname":"<Attempt>::follow","value":"pub fn follow(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should follow the next URL.\n","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should follow the next URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495907,"byte_end":10495972,"line_start":180,"line_end":180,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496237,"byte_end":10496241,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"stop","qualname":"<Attempt>::stop","value":"pub fn stop(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should not follow the next URL.","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should not follow the next URL.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496086,"byte_end":10496155,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496160,"byte_end":10496163,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The 30x response will be returned as the `Ok` result.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496168,"byte_end":10496225,"line_start":189,"line_end":189,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496485,"byte_end":10496490,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"error","qualname":"<Attempt>::error","value":"pub fn error<E: Into<Box<StdError + Send + Sync>>>(Self, E) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action failing the redirect with an error.","sig":null,"attributes":[{"value":"/ Returns an action failing the redirect with an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496335,"byte_end":10496392,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496397,"byte_end":10496400,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The `Error` will be returned for the result of the sent request.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496405,"byte_end":10496473,"line_start":198,"line_end":198,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10500631,"byte_end":10500642,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":1351}],"decl_id":null,"docs":" Represents a server X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a server X509 certificate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10500561,"byte_end":10500602,"line_start":7,"line_end":7,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10500961,"byte_end":10500969,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Identity","qualname":"::tls::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":1124}],"decl_id":null,"docs":" Represents a private key and X509 cert as a client certificate.\n","sig":null,"attributes":[{"value":"/ Represents a private key and X509 cert as a client certificate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10500882,"byte_end":10500949,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501818,"byte_end":10501826,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Certificate>::from_der","value":"pub fn from_der(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a binary DER encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a binary DER encoded certificate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501350,"byte_end":10501414,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501419,"byte_end":10501422,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501427,"byte_end":10501441,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501446,"byte_end":10501449,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501454,"byte_end":10501461,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501466,"byte_end":10501490,"line_start":48,"line_end":48,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501495,"byte_end":10501519,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501524,"byte_end":10501579,"line_start":50,"line_end":50,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501584,"byte_end":10501613,"line_start":51,"line_end":51,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.der\")?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501618,"byte_end":10501648,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501653,"byte_end":10501685,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_der(&buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501690,"byte_end":10501743,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501748,"byte_end":10501765,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501770,"byte_end":10501782,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501787,"byte_end":10501794,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501799,"byte_end":10501806,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502616,"byte_end":10502624,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a PEM encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a PEM encoded certificate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502155,"byte_end":10502212,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502217,"byte_end":10502220,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502225,"byte_end":10502239,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502244,"byte_end":10502247,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502252,"byte_end":10502259,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502264,"byte_end":10502288,"line_start":73,"line_end":73,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502293,"byte_end":10502317,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502322,"byte_end":10502377,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502382,"byte_end":10502411,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.pem\")?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502416,"byte_end":10502446,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502451,"byte_end":10502483,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_pem(&buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502488,"byte_end":10502541,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502546,"byte_end":10502563,"line_start":80,"line_end":80,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502568,"byte_end":10502580,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502585,"byte_end":10502592,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10502597,"byte_end":10502604,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506354,"byte_end":10506362,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Identity>::from_pem","value":"pub fn from_pem(&[u8]) -> crate::Result<Identity>","parent":null,"children":[],"decl_id":null,"docs":" Parses PEM encoded private key and certificate.","sig":null,"attributes":[{"value":"/ Parses PEM encoded private key and certificate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505653,"byte_end":10505704,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505709,"byte_end":10505712,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The input should contain a PEM encoded private key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505717,"byte_end":10505771,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/ and at least one PEM encoded certificate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505776,"byte_end":10505821,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505826,"byte_end":10505829,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505834,"byte_end":10505848,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505853,"byte_end":10505856,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505861,"byte_end":10505868,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505873,"byte_end":10505897,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505902,"byte_end":10505926,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/ # fn pem() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505931,"byte_end":10505985,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10505990,"byte_end":10506019,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my-ident.pem\")?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506024,"byte_end":10506055,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506060,"byte_end":10506092,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ let id = reqwest::Identity::from_pem(&buf)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506097,"byte_end":10506145,"line_start":181,"line_end":181,"column_start":5,"column_end":53}},{"value":"/ # drop(id);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506150,"byte_end":10506165,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506170,"byte_end":10506182,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506187,"byte_end":10506194,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506199,"byte_end":10506206,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506211,"byte_end":10506214,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506219,"byte_end":10506233,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506238,"byte_end":10506241,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This requires the `rustls-tls(-...)` Cargo feature enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506246,"byte_end":10506309,"line_start":189,"line_end":189,"column_start":5,"column_end":68}},{"value":"cfg(feature = \"__rustls\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10506314,"byte_end":10506342,"line_start":190,"line_end":190,"column_start":5,"column_end":33}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10459,"byte_end":10464,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13938,"byte_end":13943,"line_start":160,"line_end":160,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":14379,"byte_end":14384,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":14521,"byte_end":14527,"line_start":181,"line_end":181,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":15741,"byte_end":15746,"line_start":218,"line_end":218,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":17832,"byte_end":17840,"line_start":308,"line_end":308,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":17972,"byte_end":17980,"line_start":314,"line_end":314,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19876,"byte_end":19877,"line_start":10,"line_end":10,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":20122,"byte_end":20125,"line_start":18,"line_end":18,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273570,"byte_end":10273574,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10276799,"byte_end":10276803,"line_start":163,"line_end":163,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10276918,"byte_end":10276922,"line_start":170,"line_end":170,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277048,"byte_end":10277052,"line_start":177,"line_end":177,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277186,"byte_end":10277190,"line_start":184,"line_end":184,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277310,"byte_end":10277314,"line_start":191,"line_end":191,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277427,"byte_end":10277431,"line_start":198,"line_end":198,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277592,"byte_end":10277602,"line_start":206,"line_end":206,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10279458,"byte_end":10279468,"line_start":265,"line_end":265,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10279699,"byte_end":10279709,"line_start":275,"line_end":275,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10280374,"byte_end":10280383,"line_start":303,"line_end":303,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284650,"byte_end":10284663,"line_start":112,"line_end":112,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284727,"byte_end":10284740,"line_start":118,"line_end":118,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312756,"byte_end":10312762,"line_start":935,"line_end":935,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312826,"byte_end":10312832,"line_start":941,"line_end":941,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10319619,"byte_end":10319625,"line_start":1157,"line_end":1157,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10319838,"byte_end":10319851,"line_start":1165,"line_end":1165,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10320057,"byte_end":10320063,"line_start":1173,"line_end":1173,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10322272,"byte_end":10322281,"line_start":1260,"line_end":1260,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10323644,"byte_end":10323658,"line_start":1324,"line_end":1324,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324064,"byte_end":10324071,"line_start":1342,"line_end":1342,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324335,"byte_end":10324342,"line_start":1354,"line_end":1354,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324809,"byte_end":10324823,"line_start":1368,"line_end":1368,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10331645,"byte_end":10331652,"line_start":1526,"line_end":1526,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10335163,"byte_end":10335170,"line_start":65,"line_end":65,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10335289,"byte_end":10335296,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10339399,"byte_end":10339406,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10341065,"byte_end":10341072,"line_start":249,"line_end":249,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10341814,"byte_end":10341821,"line_start":277,"line_end":277,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10343036,"byte_end":10343044,"line_start":312,"line_end":312,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10343482,"byte_end":10343489,"line_start":326,"line_end":326,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10344378,"byte_end":10344385,"line_start":370,"line_end":370,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345600,"byte_end":10345604,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345668,"byte_end":10345672,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349534,"byte_end":10349538,"line_start":176,"line_end":176,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349681,"byte_end":10349685,"line_start":184,"line_end":184,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351819,"byte_end":10351823,"line_start":258,"line_end":258,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10352061,"byte_end":10352065,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10352372,"byte_end":10352381,"line_start":283,"line_end":283,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10355509,"byte_end":10355518,"line_start":365,"line_end":365,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10355815,"byte_end":10355827,"line_start":376,"line_end":376,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10356296,"byte_end":10356308,"line_start":399,"line_end":399,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10357492,"byte_end":10357507,"line_start":445,"line_end":445,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366359,"byte_end":10366366,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10368632,"byte_end":10368646,"line_start":131,"line_end":131,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10379180,"byte_end":10379187,"line_start":448,"line_end":448,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10379352,"byte_end":10379366,"line_start":454,"line_end":454,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10380961,"byte_end":10380968,"line_start":504,"line_end":504,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10394945,"byte_end":10394953,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10405504,"byte_end":10405512,"line_start":387,"line_end":387,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10405817,"byte_end":10405825,"line_start":397,"line_end":397,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406567,"byte_end":10406571,"line_start":419,"line_end":419,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10407071,"byte_end":10407078,"line_start":437,"line_end":437,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10409159,"byte_end":10409172,"line_start":39,"line_end":39,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10410429,"byte_end":10410442,"line_start":77,"line_end":77,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10412203,"byte_end":10412212,"line_start":134,"line_end":134,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10425383,"byte_end":10425392,"line_start":516,"line_end":516,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426369,"byte_end":10426370,"line_start":546,"line_end":546,"column_start":92,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426840,"byte_end":10426844,"line_start":562,"line_end":562,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426966,"byte_end":10426970,"line_start":568,"line_end":568,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10427672,"byte_end":10427676,"line_start":598,"line_end":598,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10433865,"byte_end":10433878,"line_start":822,"line_end":822,"column_start":73,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10434230,"byte_end":10434243,"line_start":832,"line_end":832,"column_start":59,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10435105,"byte_end":10435118,"line_start":862,"line_end":862,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10438358,"byte_end":10438365,"line_start":974,"line_end":974,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10438923,"byte_end":10438930,"line_start":993,"line_end":993,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10439089,"byte_end":10439096,"line_start":999,"line_end":999,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10439746,"byte_end":10439753,"line_start":1018,"line_end":1018,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10440784,"byte_end":10440790,"line_start":1050,"line_end":1050,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449429,"byte_end":10449430,"line_start":110,"line_end":110,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449575,"byte_end":10449586,"line_start":116,"line_end":116,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449683,"byte_end":10449688,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10456524,"byte_end":10456529,"line_start":337,"line_end":337,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10456729,"byte_end":10456736,"line_start":346,"line_end":346,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10458361,"byte_end":10458370,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10458850,"byte_end":10458863,"line_start":412,"line_end":412,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10459311,"byte_end":10459322,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10464391,"byte_end":10464402,"line_start":584,"line_end":584,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10465238,"byte_end":10465247,"line_start":614,"line_end":614,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10465995,"byte_end":10466001,"line_start":636,"line_end":636,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10466510,"byte_end":10466516,"line_start":654,"line_end":654,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10467215,"byte_end":10467218,"line_start":678,"line_end":678,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492082,"byte_end":10492088,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495415,"byte_end":10495421,"line_start":158,"line_end":158,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495536,"byte_end":10495543,"line_start":165,"line_end":165,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496786,"byte_end":10496792,"line_start":212,"line_end":212,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496943,"byte_end":10496953,"line_start":218,"line_end":218,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10497979,"byte_end":10497995,"line_start":254,"line_end":254,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10498130,"byte_end":10498146,"line_start":260,"line_end":260,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501332,"byte_end":10501343,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10504138,"byte_end":10504146,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10508741,"byte_end":10508752,"line_start":257,"line_end":257,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10508890,"byte_end":10508898,"line_start":263,"line_end":263,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10509429,"byte_end":10509439,"line_start":285,"line_end":285,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10510181,"byte_end":10510191,"line_start":305,"line_end":305,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10510569,"byte_end":10510579,"line_start":323,"line_end":323,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\mod.rs","byte_start":10272697,"byte_end":10272706,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":493}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\lib.rs","byte_start":9727,"byte_end":9735,"line_start":309,"line_end":309,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1066}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":10459,"byte_end":10464,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":13938,"byte_end":13943,"line_start":160,"line_end":160,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":14379,"byte_end":14384,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":14521,"byte_end":14527,"line_start":181,"line_end":181,"column_start":31,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":15741,"byte_end":15746,"line_start":218,"line_end":218,"column_start":19,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":17832,"byte_end":17840,"line_start":308,"line_end":308,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\error.rs","byte_start":17972,"byte_end":17980,"line_start":314,"line_end":314,"column_start":19,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":119},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19819,"byte_end":19834,"line_start":8,"line_end":8,"column_start":20,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":78},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":19876,"byte_end":19877,"line_start":10,"line_end":10,"column_start":38,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":75}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\into_url.rs","byte_start":20122,"byte_end":20125,"line_start":18,"line_end":18,"column_start":26,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":17,"index":719},"to":{"krate":0,"index":78}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10273570,"byte_end":10273574,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10276799,"byte_end":10276803,"line_start":163,"line_end":163,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10276918,"byte_end":10276922,"line_start":170,"line_end":170,"column_start":24,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277048,"byte_end":10277052,"line_start":177,"line_end":177,"column_start":30,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277186,"byte_end":10277190,"line_start":184,"line_end":184,"column_start":23,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277310,"byte_end":10277314,"line_start":191,"line_end":191,"column_start":29,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277427,"byte_end":10277431,"line_start":198,"line_end":198,"column_start":21,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10277592,"byte_end":10277602,"line_start":206,"line_end":206,"column_start":19,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":31,"index":40}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10279458,"byte_end":10279468,"line_start":265,"line_end":265,"column_start":17,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":164},"to":{"krate":27,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10279699,"byte_end":10279709,"line_start":275,"line_end":275,"column_start":28,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1507},"to":{"krate":31,"index":40}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\body.rs","byte_start":10280374,"byte_end":10280383,"line_start":303,"line_end":303,"column_start":19,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":174},"to":{"krate":31,"index":40}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284650,"byte_end":10284663,"line_start":112,"line_end":112,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10284727,"byte_end":10284740,"line_start":118,"line_end":118,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312756,"byte_end":10312762,"line_start":935,"line_end":935,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10312826,"byte_end":10312832,"line_start":941,"line_end":941,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10319619,"byte_end":10319625,"line_start":1157,"line_end":1157,"column_start":21,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10319838,"byte_end":10319851,"line_start":1165,"line_end":1165,"column_start":21,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10320057,"byte_end":10320063,"line_start":1173,"line_end":1173,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10322272,"byte_end":10322281,"line_start":1260,"line_end":1260,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10323644,"byte_end":10323658,"line_start":1324,"line_end":1324,"column_start":6,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324064,"byte_end":10324071,"line_start":1342,"line_end":1342,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324335,"byte_end":10324342,"line_start":1354,"line_end":1354,"column_start":17,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10324809,"byte_end":10324823,"line_start":1368,"line_end":1368,"column_start":17,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1429},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\client.rs","byte_start":10331645,"byte_end":10331652,"line_start":1526,"line_end":1526,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10335163,"byte_end":10335170,"line_start":65,"line_end":65,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10335289,"byte_end":10335296,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10339399,"byte_end":10339406,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":451},"to":{"krate":27,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10341065,"byte_end":10341072,"line_start":249,"line_end":249,"column_start":19,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":451},"to":{"krate":31,"index":40}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10341814,"byte_end":10341821,"line_start":277,"line_end":277,"column_start":17,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10343036,"byte_end":10343044,"line_start":312,"line_end":312,"column_start":17,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":461},"to":{"krate":27,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10343482,"byte_end":10343489,"line_start":326,"line_end":326,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\decoder.rs","byte_start":10344378,"byte_end":10344385,"line_start":370,"line_end":370,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1184},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345600,"byte_end":10345604,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10345668,"byte_end":10345672,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349534,"byte_end":10349538,"line_start":176,"line_end":176,"column_start":21,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10349681,"byte_end":10349685,"line_start":184,"line_end":184,"column_start":6,"column_end":10},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10351819,"byte_end":10351823,"line_start":258,"line_end":258,"column_start":21,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10352061,"byte_end":10352065,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":512},"to":{"krate":0,"index":526}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10352372,"byte_end":10352381,"line_start":283,"line_end":283,"column_start":20,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10355509,"byte_end":10355518,"line_start":365,"line_end":365,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10355815,"byte_end":10355827,"line_start":376,"line_end":376,"column_start":6,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10356296,"byte_end":10356308,"line_start":399,"line_end":399,"column_start":6,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\multipart.rs","byte_start":10357492,"byte_end":10357507,"line_start":445,"line_end":445,"column_start":6,"column_end":21},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10366359,"byte_end":10366366,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10368632,"byte_end":10368646,"line_start":131,"line_end":131,"column_start":6,"column_end":20},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10379180,"byte_end":10379187,"line_start":448,"line_end":448,"column_start":21,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10379352,"byte_end":10379366,"line_start":454,"line_end":454,"column_start":21,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\request.rs","byte_start":10380961,"byte_end":10380968,"line_start":504,"line_end":504,"column_start":37,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10394945,"byte_end":10394953,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10405504,"byte_end":10405512,"line_start":387,"line_end":387,"column_start":21,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10405817,"byte_end":10405825,"line_start":397,"line_end":397,"column_start":49,"column_end":57},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10406567,"byte_end":10406571,"line_start":419,"line_end":419,"column_start":25,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\async_impl\\response.rs","byte_start":10407071,"byte_end":10407078,"line_start":437,"line_end":437,"column_start":45,"column_end":52},"kind":{"Impl":{"id":61}},"from":{"krate":13,"index":2505},"to":{"krate":0,"index":788}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10409159,"byte_end":10409172,"line_start":39,"line_end":39,"column_start":6,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10410429,"byte_end":10410442,"line_start":77,"line_end":77,"column_start":23,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1201},"to":{"krate":61,"index":7}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10412203,"byte_end":10412212,"line_start":134,"line_end":134,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10425383,"byte_end":10425392,"line_start":516,"line_end":516,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1212},"to":{"krate":61,"index":7}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426206,"byte_end":10426215,"line_start":544,"line_end":544,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":33,"index":215},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426218,"byte_end":10426228,"line_start":544,"line_end":544,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":33,"index":271},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426231,"byte_end":10426241,"line_start":544,"line_end":544,"column_start":54,"column_end":64},"kind":"SuperTrait","from":{"krate":56,"index":866},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426244,"byte_end":10426248,"line_start":544,"line_end":544,"column_start":67,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426251,"byte_end":10426255,"line_start":544,"line_end":544,"column_start":74,"column_end":78},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426258,"byte_end":10426263,"line_start":544,"line_end":544,"column_start":81,"column_end":86},"kind":"SuperTrait","from":{"krate":2,"index":2112},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426369,"byte_end":10426370,"line_start":546,"line_end":546,"column_start":92,"column_end":93},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":865},"to":{"krate":0,"index":863}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426840,"byte_end":10426844,"line_start":562,"line_end":562,"column_start":21,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1400},"to":{"krate":56,"index":866}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10426966,"byte_end":10426970,"line_start":568,"line_end":568,"column_start":20,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1400},"to":{"krate":33,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10427672,"byte_end":10427676,"line_start":598,"line_end":598,"column_start":21,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1400},"to":{"krate":33,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10433865,"byte_end":10433878,"line_start":822,"line_end":822,"column_start":73,"column_end":86},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1367},"to":{"krate":56,"index":866}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10434230,"byte_end":10434243,"line_start":832,"line_end":832,"column_start":59,"column_end":72},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1367},"to":{"krate":33,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10435105,"byte_end":10435118,"line_start":862,"line_end":862,"column_start":60,"column_end":73},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1367},"to":{"krate":33,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10438358,"byte_end":10438365,"line_start":974,"line_end":974,"column_start":10,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10438923,"byte_end":10438930,"line_start":993,"line_end":993,"column_start":73,"column_end":80},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":941},"to":{"krate":56,"index":866}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10439089,"byte_end":10439096,"line_start":999,"line_end":999,"column_start":59,"column_end":66},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":941},"to":{"krate":33,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10439746,"byte_end":10439753,"line_start":1018,"line_end":1018,"column_start":60,"column_end":67},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":941},"to":{"krate":33,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\connect.rs","byte_start":10440784,"byte_end":10440790,"line_start":1050,"line_end":1050,"column_start":25,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449429,"byte_end":10449430,"line_start":110,"line_end":110,"column_start":38,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":982},"to":{"krate":0,"index":979}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449575,"byte_end":10449586,"line_start":116,"line_end":116,"column_start":26,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1277},"to":{"krate":0,"index":979}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10449683,"byte_end":10449688,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10456524,"byte_end":10456529,"line_start":337,"line_end":337,"column_start":21,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10456729,"byte_end":10456736,"line_start":346,"line_end":346,"column_start":6,"column_end":13},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10458361,"byte_end":10458370,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10458850,"byte_end":10458863,"line_start":412,"line_end":412,"column_start":6,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10459311,"byte_end":10459322,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10464391,"byte_end":10464402,"line_start":584,"line_end":584,"column_start":21,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10465238,"byte_end":10465247,"line_start":614,"line_end":614,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10465995,"byte_end":10466001,"line_start":636,"line_end":636,"column_start":6,"column_end":12},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10466510,"byte_end":10466516,"line_start":654,"line_end":654,"column_start":21,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1306},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\proxy.rs","byte_start":10467215,"byte_end":10467218,"line_start":678,"line_end":678,"column_start":14,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":13,"index":2638},"to":{"krate":0,"index":1045}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10492082,"byte_end":10492088,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495415,"byte_end":10495421,"line_start":158,"line_end":158,"column_start":18,"column_end":24},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10495536,"byte_end":10495543,"line_start":165,"line_end":165,"column_start":10,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496786,"byte_end":10496792,"line_start":212,"line_end":212,"column_start":21,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10496943,"byte_end":10496953,"line_start":218,"line_end":218,"column_start":21,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1098},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10497979,"byte_end":10497995,"line_start":254,"line_end":254,"column_start":23,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\redirect.rs","byte_start":10498130,"byte_end":10498146,"line_start":260,"line_end":260,"column_start":19,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10501332,"byte_end":10501343,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10504138,"byte_end":10504146,"line_start":126,"line_end":126,"column_start":6,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10508741,"byte_end":10508752,"line_start":257,"line_end":257,"column_start":21,"column_end":32},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10508890,"byte_end":10508898,"line_start":263,"line_end":263,"column_start":21,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1123},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10509429,"byte_end":10509439,"line_start":285,"line_end":285,"column_start":21,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10510181,"byte_end":10510191,"line_start":305,"line_end":305,"column_start":18,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\reqwest-0.10.10\\src\\tls.rs","byte_start":10510569,"byte_end":10510579,"line_start":323,"line_end":323,"column_start":29,"column_end":39},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1164},"to":{"krate":82,"index":1255}}]}