{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","-C","metadata=7caba66929e5f739","-C","extra-filename=-7caba66929e5f739","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","bytes=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbytes-0d9b9a37934dc76f.rmeta","--extern","fnv=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfnv-4724b7d2e7791462.rmeta","--extern","futures_core=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfutures_core-c18b2759a74772ee.rmeta","--extern","iovec=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libiovec-036e78fb2d0f9c21.rmeta","--extern","lazy_static=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblazy_static-45157252ee590ae1.rmeta","--extern","memchr=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmemchr-1907bb594294e3a0.rmeta","--extern","mio=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libmio-a9e00ff1fed52ccc.rmeta","--extern","num_cpus=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libnum_cpus-e88b6d7a31d3a828.rmeta","--extern","pin_project_lite=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libpin_project_lite-01e9dbd04cbe9344.rmeta","--extern","slab=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libslab-c2de2c827a367059.rmeta","--extern","tokio_macros=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\tokio_macros-a4fdd5d82823920e.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio-7caba66929e5f739.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[10766661440287024334,987395534943628092]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","num":13,"id":{"name":"pin_project_lite","disambiguator":[11458692054556465735,9113638017520811829]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","num":14,"id":{"name":"bytes","disambiguator":[9019378406746688441,8470750716336469938]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[13077712991614553716,2746775383264141978]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":16,"id":{"name":"mio","disambiguator":[14426611954319851920,8010177769537004241]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":17,"id":{"name":"net2","disambiguator":[4264490826184072537,4561712397809616144]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":18,"id":{"name":"winapi","disambiguator":[4006827767281335465,13430598760160072842]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":19,"id":{"name":"cfg_if","disambiguator":[9160317425730696183,18175083639061721631]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","num":20,"id":{"name":"iovec","disambiguator":[12152129518108939196,1813996528491099070]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","num":21,"id":{"name":"slab","disambiguator":[14467334786303022905,4170068910821487195]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":22,"id":{"name":"miow","disambiguator":[15377211746358681375,14881981367405233104]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":23,"id":{"name":"kernel32","disambiguator":[16820212478691107798,8111668972782052801]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":24,"id":{"name":"winapi","disambiguator":[753043324285959879,10675845759397145029]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":25,"id":{"name":"ws2_32","disambiguator":[775372795951657822,11907615947731107891]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":26,"id":{"name":"log","disambiguator":[11988239905312418642,14929643071484238321]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\platform.rs","num":27,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","num":28,"id":{"name":"fnv","disambiguator":[2489852198916710370,6210931132834131286]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","num":29,"id":{"name":"tokio_macros","disambiguator":[10066805158715599723,2422332116856004130]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[16632542777199346109,14088241813478408171]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\mod.rs","num":31,"id":{"name":"num_cpus","disambiguator":[2891945326073920803,16438406934100408411]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":30907,"byte_end":30917,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":30919,"byte_end":30926,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":30954,"byte_end":30966,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":9369},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34518},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":37023},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2717},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7079},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7152},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10688},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10638},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10550},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9716},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9587},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9669},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9627},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72921,"byte_end":72932,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325253,"byte_end":10325261,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325291,"byte_end":10325299,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325301,"byte_end":10325310,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325353,"byte_end":10325366,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325368,"byte_end":10325382,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3049},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325384,"byte_end":10325396,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2761}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325384,"byte_end":10325396,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2914}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":10385580,"byte_end":10385588,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3057}},{"kind":"Use","ref_id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":10385590,"byte_end":10385602,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3057}},{"kind":"Use","ref_id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":10385590,"byte_end":10385602,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3179}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":10385604,"byte_end":10385612,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3057}},{"kind":"Use","ref_id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554635,"byte_end":10554645,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554675,"byte_end":10554680,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554682,"byte_end":10554687,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554853,"byte_end":10554857,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554859,"byte_end":10554863,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554973,"byte_end":10554977,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554979,"byte_end":10554983,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555018,"byte_end":10555025,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":5244},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555027,"byte_end":10555034,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555074,"byte_end":10555083,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555375,"byte_end":10555381,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4607}},{"kind":"Use","ref_id":{"krate":0,"index":6685},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673675,"byte_end":10673682,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6697},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673684,"byte_end":10673701,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722109,"byte_end":10722116,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722118,"byte_end":10722126,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722128,"byte_end":10722134,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722212,"byte_end":10722229,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722231,"byte_end":10722248,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5855},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722250,"byte_end":10722265,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5497}},{"kind":"Use","ref_id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673926,"byte_end":10673931,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673933,"byte_end":10673943,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6822},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673945,"byte_end":10673957,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673959,"byte_end":10673974,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674014,"byte_end":10674020,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6960},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674157,"byte_end":10674166,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674168,"byte_end":10674183,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674185,"byte_end":10674205,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6981},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674246,"byte_end":10674252,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674254,"byte_end":10674269,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":6479},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674271,"byte_end":10674287,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5296}},{"kind":"Use","ref_id":{"krate":0,"index":7044},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955863,"byte_end":10955877,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955929,"byte_end":10955943,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10956004,"byte_end":10956013,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10956015,"byte_end":10956025,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10956063,"byte_end":10956068,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":7065},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10956113,"byte_end":10956122,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":7036}},{"kind":"Use","ref_id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7566},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970040,"byte_end":10970050,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970080,"byte_end":10970089,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970091,"byte_end":10970102,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970104,"byte_end":10970109,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7667},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970163,"byte_end":10970168,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970207,"byte_end":10970214,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7425},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970250,"byte_end":10970258,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970260,"byte_end":10970271,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7710},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970273,"byte_end":10970281,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7453},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970331,"byte_end":10970338,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7455},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970340,"byte_end":10970350,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970352,"byte_end":10970359,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":8161},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970361,"byte_end":10970368,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970427,"byte_end":10970435,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":8113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970437,"byte_end":10970445,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":2,"index":36893},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10970554,"byte_end":10970562,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7073}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\mod.rs","byte_start":180804,"byte_end":180816,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":775}},{"kind":"Use","ref_id":{"krate":29,"index":45},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14880,"byte_end":14911,"line_start":404,"line_end":404,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":15247,"byte_end":15260,"line_start":413,"line_end":413,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":15367,"byte_end":15380,"line_start":416,"line_end":416,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":313},{"krate":0,"index":378},{"krate":0,"index":514},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":756},{"krate":0,"index":4607},{"krate":0,"index":5296},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7073},{"krate":0,"index":775},{"krate":0,"index":8101},{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":15903,"byte_end":15923,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":1001},{"krate":0,"index":1097},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1184},{"krate":0,"index":1220},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10115491,"byte_end":10115502,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117748,"byte_end":10117751,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117326,"byte_end":10117394,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117399,"byte_end":10117402,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117407,"byte_end":10117419,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117424,"byte_end":10117427,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117432,"byte_end":10117492,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117497,"byte_end":10117500,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117505,"byte_end":10117575,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117580,"byte_end":10117653,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117658,"byte_end":10117736,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118955,"byte_end":10118969,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117851,"byte_end":10117945,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117950,"byte_end":10118044,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118049,"byte_end":10118144,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118149,"byte_end":10118243,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118248,"byte_end":10118276,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118281,"byte_end":10118284,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118289,"byte_end":10118326,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118331,"byte_end":10118334,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118339,"byte_end":10118350,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118355,"byte_end":10118372,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118377,"byte_end":10118408,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118413,"byte_end":10118458,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118463,"byte_end":10118517,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118522,"byte_end":10118574,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118579,"byte_end":10118589,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118594,"byte_end":10118601,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118606,"byte_end":10118609,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118614,"byte_end":10118626,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118631,"byte_end":10118634,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118639,"byte_end":10118699,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118704,"byte_end":10118707,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118712,"byte_end":10118782,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118787,"byte_end":10118860,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10118865,"byte_end":10118943,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119447,"byte_end":10119454,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119333,"byte_end":10119407,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119412,"byte_end":10119435,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119630,"byte_end":10119637,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119515,"byte_end":10119590,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119595,"byte_end":10119618,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120173,"byte_end":10120183,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119706,"byte_end":10119755,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119760,"byte_end":10119763,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119768,"byte_end":10119842,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119847,"byte_end":10119922,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119927,"byte_end":10119930,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10119935,"byte_end":10120010,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120015,"byte_end":10120091,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120096,"byte_end":10120161,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121340,"byte_end":10121355,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120331,"byte_end":10120382,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120387,"byte_end":10120390,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120395,"byte_end":10120468,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120473,"byte_end":10120544,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120549,"byte_end":10120624,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120629,"byte_end":10120636,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120641,"byte_end":10120644,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120649,"byte_end":10120725,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120730,"byte_end":10120796,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120801,"byte_end":10120804,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120809,"byte_end":10120882,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120887,"byte_end":10120931,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120936,"byte_end":10120939,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10120944,"byte_end":10120999,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121004,"byte_end":10121007,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121012,"byte_end":10121024,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121029,"byte_end":10121032,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121037,"byte_end":10121065,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121070,"byte_end":10121073,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121078,"byte_end":10121110,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121115,"byte_end":10121159,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121164,"byte_end":10121167,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121172,"byte_end":10121185,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121190,"byte_end":10121193,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121198,"byte_end":10121271,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121276,"byte_end":10121328,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122331,"byte_end":10122347,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121732,"byte_end":10121808,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121813,"byte_end":10121877,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121882,"byte_end":10121885,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121890,"byte_end":10121952,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10121957,"byte_end":10122028,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122033,"byte_end":10122036,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122041,"byte_end":10122116,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122121,"byte_end":10122153,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122158,"byte_end":10122161,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122166,"byte_end":10122178,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122183,"byte_end":10122186,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122191,"byte_end":10122219,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122224,"byte_end":10122227,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122232,"byte_end":10122270,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122275,"byte_end":10122319,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123787,"byte_end":10123803,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122872,"byte_end":10122924,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122929,"byte_end":10122932,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10122937,"byte_end":10123006,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123011,"byte_end":10123054,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123059,"byte_end":10123062,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123067,"byte_end":10123135,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123140,"byte_end":10123215,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123220,"byte_end":10123223,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123228,"byte_end":10123302,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123307,"byte_end":10123352,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123357,"byte_end":10123360,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123365,"byte_end":10123422,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123427,"byte_end":10123430,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123435,"byte_end":10123447,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123452,"byte_end":10123455,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123460,"byte_end":10123488,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123493,"byte_end":10123496,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123501,"byte_end":10123558,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123563,"byte_end":10123607,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123612,"byte_end":10123615,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123620,"byte_end":10123633,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123638,"byte_end":10123641,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123646,"byte_end":10123719,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10123724,"byte_end":10123775,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124652,"byte_end":10124669,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124079,"byte_end":10124156,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124161,"byte_end":10124226,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124231,"byte_end":10124234,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124239,"byte_end":10124315,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124320,"byte_end":10124365,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124370,"byte_end":10124373,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124378,"byte_end":10124453,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124458,"byte_end":10124532,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124537,"byte_end":10124540,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124545,"byte_end":10124557,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124562,"byte_end":10124565,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10124570,"byte_end":10124640,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10128911,"byte_end":10128923,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129615,"byte_end":10129618,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129043,"byte_end":10129099,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129104,"byte_end":10129107,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129112,"byte_end":10129124,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129129,"byte_end":10129132,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129137,"byte_end":10129189,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129194,"byte_end":10129253,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129258,"byte_end":10129261,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129266,"byte_end":10129269,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129274,"byte_end":10129286,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129291,"byte_end":10129294,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129299,"byte_end":10129359,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129364,"byte_end":10129367,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129372,"byte_end":10129442,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129447,"byte_end":10129520,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129525,"byte_end":10129603,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131021,"byte_end":10131035,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129765,"byte_end":10129856,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129861,"byte_end":10129955,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129960,"byte_end":10130054,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130059,"byte_end":10130154,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130159,"byte_end":10130180,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130185,"byte_end":10130188,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130193,"byte_end":10130230,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130235,"byte_end":10130238,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130243,"byte_end":10130254,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130259,"byte_end":10130276,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130281,"byte_end":10130312,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130317,"byte_end":10130362,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130367,"byte_end":10130421,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130426,"byte_end":10130478,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130483,"byte_end":10130493,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130498,"byte_end":10130505,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130510,"byte_end":10130513,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130518,"byte_end":10130530,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130535,"byte_end":10130538,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130543,"byte_end":10130595,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130600,"byte_end":10130659,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130664,"byte_end":10130667,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130672,"byte_end":10130675,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130680,"byte_end":10130692,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130697,"byte_end":10130700,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130705,"byte_end":10130765,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130770,"byte_end":10130773,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130778,"byte_end":10130848,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130853,"byte_end":10130926,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10130931,"byte_end":10131009,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132270,"byte_end":10132280,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131494,"byte_end":10131566,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131571,"byte_end":10131574,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131579,"byte_end":10131655,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131660,"byte_end":10131688,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131693,"byte_end":10131696,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131701,"byte_end":10131776,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131781,"byte_end":10131857,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131862,"byte_end":10131927,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131932,"byte_end":10131935,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131940,"byte_end":10131952,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131957,"byte_end":10131960,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10131965,"byte_end":10132037,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132042,"byte_end":10132118,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132123,"byte_end":10132196,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132201,"byte_end":10132204,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132209,"byte_end":10132258,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133831,"byte_end":10133846,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132583,"byte_end":10132648,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132653,"byte_end":10132656,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132661,"byte_end":10132735,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132740,"byte_end":10132813,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132818,"byte_end":10132868,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132873,"byte_end":10132876,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132881,"byte_end":10132954,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10132959,"byte_end":10133034,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133039,"byte_end":10133075,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133080,"byte_end":10133083,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133088,"byte_end":10133106,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133111,"byte_end":10133114,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133119,"byte_end":10133164,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133169,"byte_end":10133172,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133177,"byte_end":10133252,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133257,"byte_end":10133318,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133323,"byte_end":10133326,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133331,"byte_end":10133406,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133411,"byte_end":10133458,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133463,"byte_end":10133466,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133471,"byte_end":10133547,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133552,"byte_end":10133625,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133630,"byte_end":10133633,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133638,"byte_end":10133711,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133716,"byte_end":10133719,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133724,"byte_end":10133736,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133741,"byte_end":10133744,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10133749,"byte_end":10133819,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134687,"byte_end":10134702,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134326,"byte_end":10134371,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134376,"byte_end":10134379,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134384,"byte_end":10134456,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134461,"byte_end":10134536,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134541,"byte_end":10134609,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134614,"byte_end":10134617,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134622,"byte_end":10134675,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136056,"byte_end":10136072,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134804,"byte_end":10134870,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134875,"byte_end":10134878,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134883,"byte_end":10134958,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10134963,"byte_end":10135037,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135042,"byte_end":10135092,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135097,"byte_end":10135100,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135105,"byte_end":10135178,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135183,"byte_end":10135258,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135263,"byte_end":10135299,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135304,"byte_end":10135307,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135312,"byte_end":10135330,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135335,"byte_end":10135338,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135343,"byte_end":10135388,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135393,"byte_end":10135396,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135401,"byte_end":10135476,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135481,"byte_end":10135542,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135547,"byte_end":10135550,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135555,"byte_end":10135630,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135635,"byte_end":10135683,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135688,"byte_end":10135691,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135696,"byte_end":10135772,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135777,"byte_end":10135850,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135855,"byte_end":10135858,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135863,"byte_end":10135936,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135941,"byte_end":10135944,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135949,"byte_end":10135961,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135966,"byte_end":10135969,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10135974,"byte_end":10136044,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136919,"byte_end":10136935,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136553,"byte_end":10136600,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136605,"byte_end":10136608,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136613,"byte_end":10136686,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136691,"byte_end":10136766,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136771,"byte_end":10136839,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136844,"byte_end":10136847,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10136852,"byte_end":10136907,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10140798,"byte_end":10140806,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1334}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10140935,"byte_end":10140944,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1337}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141258,"byte_end":10141263,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141889,"byte_end":10141899,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141786,"byte_end":10141861,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141866,"byte_end":10141877,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142306,"byte_end":10142313,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141982,"byte_end":10142031,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142036,"byte_end":10142039,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142044,"byte_end":10142056,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142061,"byte_end":10142064,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142069,"byte_end":10142143,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142148,"byte_end":10142198,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142203,"byte_end":10142267,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142272,"byte_end":10142294,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142814,"byte_end":10142824,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142712,"byte_end":10142786,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142791,"byte_end":10142802,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":10146061,"byte_end":10146065,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":10145898,"byte_end":10145964,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":10145982,"byte_end":10146049,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10149369,"byte_end":10149384,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2080}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10152084,"byte_end":10152094,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10154985,"byte_end":10154994,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10156394,"byte_end":10156399,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10158249,"byte_end":10158254,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10160433,"byte_end":10160445,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10161565,"byte_end":10161570,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10164399,"byte_end":10164403,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10166705,"byte_end":10166713,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10168610,"byte_end":10168620,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10170057,"byte_end":10170064,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10171353,"byte_end":10171360,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10172691,"byte_end":10172699,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10174039,"byte_end":10174047,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10175328,"byte_end":10175336,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10176631,"byte_end":10176639,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10178002,"byte_end":10178010,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10179303,"byte_end":10179311,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10180771,"byte_end":10180780,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10182174,"byte_end":10182183,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10183530,"byte_end":10183541,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10184902,"byte_end":10184913,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10186214,"byte_end":10186225,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10187537,"byte_end":10187548,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10188929,"byte_end":10188940,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10190234,"byte_end":10190245,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10191723,"byte_end":10191735,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10193129,"byte_end":10193141,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10194800,"byte_end":10194811,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10196366,"byte_end":10196380,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10197672,"byte_end":10197676,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198718,"byte_end":10198730,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1420}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10197943,"byte_end":10198016,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198017,"byte_end":10198020,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198021,"byte_end":10198092,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198093,"byte_end":10198096,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198097,"byte_end":10198111,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198112,"byte_end":10198115,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198116,"byte_end":10198123,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198124,"byte_end":10198160,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198161,"byte_end":10198187,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198188,"byte_end":10198191,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198192,"byte_end":10198210,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198211,"byte_end":10198250,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198251,"byte_end":10198300,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198301,"byte_end":10198304,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198305,"byte_end":10198358,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198359,"byte_end":10198406,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198407,"byte_end":10198410,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198411,"byte_end":10198440,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198441,"byte_end":10198486,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198487,"byte_end":10198512,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198513,"byte_end":10198545,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198546,"byte_end":10198549,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198550,"byte_end":10198564,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198565,"byte_end":10198570,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198571,"byte_end":10198578,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198579,"byte_end":10198582,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198583,"byte_end":10198642,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198643,"byte_end":10198646,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198647,"byte_end":10198675,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198676,"byte_end":10198707,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199447,"byte_end":10199451,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198748,"byte_end":10198817,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198822,"byte_end":10198875,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198880,"byte_end":10198883,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198888,"byte_end":10198965,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198970,"byte_end":10198992,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198997,"byte_end":10199000,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199005,"byte_end":10199019,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199024,"byte_end":10199027,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199032,"byte_end":10199045,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199050,"byte_end":10199074,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199079,"byte_end":10199105,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199110,"byte_end":10199113,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199118,"byte_end":10199144,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199149,"byte_end":10199152,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199157,"byte_end":10199202,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199207,"byte_end":10199255,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199260,"byte_end":10199301,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199306,"byte_end":10199309,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199314,"byte_end":10199351,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199356,"byte_end":10199398,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199403,"byte_end":10199415,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199420,"byte_end":10199427,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199432,"byte_end":10199439,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10201654,"byte_end":10201667,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2142},{"krate":0,"index":2143}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10203509,"byte_end":10203514,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10206316,"byte_end":10206325,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10207667,"byte_end":10207676,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10209076,"byte_end":10209084,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10210345,"byte_end":10210353,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10211668,"byte_end":10211677,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10212990,"byte_end":10212999,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10214339,"byte_end":10214348,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10215683,"byte_end":10215692,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10217069,"byte_end":10217078,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10218465,"byte_end":10218474,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10219929,"byte_end":10219939,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10221329,"byte_end":10221339,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10222671,"byte_end":10222683,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10224010,"byte_end":10224022,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10225376,"byte_end":10225388,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10226737,"byte_end":10226749,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10228140,"byte_end":10228152,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10229553,"byte_end":10229565,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10231032,"byte_end":10231045,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10232447,"byte_end":10232460,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10233480,"byte_end":10233485,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10234775,"byte_end":10234783,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236192,"byte_end":10236201,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10717},{"krate":0,"index":10718},{"krate":0,"index":10719},{"krate":0,"index":10720}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236537,"byte_end":10236540,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236395,"byte_end":10236487,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236492,"byte_end":10236525,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236702,"byte_end":10236715,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236625,"byte_end":10236690,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237391,"byte_end":10237398,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237254,"byte_end":10237300,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237305,"byte_end":10237308,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237313,"byte_end":10237379,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237590,"byte_end":10237597,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237445,"byte_end":10237499,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237504,"byte_end":10237507,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237512,"byte_end":10237578,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237808,"byte_end":10237819,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237656,"byte_end":10237717,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237722,"byte_end":10237725,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237730,"byte_end":10237796,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238050,"byte_end":10238060,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237899,"byte_end":10237962,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237967,"byte_end":10237970,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10237975,"byte_end":10238038,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238264,"byte_end":10238270,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238104,"byte_end":10238160,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238165,"byte_end":10238168,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238173,"byte_end":10238252,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10688},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242516,"byte_end":10242525,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10690}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242804,"byte_end":10242807,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242650,"byte_end":10242707,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242712,"byte_end":10242715,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242720,"byte_end":10242792,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243139,"byte_end":10243152,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242939,"byte_end":10243024,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243029,"byte_end":10243042,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243047,"byte_end":10243050,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243055,"byte_end":10243127,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243609,"byte_end":10243616,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243464,"byte_end":10243514,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243519,"byte_end":10243522,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243527,"byte_end":10243597,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243836,"byte_end":10243843,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243683,"byte_end":10243741,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243746,"byte_end":10243749,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243754,"byte_end":10243824,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244078,"byte_end":10244089,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243918,"byte_end":10243983,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243988,"byte_end":10243991,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10243996,"byte_end":10244066,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244353,"byte_end":10244363,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244198,"byte_end":10244265,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244270,"byte_end":10244273,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244278,"byte_end":10244341,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10638},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248182,"byte_end":10248191,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10640},{"krate":0,"index":10641},{"krate":0,"index":10642}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248499,"byte_end":10248502,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248357,"byte_end":10248449,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248454,"byte_end":10248487,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248664,"byte_end":10248677,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248587,"byte_end":10248652,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249759,"byte_end":10249766,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249701,"byte_end":10249747,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249957,"byte_end":10249964,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249813,"byte_end":10249867,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249872,"byte_end":10249875,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10249880,"byte_end":10249945,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250174,"byte_end":10250185,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250023,"byte_end":10250084,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250089,"byte_end":10250092,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250097,"byte_end":10250162,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250416,"byte_end":10250426,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250265,"byte_end":10250328,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250333,"byte_end":10250336,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250341,"byte_end":10250404,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250538,"byte_end":10250544,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250470,"byte_end":10250526,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10589},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253177,"byte_end":10253182,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10592},{"krate":0,"index":10593},{"krate":0,"index":10594}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253623,"byte_end":10253630,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253549,"byte_end":10253611,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253962,"byte_end":10253969,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253699,"byte_end":10253769,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253774,"byte_end":10253777,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253782,"byte_end":10253855,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253860,"byte_end":10253933,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253938,"byte_end":10253950,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254328,"byte_end":10254339,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254058,"byte_end":10254135,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254140,"byte_end":10254143,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254148,"byte_end":10254221,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254226,"byte_end":10254299,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254304,"byte_end":10254316,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254536,"byte_end":10254546,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254468,"byte_end":10254524,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":10257122,"byte_end":10257126,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":10257039,"byte_end":10257106,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":10258391,"byte_end":10258395,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10261152,"byte_end":10261157,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2201}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10261836,"byte_end":10261841,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":10263058,"byte_end":10263063,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2206}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10550},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264179,"byte_end":10264184,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10552},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":10555}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265031,"byte_end":10265040,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264541,"byte_end":10264581,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264586,"byte_end":10264589,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264594,"byte_end":10264608,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264613,"byte_end":10264616,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264621,"byte_end":10264628,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264633,"byte_end":10264667,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264672,"byte_end":10264707,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264712,"byte_end":10264715,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264720,"byte_end":10264803,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264808,"byte_end":10264848,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264853,"byte_end":10264856,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264861,"byte_end":10264914,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264919,"byte_end":10264962,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264967,"byte_end":10264972,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264977,"byte_end":10264989,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264994,"byte_end":10265001,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265006,"byte_end":10265013,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265267,"byte_end":10265274,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265200,"byte_end":10265255,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265393,"byte_end":10265400,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265334,"byte_end":10265381,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265687,"byte_end":10265697,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265452,"byte_end":10265513,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265518,"byte_end":10265521,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265526,"byte_end":10265589,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265594,"byte_end":10265675,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265816,"byte_end":10265830,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267959,"byte_end":10267971,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267171,"byte_end":10267230,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267231,"byte_end":10267234,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267235,"byte_end":10267314,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267315,"byte_end":10267391,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267392,"byte_end":10267454,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267455,"byte_end":10267458,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267459,"byte_end":10267472,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267473,"byte_end":10267476,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267477,"byte_end":10267484,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267485,"byte_end":10267529,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267530,"byte_end":10267581,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267582,"byte_end":10267639,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267640,"byte_end":10267643,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267644,"byte_end":10267681,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267682,"byte_end":10267685,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267686,"byte_end":10267713,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267714,"byte_end":10267753,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267754,"byte_end":10267784,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267785,"byte_end":10267788,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267789,"byte_end":10267826,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267827,"byte_end":10267830,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267831,"byte_end":10267870,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267871,"byte_end":10267901,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267902,"byte_end":10267914,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267915,"byte_end":10267922,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10267923,"byte_end":10267930,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269268,"byte_end":10269274,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269034,"byte_end":10269117,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269118,"byte_end":10269121,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269122,"byte_end":10269196,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269197,"byte_end":10269260,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":10274203,"byte_end":10274207,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":10274120,"byte_end":10274187,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":10275270,"byte_end":10275277,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":10275187,"byte_end":10275254,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":10276526,"byte_end":10276535,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":10276443,"byte_end":10276510,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":10508},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280859,"byte_end":10280865,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10510}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10475},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280881,"byte_end":10280887,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10477}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10430},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280903,"byte_end":10280910,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10432},{"krate":0,"index":10433},{"krate":0,"index":10435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10385},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280935,"byte_end":10280942,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10387},{"krate":0,"index":10388},{"krate":0,"index":10390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10340},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280967,"byte_end":10280974,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10342},{"krate":0,"index":10343},{"krate":0,"index":10345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10295},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10280999,"byte_end":10281007,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10297},{"krate":0,"index":10298},{"krate":0,"index":10300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10250},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281035,"byte_end":10281042,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10252},{"krate":0,"index":10253},{"krate":0,"index":10255}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10205},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281067,"byte_end":10281074,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10207},{"krate":0,"index":10208},{"krate":0,"index":10210}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281099,"byte_end":10281106,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10162},{"krate":0,"index":10163},{"krate":0,"index":10165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281131,"byte_end":10281139,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10117},{"krate":0,"index":10118},{"krate":0,"index":10120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10070},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281167,"byte_end":10281176,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":10072},{"krate":0,"index":10073},{"krate":0,"index":10075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10025},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281204,"byte_end":10281213,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":10027},{"krate":0,"index":10028},{"krate":0,"index":10030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9980},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281241,"byte_end":10281250,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9982},{"krate":0,"index":9983},{"krate":0,"index":9985}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9935},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281278,"byte_end":10281288,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9937},{"krate":0,"index":9938},{"krate":0,"index":9940}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9890},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281319,"byte_end":10281328,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9892},{"krate":0,"index":9893},{"krate":0,"index":9895}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9845},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281356,"byte_end":10281365,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9847},{"krate":0,"index":9848},{"krate":0,"index":9850}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9800},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281393,"byte_end":10281402,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9802},{"krate":0,"index":9803},{"krate":0,"index":9805}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9755},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_int.rs","byte_start":10281430,"byte_end":10281440,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9757},{"krate":0,"index":9758},{"krate":0,"index":9760}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":10281890,"byte_end":10281898,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":10281807,"byte_end":10281874,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":10285853,"byte_end":10285862,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":10285723,"byte_end":10285790,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":10291997,"byte_end":10292009,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":10291914,"byte_end":10291981,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":10294774,"byte_end":10294783,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":10294691,"byte_end":10294758,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":10297229,"byte_end":10297235,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2443}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":10297921,"byte_end":10297927,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":10298876,"byte_end":10298884,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2449}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10300056,"byte_end":10300060,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2455}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10300901,"byte_end":10300905,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9716},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302150,"byte_end":10302155,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720},{"krate":0,"index":9721}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303016,"byte_end":10303028,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302504,"byte_end":10302547,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302552,"byte_end":10302555,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302560,"byte_end":10302574,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302579,"byte_end":10302582,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302587,"byte_end":10302594,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302599,"byte_end":10302633,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302638,"byte_end":10302673,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302678,"byte_end":10302681,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302686,"byte_end":10302769,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302774,"byte_end":10302821,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302826,"byte_end":10302829,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302834,"byte_end":10302896,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302901,"byte_end":10302947,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302952,"byte_end":10302957,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302962,"byte_end":10302974,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302979,"byte_end":10302986,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302991,"byte_end":10302998,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303266,"byte_end":10303283,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9669},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316077,"byte_end":10316089,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":9672},{"krate":0,"index":9673}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317365,"byte_end":10317378,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316166,"byte_end":10316246,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316247,"byte_end":10316250,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316251,"byte_end":10316264,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316265,"byte_end":10316268,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316269,"byte_end":10316276,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316277,"byte_end":10316298,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316299,"byte_end":10316348,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316349,"byte_end":10316369,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316370,"byte_end":10316416,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316417,"byte_end":10316420,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316421,"byte_end":10316461,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316462,"byte_end":10316504,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316505,"byte_end":10316551,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316552,"byte_end":10316598,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316599,"byte_end":10316647,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316648,"byte_end":10316655,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316656,"byte_end":10316659,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316660,"byte_end":10316694,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316695,"byte_end":10316736,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316737,"byte_end":10316740,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316741,"byte_end":10316780,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316781,"byte_end":10316806,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316807,"byte_end":10316844,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316845,"byte_end":10316882,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316883,"byte_end":10316886,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316887,"byte_end":10316929,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316930,"byte_end":10316976,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10316977,"byte_end":10317014,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317015,"byte_end":10317018,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317019,"byte_end":10317046,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317047,"byte_end":10317093,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317094,"byte_end":10317136,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317137,"byte_end":10317140,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317141,"byte_end":10317176,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317177,"byte_end":10317223,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317224,"byte_end":10317227,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317228,"byte_end":10317240,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317241,"byte_end":10317248,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317249,"byte_end":10317256,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9627},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10321767,"byte_end":10321779,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":9629},{"krate":0,"index":9630}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322924,"byte_end":10322937,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322252,"byte_end":10322299,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322300,"byte_end":10322352,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322353,"byte_end":10322356,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322357,"byte_end":10322370,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322371,"byte_end":10322374,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322375,"byte_end":10322382,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322383,"byte_end":10322403,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322404,"byte_end":10322450,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322451,"byte_end":10322484,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322485,"byte_end":10322488,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322489,"byte_end":10322528,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322529,"byte_end":10322581,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322582,"byte_end":10322623,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322624,"byte_end":10322673,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322674,"byte_end":10322732,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322733,"byte_end":10322738,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322739,"byte_end":10322777,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322778,"byte_end":10322790,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322791,"byte_end":10322798,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322799,"byte_end":10322806,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322807,"byte_end":10322810,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322811,"byte_end":10322850,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322851,"byte_end":10322888,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10322889,"byte_end":10322916,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9587},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10304878,"byte_end":10304882,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9589},{"krate":0,"index":9590}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305472,"byte_end":10305477,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305169,"byte_end":10305222,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305227,"byte_end":10305273,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305278,"byte_end":10305281,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305286,"byte_end":10305296,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305301,"byte_end":10305304,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305309,"byte_end":10305386,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305391,"byte_end":10305460,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305796,"byte_end":10305805,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305525,"byte_end":10305596,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305601,"byte_end":10305675,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305680,"byte_end":10305755,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305760,"byte_end":10305784,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305928,"byte_end":10305935,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305870,"byte_end":10305916,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306227,"byte_end":10306234,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305982,"byte_end":10306036,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306041,"byte_end":10306044,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306049,"byte_end":10306122,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306127,"byte_end":10306199,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306204,"byte_end":10306215,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306545,"byte_end":10306556,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306293,"byte_end":10306354,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306359,"byte_end":10306362,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306367,"byte_end":10306440,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306445,"byte_end":10306517,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306522,"byte_end":10306533,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306702,"byte_end":10306712,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306636,"byte_end":10306690,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":10308642,"byte_end":10308647,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":10308559,"byte_end":10308626,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":10309543,"byte_end":10309551,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":10309460,"byte_end":10309527,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":10310934,"byte_end":10310942,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":10310851,"byte_end":10310918,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9541},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314823,"byte_end":10314830,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9543},{"krate":0,"index":9544}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9504},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314846,"byte_end":10314853,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9506},{"krate":0,"index":9507}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9459},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314869,"byte_end":10314877,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":9461},{"krate":0,"index":9462},{"krate":0,"index":9464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9414},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314902,"byte_end":10314910,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":9416},{"krate":0,"index":9417},{"krate":0,"index":9419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9369},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314935,"byte_end":10314943,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9324},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10314968,"byte_end":10314977,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":9326},{"krate":0,"index":9327},{"krate":0,"index":9329}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9279},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315005,"byte_end":10315013,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":9281},{"krate":0,"index":9282},{"krate":0,"index":9284}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9234},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315038,"byte_end":10315046,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9239}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9189},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315071,"byte_end":10315079,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":9191},{"krate":0,"index":9192},{"krate":0,"index":9194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315104,"byte_end":10315113,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":9146},{"krate":0,"index":9147},{"krate":0,"index":9149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315141,"byte_end":10315151,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":9101},{"krate":0,"index":9102},{"krate":0,"index":9104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9054},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315179,"byte_end":10315189,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":9056},{"krate":0,"index":9057},{"krate":0,"index":9059}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9009},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315217,"byte_end":10315227,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":9011},{"krate":0,"index":9012},{"krate":0,"index":9014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8964},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315255,"byte_end":10315266,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8969}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8919},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315297,"byte_end":10315307,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8874},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315335,"byte_end":10315345,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8879}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8829},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315373,"byte_end":10315383,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_int.rs","byte_start":10315411,"byte_end":10315422,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":377},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2761},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3057},{"krate":0,"index":3181}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80427,"byte_end":80432,"line_start":261,"line_end":261,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80466,"byte_end":80474,"line_start":262,"line_end":262,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":2733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80402,"byte_end":80412,"line_start":260,"line_end":260,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80627,"byte_end":80630,"line_start":268,"line_end":268,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80674,"byte_end":80678,"line_start":269,"line_end":269,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80603,"byte_end":80612,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2746}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\lookup_host.rs","byte_start":10324975,"byte_end":10324986,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":18785,"byte_end":18808,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":11914},{"krate":0,"index":2915},{"krate":0,"index":3015}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\mod.rs","byte_start":10325134,"byte_end":10325155,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327755,"byte_end":10327766,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3019}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329735,"byte_end":10329739,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327849,"byte_end":10327925,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327930,"byte_end":10327933,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327938,"byte_end":10327999,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328004,"byte_end":10328007,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328012,"byte_end":10328087,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328092,"byte_end":10328168,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328173,"byte_end":10328184,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328189,"byte_end":10328192,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328197,"byte_end":10328272,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328277,"byte_end":10328351,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328356,"byte_end":10328433,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328438,"byte_end":10328441,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328446,"byte_end":10328522,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328527,"byte_end":10328600,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328605,"byte_end":10328678,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328683,"byte_end":10328735,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328740,"byte_end":10328743,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328748,"byte_end":10328811,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328816,"byte_end":10328819,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328824,"byte_end":10328878,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328883,"byte_end":10328886,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328891,"byte_end":10328905,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328910,"byte_end":10328913,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328918,"byte_end":10328931,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328936,"byte_end":10328968,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328973,"byte_end":10328976,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10328981,"byte_end":10328997,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329002,"byte_end":10329005,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329010,"byte_end":10329028,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329033,"byte_end":10329072,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329077,"byte_end":10329143,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329148,"byte_end":10329151,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329156,"byte_end":10329183,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329188,"byte_end":10329191,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329196,"byte_end":10329223,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329228,"byte_end":10329242,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329247,"byte_end":10329252,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329257,"byte_end":10329264,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329269,"byte_end":10329272,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329277,"byte_end":10329307,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329312,"byte_end":10329315,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329320,"byte_end":10329333,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329338,"byte_end":10329370,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329375,"byte_end":10329402,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329407,"byte_end":10329410,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329415,"byte_end":10329431,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329436,"byte_end":10329439,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329444,"byte_end":10329462,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329467,"byte_end":10329506,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329511,"byte_end":10329596,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329601,"byte_end":10329604,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329609,"byte_end":10329636,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329641,"byte_end":10329644,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329649,"byte_end":10329676,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329681,"byte_end":10329695,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329700,"byte_end":10329705,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10329710,"byte_end":10329717,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331311,"byte_end":10331317,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330452,"byte_end":10330509,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330514,"byte_end":10330517,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330522,"byte_end":10330597,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330602,"byte_end":10330672,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330677,"byte_end":10330706,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330711,"byte_end":10330714,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330719,"byte_end":10330766,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330771,"byte_end":10330774,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330779,"byte_end":10330793,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330798,"byte_end":10330801,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330806,"byte_end":10330819,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330824,"byte_end":10330856,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330861,"byte_end":10330864,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330869,"byte_end":10330885,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330890,"byte_end":10330893,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330898,"byte_end":10330916,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330921,"byte_end":10330960,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10330965,"byte_end":10331035,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331040,"byte_end":10331043,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331048,"byte_end":10331087,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331092,"byte_end":10331162,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331167,"byte_end":10331230,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331235,"byte_end":10331244,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331249,"byte_end":10331252,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331257,"byte_end":10331271,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331276,"byte_end":10331281,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331286,"byte_end":10331293,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331644,"byte_end":10331655,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331430,"byte_end":10331493,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331498,"byte_end":10331501,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331506,"byte_end":10331578,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10331583,"byte_end":10331632,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334517,"byte_end":10334525,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332502,"byte_end":10332574,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332579,"byte_end":10332582,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332587,"byte_end":10332657,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332662,"byte_end":10332738,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332743,"byte_end":10332787,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332792,"byte_end":10332795,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332800,"byte_end":10332875,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332880,"byte_end":10332956,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10332961,"byte_end":10333026,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333031,"byte_end":10333086,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333091,"byte_end":10333094,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333099,"byte_end":10333170,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333175,"byte_end":10333250,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333255,"byte_end":10333294,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333299,"byte_end":10333302,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333307,"byte_end":10333370,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333375,"byte_end":10333378,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333383,"byte_end":10333456,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333461,"byte_end":10333492,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333497,"byte_end":10333500,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333505,"byte_end":10333578,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333583,"byte_end":10333658,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333663,"byte_end":10333736,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333741,"byte_end":10333768,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333773,"byte_end":10333776,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333781,"byte_end":10333795,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333800,"byte_end":10333803,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333808,"byte_end":10333826,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333831,"byte_end":10333857,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333862,"byte_end":10333894,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333899,"byte_end":10333902,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333907,"byte_end":10333925,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333930,"byte_end":10333981,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10333986,"byte_end":10334057,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334062,"byte_end":10334122,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334127,"byte_end":10334141,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334146,"byte_end":10334151,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334156,"byte_end":10334163,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334168,"byte_end":10334171,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334176,"byte_end":10334188,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334193,"byte_end":10334196,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334201,"byte_end":10334261,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334266,"byte_end":10334269,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334274,"byte_end":10334344,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334349,"byte_end":10334422,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334427,"byte_end":10334505,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335609,"byte_end":10335619,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334883,"byte_end":10334944,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334949,"byte_end":10334952,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10334957,"byte_end":10335030,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335035,"byte_end":10335069,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335074,"byte_end":10335077,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335082,"byte_end":10335096,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335101,"byte_end":10335104,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335109,"byte_end":10335127,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335132,"byte_end":10335164,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335169,"byte_end":10335172,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335177,"byte_end":10335193,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335198,"byte_end":10335253,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335258,"byte_end":10335261,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335266,"byte_end":10335284,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335289,"byte_end":10335328,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335333,"byte_end":10335399,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335404,"byte_end":10335407,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335412,"byte_end":10335454,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335459,"byte_end":10335548,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335553,"byte_end":10335556,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335561,"byte_end":10335575,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335580,"byte_end":10335585,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335590,"byte_end":10335597,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337050,"byte_end":10337058,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335705,"byte_end":10335779,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335784,"byte_end":10335787,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335792,"byte_end":10335854,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335859,"byte_end":10335862,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335867,"byte_end":10335943,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10335948,"byte_end":10336017,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336022,"byte_end":10336051,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336056,"byte_end":10336059,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336064,"byte_end":10336076,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336081,"byte_end":10336084,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336089,"byte_end":10336164,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336169,"byte_end":10336244,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336249,"byte_end":10336323,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336328,"byte_end":10336403,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336408,"byte_end":10336416,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336421,"byte_end":10336424,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336429,"byte_end":10336443,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336448,"byte_end":10336451,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336456,"byte_end":10336469,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336474,"byte_end":10336527,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336532,"byte_end":10336535,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336540,"byte_end":10336558,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336563,"byte_end":10336584,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336589,"byte_end":10336667,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336672,"byte_end":10336719,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336724,"byte_end":10336727,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336732,"byte_end":10336788,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336793,"byte_end":10336819,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336824,"byte_end":10336855,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336860,"byte_end":10336904,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336909,"byte_end":10336926,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336931,"byte_end":10336984,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10336989,"byte_end":10337002,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337007,"byte_end":10337016,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337021,"byte_end":10337026,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337031,"byte_end":10337038,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337744,"byte_end":10337747,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337127,"byte_end":10337185,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337190,"byte_end":10337193,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337198,"byte_end":10337258,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337263,"byte_end":10337266,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337271,"byte_end":10337308,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337313,"byte_end":10337316,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337321,"byte_end":10337335,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337340,"byte_end":10337343,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337348,"byte_end":10337361,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337366,"byte_end":10337398,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337403,"byte_end":10337406,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337411,"byte_end":10337427,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337432,"byte_end":10337435,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337440,"byte_end":10337458,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337463,"byte_end":10337502,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337507,"byte_end":10337569,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337574,"byte_end":10337577,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337582,"byte_end":10337639,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337644,"byte_end":10337684,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337689,"byte_end":10337692,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337697,"byte_end":10337710,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337715,"byte_end":10337720,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337725,"byte_end":10337732,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338386,"byte_end":10338393,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337819,"byte_end":10337877,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337882,"byte_end":10337885,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337890,"byte_end":10337966,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337971,"byte_end":10337992,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10337997,"byte_end":10338000,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338005,"byte_end":10338019,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338024,"byte_end":10338027,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338032,"byte_end":10338045,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338050,"byte_end":10338082,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338087,"byte_end":10338090,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338095,"byte_end":10338111,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338116,"byte_end":10338119,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338124,"byte_end":10338142,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338147,"byte_end":10338186,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338191,"byte_end":10338254,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338259,"byte_end":10338262,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338267,"byte_end":10338325,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338330,"byte_end":10338333,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338338,"byte_end":10338352,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338357,"byte_end":10338362,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338367,"byte_end":10338374,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340666,"byte_end":10340674,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3022}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340464,"byte_end":10340540,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340541,"byte_end":10340588,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340589,"byte_end":10340637,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10341089,"byte_end":10341100,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340852,"byte_end":10340925,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340930,"byte_end":10340945,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340950,"byte_end":10340953,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340958,"byte_end":10341027,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10341032,"byte_end":10341077,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342668,"byte_end":10342676,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342251,"byte_end":10342315,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342316,"byte_end":10342319,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342320,"byte_end":10342408,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342409,"byte_end":10342486,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342487,"byte_end":10342490,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342491,"byte_end":10342519,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342520,"byte_end":10342553,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342554,"byte_end":10342605,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342606,"byte_end":10342639,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343374,"byte_end":10343383,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342698,"byte_end":10342763,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342764,"byte_end":10342767,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342768,"byte_end":10342854,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342855,"byte_end":10342907,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342908,"byte_end":10342911,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342912,"byte_end":10342993,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10342994,"byte_end":10343079,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343080,"byte_end":10343083,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343084,"byte_end":10343112,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343113,"byte_end":10343146,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343147,"byte_end":10343194,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343195,"byte_end":10343257,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343258,"byte_end":10343311,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343312,"byte_end":10343345,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344440,"byte_end":10344449,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343557,"byte_end":10343631,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343636,"byte_end":10343709,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343714,"byte_end":10343728,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343733,"byte_end":10343736,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343741,"byte_end":10343814,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343819,"byte_end":10343822,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343827,"byte_end":10343841,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343846,"byte_end":10343849,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343854,"byte_end":10343867,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343872,"byte_end":10343890,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343895,"byte_end":10343925,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343930,"byte_end":10343933,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343938,"byte_end":10343971,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343976,"byte_end":10343979,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343984,"byte_end":10344002,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344007,"byte_end":10344046,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344051,"byte_end":10344120,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344125,"byte_end":10344173,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344178,"byte_end":10344208,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344213,"byte_end":10344216,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344221,"byte_end":10344243,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344248,"byte_end":10344293,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344298,"byte_end":10344316,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344321,"byte_end":10344324,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344329,"byte_end":10344343,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344348,"byte_end":10344353,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344358,"byte_end":10344365,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344370,"byte_end":10344373,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344378,"byte_end":10344428,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345866,"byte_end":10345870,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344574,"byte_end":10344644,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344649,"byte_end":10344718,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344723,"byte_end":10344762,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344767,"byte_end":10344770,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344775,"byte_end":10344843,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344848,"byte_end":10344851,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344856,"byte_end":10344896,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344901,"byte_end":10344904,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344909,"byte_end":10344923,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344928,"byte_end":10344931,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344936,"byte_end":10344949,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344954,"byte_end":10344984,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10344989,"byte_end":10345015,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345020,"byte_end":10345046,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345051,"byte_end":10345054,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345059,"byte_end":10345077,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345082,"byte_end":10345133,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345138,"byte_end":10345166,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345171,"byte_end":10345240,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345245,"byte_end":10345293,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345298,"byte_end":10345301,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345306,"byte_end":10345335,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345340,"byte_end":10345369,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345374,"byte_end":10345377,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345382,"byte_end":10345409,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345414,"byte_end":10345461,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345466,"byte_end":10345469,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345474,"byte_end":10345498,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345503,"byte_end":10345562,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345567,"byte_end":10345606,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345611,"byte_end":10345614,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345619,"byte_end":10345633,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345638,"byte_end":10345643,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345648,"byte_end":10345655,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345660,"byte_end":10345663,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345668,"byte_end":10345733,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345738,"byte_end":10345741,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345746,"byte_end":10345792,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10345797,"byte_end":10345848,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348472,"byte_end":10348485,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3041}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348037,"byte_end":10348103,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348104,"byte_end":10348107,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348108,"byte_end":10348195,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348196,"byte_end":10348280,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348281,"byte_end":10348284,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348285,"byte_end":10348313,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348314,"byte_end":10348357,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348358,"byte_end":10348409,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348410,"byte_end":10348443,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349295,"byte_end":10349309,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348518,"byte_end":10348585,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348586,"byte_end":10348589,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348590,"byte_end":10348677,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348678,"byte_end":10348755,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348756,"byte_end":10348813,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348814,"byte_end":10348817,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348818,"byte_end":10348904,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348905,"byte_end":10348990,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348991,"byte_end":10348994,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10348995,"byte_end":10349023,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349024,"byte_end":10349067,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349068,"byte_end":10349115,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349116,"byte_end":10349178,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349179,"byte_end":10349232,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10349233,"byte_end":10349266,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3049},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350274,"byte_end":10350286,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350142,"byte_end":10350224,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350225,"byte_end":10350245,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3051},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350287,"byte_end":10350304,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3052},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350306,"byte_end":10350324,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350870,"byte_end":10350877,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350607,"byte_end":10350676,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350681,"byte_end":10350745,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350750,"byte_end":10350802,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350807,"byte_end":10350810,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350815,"byte_end":10350858,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351868,"byte_end":10351877,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350984,"byte_end":10351058,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351063,"byte_end":10351136,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351141,"byte_end":10351155,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351160,"byte_end":10351163,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351168,"byte_end":10351241,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351246,"byte_end":10351249,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351254,"byte_end":10351268,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351273,"byte_end":10351276,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351281,"byte_end":10351294,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351299,"byte_end":10351317,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351322,"byte_end":10351352,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351357,"byte_end":10351360,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351365,"byte_end":10351398,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351403,"byte_end":10351406,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351411,"byte_end":10351429,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351434,"byte_end":10351473,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351478,"byte_end":10351543,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351548,"byte_end":10351601,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351606,"byte_end":10351636,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351641,"byte_end":10351644,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351649,"byte_end":10351671,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351676,"byte_end":10351721,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351726,"byte_end":10351744,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351749,"byte_end":10351752,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351757,"byte_end":10351771,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351776,"byte_end":10351781,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351786,"byte_end":10351793,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351798,"byte_end":10351801,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10351806,"byte_end":10351856,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353299,"byte_end":10353303,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352006,"byte_end":10352076,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352081,"byte_end":10352150,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352155,"byte_end":10352194,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352199,"byte_end":10352202,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352207,"byte_end":10352275,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352280,"byte_end":10352283,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352288,"byte_end":10352328,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352333,"byte_end":10352336,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352341,"byte_end":10352355,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352360,"byte_end":10352363,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352368,"byte_end":10352381,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352386,"byte_end":10352416,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352421,"byte_end":10352447,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352452,"byte_end":10352478,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352483,"byte_end":10352486,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352491,"byte_end":10352509,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352514,"byte_end":10352565,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352570,"byte_end":10352598,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352603,"byte_end":10352668,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352673,"byte_end":10352726,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352731,"byte_end":10352734,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352739,"byte_end":10352768,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352773,"byte_end":10352802,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352807,"byte_end":10352810,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352815,"byte_end":10352842,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352847,"byte_end":10352894,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352899,"byte_end":10352902,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352907,"byte_end":10352931,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10352936,"byte_end":10352995,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353000,"byte_end":10353039,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353044,"byte_end":10353047,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353052,"byte_end":10353066,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353071,"byte_end":10353076,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353081,"byte_end":10353088,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353093,"byte_end":10353096,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353101,"byte_end":10353166,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353171,"byte_end":10353174,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353179,"byte_end":10353225,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353230,"byte_end":10353281,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354036,"byte_end":10354043,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353773,"byte_end":10353842,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353847,"byte_end":10353911,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353916,"byte_end":10353968,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353973,"byte_end":10353976,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353981,"byte_end":10354024,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354348,"byte_end":10354354,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354149,"byte_end":10354221,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354226,"byte_end":10354295,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354300,"byte_end":10354336,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357762,"byte_end":10357771,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3056}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359852,"byte_end":10359859,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357850,"byte_end":10357894,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357899,"byte_end":10357902,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357907,"byte_end":10357981,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357986,"byte_end":10358055,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358060,"byte_end":10358136,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358141,"byte_end":10358206,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358211,"byte_end":10358214,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358219,"byte_end":10358295,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358300,"byte_end":10358369,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358374,"byte_end":10358450,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358455,"byte_end":10358514,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358519,"byte_end":10358522,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358527,"byte_end":10358581,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358586,"byte_end":10358589,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358594,"byte_end":10358608,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358613,"byte_end":10358616,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358621,"byte_end":10358634,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358639,"byte_end":10358669,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358674,"byte_end":10358700,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358705,"byte_end":10358731,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358736,"byte_end":10358739,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358744,"byte_end":10358762,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358767,"byte_end":10358818,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358823,"byte_end":10358851,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358856,"byte_end":10358925,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358930,"byte_end":10358933,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358938,"byte_end":10358965,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10358970,"byte_end":10359019,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359024,"byte_end":10359027,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359032,"byte_end":10359046,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359051,"byte_end":10359056,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359061,"byte_end":10359068,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359073,"byte_end":10359076,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359081,"byte_end":10359111,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359116,"byte_end":10359119,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359124,"byte_end":10359137,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359142,"byte_end":10359172,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359177,"byte_end":10359203,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359208,"byte_end":10359234,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359239,"byte_end":10359266,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359271,"byte_end":10359274,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359279,"byte_end":10359297,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359302,"byte_end":10359353,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359358,"byte_end":10359386,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359391,"byte_end":10359479,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359484,"byte_end":10359487,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359492,"byte_end":10359519,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359524,"byte_end":10359573,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359578,"byte_end":10359581,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359586,"byte_end":10359600,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359605,"byte_end":10359610,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359615,"byte_end":10359622,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359627,"byte_end":10359630,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359635,"byte_end":10359706,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359711,"byte_end":10359714,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359719,"byte_end":10359776,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10359781,"byte_end":10359834,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362292,"byte_end":10362300,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361325,"byte_end":10361382,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361387,"byte_end":10361390,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361395,"byte_end":10361470,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361475,"byte_end":10361548,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361553,"byte_end":10361556,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361561,"byte_end":10361575,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361580,"byte_end":10361583,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361588,"byte_end":10361606,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361611,"byte_end":10361637,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361642,"byte_end":10361672,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361677,"byte_end":10361680,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361685,"byte_end":10361703,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361708,"byte_end":10361759,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361764,"byte_end":10361838,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361843,"byte_end":10361897,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361902,"byte_end":10361916,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361921,"byte_end":10361926,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361931,"byte_end":10361938,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361943,"byte_end":10361946,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361951,"byte_end":10361963,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361968,"byte_end":10361971,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10361976,"byte_end":10362036,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362041,"byte_end":10362044,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362049,"byte_end":10362119,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362124,"byte_end":10362197,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362202,"byte_end":10362280,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10362697,"byte_end":10362708,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363856,"byte_end":10363866,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363457,"byte_end":10363516,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363521,"byte_end":10363524,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363529,"byte_end":10363543,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363548,"byte_end":10363551,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363556,"byte_end":10363569,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363574,"byte_end":10363604,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363609,"byte_end":10363612,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363617,"byte_end":10363681,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363686,"byte_end":10363747,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363752,"byte_end":10363755,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363760,"byte_end":10363803,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363808,"byte_end":10363820,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363825,"byte_end":10363832,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363837,"byte_end":10363844,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364355,"byte_end":10364364,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10363952,"byte_end":10364016,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364021,"byte_end":10364024,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364029,"byte_end":10364043,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364048,"byte_end":10364051,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364056,"byte_end":10364069,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364074,"byte_end":10364104,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364109,"byte_end":10364112,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364117,"byte_end":10364181,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364186,"byte_end":10364247,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364252,"byte_end":10364255,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364260,"byte_end":10364302,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364307,"byte_end":10364319,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364324,"byte_end":10364331,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364336,"byte_end":10364343,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365522,"byte_end":10365531,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364449,"byte_end":10364524,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364529,"byte_end":10364602,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364607,"byte_end":10364621,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364626,"byte_end":10364629,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364634,"byte_end":10364652,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364657,"byte_end":10364660,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364665,"byte_end":10364690,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364695,"byte_end":10364698,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364703,"byte_end":10364754,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364759,"byte_end":10364842,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364847,"byte_end":10364902,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364907,"byte_end":10364910,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364915,"byte_end":10364927,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364932,"byte_end":10364935,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10364940,"byte_end":10365015,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365020,"byte_end":10365023,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365028,"byte_end":10365042,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365047,"byte_end":10365050,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365055,"byte_end":10365068,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365073,"byte_end":10365091,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365096,"byte_end":10365126,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365131,"byte_end":10365134,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365139,"byte_end":10365172,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365177,"byte_end":10365180,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365185,"byte_end":10365203,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365208,"byte_end":10365247,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365252,"byte_end":10365321,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365326,"byte_end":10365356,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365361,"byte_end":10365364,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365369,"byte_end":10365391,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365396,"byte_end":10365438,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365443,"byte_end":10365461,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365466,"byte_end":10365469,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365474,"byte_end":10365488,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365493,"byte_end":10365498,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10365503,"byte_end":10365510,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367443,"byte_end":10367447,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366192,"byte_end":10366262,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366267,"byte_end":10366336,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366341,"byte_end":10366380,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366385,"byte_end":10366388,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366393,"byte_end":10366467,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366472,"byte_end":10366532,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366537,"byte_end":10366540,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366545,"byte_end":10366559,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366564,"byte_end":10366567,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366572,"byte_end":10366585,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366590,"byte_end":10366620,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366625,"byte_end":10366651,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366656,"byte_end":10366682,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366687,"byte_end":10366690,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366695,"byte_end":10366713,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366718,"byte_end":10366769,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366774,"byte_end":10366802,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366807,"byte_end":10366876,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366881,"byte_end":10366884,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366889,"byte_end":10366918,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366923,"byte_end":10366952,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366957,"byte_end":10366960,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366965,"byte_end":10366992,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10366997,"byte_end":10367041,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367046,"byte_end":10367049,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367054,"byte_end":10367078,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367083,"byte_end":10367139,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367144,"byte_end":10367183,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367188,"byte_end":10367191,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367196,"byte_end":10367210,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367215,"byte_end":10367220,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367225,"byte_end":10367232,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367237,"byte_end":10367240,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367245,"byte_end":10367310,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367315,"byte_end":10367318,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367323,"byte_end":10367369,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367374,"byte_end":10367425,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368316,"byte_end":10368324,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367561,"byte_end":10367627,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367632,"byte_end":10367635,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367640,"byte_end":10367712,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367717,"byte_end":10367786,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367791,"byte_end":10367824,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367829,"byte_end":10367832,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367837,"byte_end":10367851,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367856,"byte_end":10367859,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367864,"byte_end":10367877,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367882,"byte_end":10367912,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367917,"byte_end":10367943,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367948,"byte_end":10367975,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367980,"byte_end":10367983,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10367988,"byte_end":10368006,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368011,"byte_end":10368062,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368067,"byte_end":10368095,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368100,"byte_end":10368165,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368170,"byte_end":10368173,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368178,"byte_end":10368208,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368213,"byte_end":10368255,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368260,"byte_end":10368263,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368268,"byte_end":10368282,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368287,"byte_end":10368292,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368297,"byte_end":10368304,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368950,"byte_end":10368957,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368418,"byte_end":10368480,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368485,"byte_end":10368488,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368493,"byte_end":10368557,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368562,"byte_end":10368565,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368570,"byte_end":10368613,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368618,"byte_end":10368621,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368626,"byte_end":10368640,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368645,"byte_end":10368648,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368653,"byte_end":10368666,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368671,"byte_end":10368701,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368706,"byte_end":10368709,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368714,"byte_end":10368778,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368783,"byte_end":10368844,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368849,"byte_end":10368852,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368857,"byte_end":10368897,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368902,"byte_end":10368914,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368919,"byte_end":10368926,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10368931,"byte_end":10368938,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369764,"byte_end":10369775,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369034,"byte_end":10369096,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369101,"byte_end":10369104,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369109,"byte_end":10369178,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369183,"byte_end":10369256,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369261,"byte_end":10369334,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369339,"byte_end":10369414,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369419,"byte_end":10369437,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369442,"byte_end":10369445,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369450,"byte_end":10369464,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369469,"byte_end":10369472,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369477,"byte_end":10369490,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369495,"byte_end":10369525,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369530,"byte_end":10369533,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369538,"byte_end":10369602,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369607,"byte_end":10369668,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369673,"byte_end":10369676,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369681,"byte_end":10369711,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369716,"byte_end":10369728,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369733,"byte_end":10369740,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369745,"byte_end":10369752,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370442,"byte_end":10370458,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369876,"byte_end":10369936,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369941,"byte_end":10369944,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10369949,"byte_end":10370022,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370027,"byte_end":10370030,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370035,"byte_end":10370096,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370101,"byte_end":10370104,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370109,"byte_end":10370123,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370128,"byte_end":10370131,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370136,"byte_end":10370149,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370154,"byte_end":10370184,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370189,"byte_end":10370192,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370197,"byte_end":10370261,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370266,"byte_end":10370327,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370332,"byte_end":10370335,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370340,"byte_end":10370389,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370394,"byte_end":10370406,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370411,"byte_end":10370418,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370423,"byte_end":10370430,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371050,"byte_end":10371070,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370545,"byte_end":10370605,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370610,"byte_end":10370613,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370618,"byte_end":10370690,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370695,"byte_end":10370715,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370720,"byte_end":10370723,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370728,"byte_end":10370742,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370747,"byte_end":10370750,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370755,"byte_end":10370768,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370773,"byte_end":10370803,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370808,"byte_end":10370811,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370816,"byte_end":10370880,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370885,"byte_end":10370946,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370951,"byte_end":10370954,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10370959,"byte_end":10370997,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371002,"byte_end":10371014,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371019,"byte_end":10371026,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371031,"byte_end":10371038,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371741,"byte_end":10371757,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371175,"byte_end":10371235,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371240,"byte_end":10371243,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371248,"byte_end":10371321,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371326,"byte_end":10371329,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371334,"byte_end":10371395,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371400,"byte_end":10371403,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371408,"byte_end":10371422,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371427,"byte_end":10371430,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371435,"byte_end":10371448,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371453,"byte_end":10371483,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371488,"byte_end":10371491,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371496,"byte_end":10371560,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371565,"byte_end":10371626,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371631,"byte_end":10371634,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371639,"byte_end":10371688,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371693,"byte_end":10371705,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371710,"byte_end":10371717,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371722,"byte_end":10371729,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372346,"byte_end":10372366,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371844,"byte_end":10371904,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371909,"byte_end":10371912,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371917,"byte_end":10371991,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10371996,"byte_end":10372011,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372016,"byte_end":10372019,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372024,"byte_end":10372038,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372043,"byte_end":10372046,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372051,"byte_end":10372064,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372069,"byte_end":10372099,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372104,"byte_end":10372107,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372112,"byte_end":10372176,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372181,"byte_end":10372242,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372247,"byte_end":10372250,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372255,"byte_end":10372293,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372298,"byte_end":10372310,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372315,"byte_end":10372322,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372327,"byte_end":10372334,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373068,"byte_end":10373077,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372471,"byte_end":10372547,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372552,"byte_end":10372590,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372595,"byte_end":10372598,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372603,"byte_end":10372669,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372674,"byte_end":10372677,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372682,"byte_end":10372729,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372734,"byte_end":10372737,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372742,"byte_end":10372756,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372761,"byte_end":10372764,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372769,"byte_end":10372782,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372787,"byte_end":10372817,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372822,"byte_end":10372825,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372830,"byte_end":10372894,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372899,"byte_end":10372960,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372965,"byte_end":10372968,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10372973,"byte_end":10373015,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373020,"byte_end":10373032,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373037,"byte_end":10373044,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373049,"byte_end":10373056,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374108,"byte_end":10374121,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373168,"byte_end":10373242,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373247,"byte_end":10373250,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373255,"byte_end":10373322,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373327,"byte_end":10373401,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373406,"byte_end":10373468,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373473,"byte_end":10373476,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373481,"byte_end":10373555,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373560,"byte_end":10373635,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373640,"byte_end":10373664,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373669,"byte_end":10373672,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373677,"byte_end":10373740,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373745,"byte_end":10373779,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373784,"byte_end":10373787,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373792,"byte_end":10373806,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373811,"byte_end":10373814,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373819,"byte_end":10373832,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373837,"byte_end":10373867,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373872,"byte_end":10373875,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373880,"byte_end":10373944,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10373949,"byte_end":10374010,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374015,"byte_end":10374018,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374023,"byte_end":10374055,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374060,"byte_end":10374072,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374077,"byte_end":10374084,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374089,"byte_end":10374096,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374752,"byte_end":10374755,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374240,"byte_end":10374298,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374303,"byte_end":10374306,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374311,"byte_end":10374371,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374376,"byte_end":10374379,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374384,"byte_end":10374419,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374424,"byte_end":10374427,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374432,"byte_end":10374446,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374451,"byte_end":10374454,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374459,"byte_end":10374472,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374477,"byte_end":10374507,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374512,"byte_end":10374515,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374520,"byte_end":10374584,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374589,"byte_end":10374650,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374655,"byte_end":10374658,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374663,"byte_end":10374699,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374704,"byte_end":10374716,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374721,"byte_end":10374728,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374733,"byte_end":10374740,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375322,"byte_end":10375329,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374827,"byte_end":10374885,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374890,"byte_end":10374893,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374898,"byte_end":10374974,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10374979,"byte_end":10375000,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375005,"byte_end":10375008,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375013,"byte_end":10375027,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375032,"byte_end":10375035,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375040,"byte_end":10375053,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375058,"byte_end":10375088,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375093,"byte_end":10375096,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375101,"byte_end":10375165,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375170,"byte_end":10375231,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375236,"byte_end":10375239,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375244,"byte_end":10375269,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375274,"byte_end":10375286,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375291,"byte_end":10375298,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375303,"byte_end":10375310,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375971,"byte_end":10375977,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375417,"byte_end":10375489,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375494,"byte_end":10375505,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375510,"byte_end":10375513,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375518,"byte_end":10375581,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375586,"byte_end":10375589,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375594,"byte_end":10375635,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375640,"byte_end":10375643,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375648,"byte_end":10375662,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375667,"byte_end":10375670,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375675,"byte_end":10375688,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375693,"byte_end":10375723,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375728,"byte_end":10375731,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375736,"byte_end":10375800,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375805,"byte_end":10375866,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375871,"byte_end":10375874,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375879,"byte_end":10375918,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375923,"byte_end":10375935,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375940,"byte_end":10375947,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10375952,"byte_end":10375959,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376919,"byte_end":10376929,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376065,"byte_end":10376135,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376140,"byte_end":10376151,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376156,"byte_end":10376159,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376164,"byte_end":10376239,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376244,"byte_end":10376307,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376312,"byte_end":10376383,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376388,"byte_end":10376405,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376410,"byte_end":10376413,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376418,"byte_end":10376491,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376496,"byte_end":10376572,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376577,"byte_end":10376593,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376598,"byte_end":10376601,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376606,"byte_end":10376620,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376625,"byte_end":10376628,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376633,"byte_end":10376646,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376651,"byte_end":10376681,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376686,"byte_end":10376689,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376694,"byte_end":10376758,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376763,"byte_end":10376824,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376829,"byte_end":10376832,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376837,"byte_end":10376866,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376871,"byte_end":10376883,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376888,"byte_end":10376895,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10376900,"byte_end":10376907,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377547,"byte_end":10377552,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377170,"byte_end":10377206,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377211,"byte_end":10377288,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377293,"byte_end":10377339,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377344,"byte_end":10377347,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377352,"byte_end":10377431,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377436,"byte_end":10377479,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377484,"byte_end":10377487,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377492,"byte_end":10377535,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10378208,"byte_end":10378218,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377637,"byte_end":10377714,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377719,"byte_end":10377765,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377770,"byte_end":10377773,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377778,"byte_end":10377856,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377861,"byte_end":10377909,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377914,"byte_end":10377917,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10377922,"byte_end":10378000,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10378005,"byte_end":10378086,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10378091,"byte_end":10378094,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10378099,"byte_end":10378132,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10378137,"byte_end":10378196,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":12024},{"krate":0,"index":3180}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\mod.rs","byte_start":10385471,"byte_end":10385493,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10385949,"byte_end":10385958,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3183}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386156,"byte_end":10386160,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386037,"byte_end":10386109,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386114,"byte_end":10386138,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387863,"byte_end":10387871,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386995,"byte_end":10387067,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387072,"byte_end":10387075,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387080,"byte_end":10387153,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387158,"byte_end":10387233,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387238,"byte_end":10387285,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387290,"byte_end":10387293,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387298,"byte_end":10387371,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387376,"byte_end":10387451,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387456,"byte_end":10387509,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387514,"byte_end":10387517,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387522,"byte_end":10387534,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387539,"byte_end":10387542,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387547,"byte_end":10387607,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387612,"byte_end":10387615,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387620,"byte_end":10387690,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387695,"byte_end":10387768,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10387773,"byte_end":10387851,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388255,"byte_end":10388260,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388063,"byte_end":10388140,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388145,"byte_end":10388218,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388223,"byte_end":10388243,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388395,"byte_end":10388405,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388324,"byte_end":10388383,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388677,"byte_end":10388684,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388491,"byte_end":10388565,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388570,"byte_end":10388643,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10388648,"byte_end":10388659,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389621,"byte_end":10389625,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389218,"byte_end":10389316,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389321,"byte_end":10389392,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389397,"byte_end":10389400,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389405,"byte_end":10389488,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389493,"byte_end":10389553,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389558,"byte_end":10389561,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389566,"byte_end":10389603,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10390131,"byte_end":10390139,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389735,"byte_end":10389806,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389811,"byte_end":10389825,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389830,"byte_end":10389833,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389838,"byte_end":10389851,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389856,"byte_end":10389859,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389864,"byte_end":10389927,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389932,"byte_end":10389990,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10389995,"byte_end":10390045,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10390050,"byte_end":10390053,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10390058,"byte_end":10390119,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10390846,"byte_end":10390855,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391873,"byte_end":10391877,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391233,"byte_end":10391312,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391317,"byte_end":10391401,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391406,"byte_end":10391438,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391443,"byte_end":10391446,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391451,"byte_end":10391532,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391537,"byte_end":10391620,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391625,"byte_end":10391659,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391664,"byte_end":10391667,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391672,"byte_end":10391755,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391760,"byte_end":10391805,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391810,"byte_end":10391813,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10391818,"byte_end":10391855,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392017,"byte_end":10392026,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392745,"byte_end":10392752,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392454,"byte_end":10392526,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392531,"byte_end":10392602,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392607,"byte_end":10392610,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392615,"byte_end":10392691,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10392696,"byte_end":10392727,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393648,"byte_end":10393659,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393170,"byte_end":10393226,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393231,"byte_end":10393234,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393239,"byte_end":10393252,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393257,"byte_end":10393260,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393265,"byte_end":10393333,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393338,"byte_end":10393341,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393346,"byte_end":10393410,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393415,"byte_end":10393489,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393494,"byte_end":10393562,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393567,"byte_end":10393570,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393575,"byte_end":10393636,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10393835,"byte_end":10393847,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394686,"byte_end":10394695,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394296,"byte_end":10394375,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394380,"byte_end":10394447,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394452,"byte_end":10394455,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394460,"byte_end":10394538,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394543,"byte_end":10394621,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394626,"byte_end":10394668,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10394854,"byte_end":10394868,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395570,"byte_end":10395579,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395353,"byte_end":10395417,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395422,"byte_end":10395425,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395430,"byte_end":10395496,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395501,"byte_end":10395504,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395509,"byte_end":10395558,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395835,"byte_end":10395848,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395658,"byte_end":10395722,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395727,"byte_end":10395730,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395735,"byte_end":10395806,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395811,"byte_end":10395823,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396187,"byte_end":10396204,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10395941,"byte_end":10396010,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396015,"byte_end":10396018,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396023,"byte_end":10396097,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396102,"byte_end":10396105,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396110,"byte_end":10396175,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396544,"byte_end":10396565,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396291,"byte_end":10396360,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396365,"byte_end":10396368,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396373,"byte_end":10396447,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396452,"byte_end":10396455,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396460,"byte_end":10396470,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396475,"byte_end":10396478,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396483,"byte_end":10396532,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396908,"byte_end":10396924,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396666,"byte_end":10396734,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396739,"byte_end":10396742,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396747,"byte_end":10396820,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396825,"byte_end":10396828,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10396833,"byte_end":10396896,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397403,"byte_end":10397423,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397009,"byte_end":10397077,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397082,"byte_end":10397085,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397090,"byte_end":10397160,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397165,"byte_end":10397239,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397244,"byte_end":10397306,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397311,"byte_end":10397314,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397319,"byte_end":10397329,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397334,"byte_end":10397337,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397342,"byte_end":10397391,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397772,"byte_end":10397789,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397524,"byte_end":10397595,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397600,"byte_end":10397603,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397608,"byte_end":10397682,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397687,"byte_end":10397690,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397695,"byte_end":10397760,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398133,"byte_end":10398154,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397876,"byte_end":10397947,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397952,"byte_end":10397955,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10397960,"byte_end":10398036,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398041,"byte_end":10398044,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398049,"byte_end":10398059,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398064,"byte_end":10398067,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398072,"byte_end":10398121,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398448,"byte_end":10398451,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398255,"byte_end":10398313,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398318,"byte_end":10398321,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398326,"byte_end":10398386,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398391,"byte_end":10398394,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398399,"byte_end":10398436,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398708,"byte_end":10398715,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398523,"byte_end":10398581,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398586,"byte_end":10398589,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398594,"byte_end":10398670,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398675,"byte_end":10398696,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399233,"byte_end":10399250,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398803,"byte_end":10398861,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398866,"byte_end":10398869,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398874,"byte_end":10398948,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10398953,"byte_end":10399026,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399031,"byte_end":10399103,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399108,"byte_end":10399178,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399183,"byte_end":10399221,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399715,"byte_end":10399732,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399399,"byte_end":10399459,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399464,"byte_end":10399467,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399472,"byte_end":10399546,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399551,"byte_end":10399624,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399629,"byte_end":10399703,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400099,"byte_end":10400117,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399875,"byte_end":10399934,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399939,"byte_end":10399942,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10399947,"byte_end":10400017,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400022,"byte_end":10400025,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400030,"byte_end":10400087,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400493,"byte_end":10400511,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400267,"byte_end":10400328,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400333,"byte_end":10400336,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400341,"byte_end":10400411,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400416,"byte_end":10400419,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400424,"byte_end":10400481,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403146,"byte_end":10403154,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10402958,"byte_end":10403017,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403018,"byte_end":10403021,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403022,"byte_end":10403102,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403103,"byte_end":10403117,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403368,"byte_end":10403376,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403173,"byte_end":10403232,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403233,"byte_end":10403236,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403237,"byte_end":10403324,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403325,"byte_end":10403339,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403723,"byte_end":10403735,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403589,"byte_end":10403671,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403672,"byte_end":10403694,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403736,"byte_end":10403748,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403750,"byte_end":10403762,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404772,"byte_end":10404779,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404557,"byte_end":10404628,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404633,"byte_end":10404699,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404704,"byte_end":10404760,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405270,"byte_end":10405279,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404880,"byte_end":10404959,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404964,"byte_end":10405031,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405036,"byte_end":10405039,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405044,"byte_end":10405122,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405127,"byte_end":10405205,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405210,"byte_end":10405252,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406059,"byte_end":10406063,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405414,"byte_end":10405493,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405498,"byte_end":10405582,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405587,"byte_end":10405619,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405624,"byte_end":10405627,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405632,"byte_end":10405713,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405718,"byte_end":10405801,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405806,"byte_end":10405840,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405845,"byte_end":10405848,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405853,"byte_end":10405936,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405941,"byte_end":10405986,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405991,"byte_end":10405994,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10405999,"byte_end":10406041,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406412,"byte_end":10406419,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406197,"byte_end":10406268,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406273,"byte_end":10406339,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406344,"byte_end":10406400,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406811,"byte_end":10406818,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406520,"byte_end":10406592,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406597,"byte_end":10406668,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406673,"byte_end":10406676,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406681,"byte_end":10406757,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406762,"byte_end":10406793,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407370,"byte_end":10407374,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406962,"byte_end":10407060,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407065,"byte_end":10407136,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407141,"byte_end":10407144,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407149,"byte_end":10407232,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407237,"byte_end":10407297,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407302,"byte_end":10407305,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407310,"byte_end":10407352,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":3318},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":588},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":4139},{"krate":0,"index":4191},{"krate":0,"index":701},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":4222},{"krate":0,"index":4323},{"krate":0,"index":4522},{"krate":0,"index":4551},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":4552},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4568},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433340,"byte_end":10433349,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3860}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433525,"byte_end":10433534,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433500,"byte_end":10433513,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433752,"byte_end":10433757,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433727,"byte_end":10433740,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434087,"byte_end":10434099,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434007,"byte_end":10434075,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434605,"byte_end":10434613,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434226,"byte_end":10434288,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434293,"byte_end":10434296,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434301,"byte_end":10434315,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434320,"byte_end":10434323,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434328,"byte_end":10434335,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434340,"byte_end":10434359,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434364,"byte_end":10434367,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434372,"byte_end":10434390,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434395,"byte_end":10434416,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434421,"byte_end":10434459,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434464,"byte_end":10434491,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434496,"byte_end":10434526,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434531,"byte_end":10434534,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434539,"byte_end":10434571,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434576,"byte_end":10434581,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434586,"byte_end":10434593,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435520,"byte_end":10435530,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434739,"byte_end":10434818,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434823,"byte_end":10434826,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434831,"byte_end":10434843,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434848,"byte_end":10434851,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434856,"byte_end":10434930,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10434935,"byte_end":10435010,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435015,"byte_end":10435073,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435078,"byte_end":10435081,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435086,"byte_end":10435100,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435105,"byte_end":10435108,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435113,"byte_end":10435132,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435137,"byte_end":10435156,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435161,"byte_end":10435164,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435169,"byte_end":10435187,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435192,"byte_end":10435213,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435218,"byte_end":10435256,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435261,"byte_end":10435288,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435293,"byte_end":10435323,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435328,"byte_end":10435331,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435336,"byte_end":10435363,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435368,"byte_end":10435416,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435421,"byte_end":10435472,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435477,"byte_end":10435486,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435491,"byte_end":10435496,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435501,"byte_end":10435508,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436295,"byte_end":10436309,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435671,"byte_end":10435740,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435745,"byte_end":10435817,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435822,"byte_end":10435835,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435840,"byte_end":10435843,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435848,"byte_end":10435862,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435867,"byte_end":10435870,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435875,"byte_end":10435894,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435899,"byte_end":10435918,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435923,"byte_end":10435926,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435931,"byte_end":10435949,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435954,"byte_end":10435975,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10435980,"byte_end":10436018,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436023,"byte_end":10436050,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436055,"byte_end":10436085,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436090,"byte_end":10436093,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436098,"byte_end":10436148,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436153,"byte_end":10436201,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436206,"byte_end":10436247,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436252,"byte_end":10436261,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436266,"byte_end":10436271,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436276,"byte_end":10436283,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3861},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452675,"byte_end":10452685,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":142142,"byte_end":142160,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154715,"byte_end":154726,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154522,"byte_end":154582,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154587,"byte_end":154590,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154595,"byte_end":154646,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154651,"byte_end":154654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154659,"byte_end":154703,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":156251,"byte_end":156256,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160375,"byte_end":160383,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":163772,"byte_end":163786,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164175,"byte_end":164190,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164095,"byte_end":164163,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4552},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4607},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5043},{"krate":0,"index":5044},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5156},{"krate":0,"index":5271},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5192},{"krate":0,"index":5194}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554254,"byte_end":10554285,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554286,"byte_end":10554289,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554290,"byte_end":10554435,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554436,"byte_end":10554439,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10554440,"byte_end":10554491,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580172,"byte_end":10580181,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":5199},{"krate":0,"index":5200}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580018,"byte_end":10580075,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580093,"byte_end":10580160,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581335,"byte_end":10581344,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581181,"byte_end":10581238,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581256,"byte_end":10581323,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8739},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":10582464,"byte_end":10582469,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8742},{"krate":0,"index":8743}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8701},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10583702,"byte_end":10583709,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":8704},{"krate":0,"index":8705}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584274,"byte_end":10584284,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10583861,"byte_end":10583914,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10583915,"byte_end":10583918,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10583919,"byte_end":10583984,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10583985,"byte_end":10584041,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584042,"byte_end":10584045,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584046,"byte_end":10584064,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584065,"byte_end":10584068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584069,"byte_end":10584148,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584149,"byte_end":10584224,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584225,"byte_end":10584263,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589185,"byte_end":10589199,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589279,"byte_end":10589289,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589213,"byte_end":10589265,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589341,"byte_end":10589351,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589300,"byte_end":10589329,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589568,"byte_end":10589574,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589418,"byte_end":10589466,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589475,"byte_end":10589478,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589487,"byte_end":10589556,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589690,"byte_end":10589698,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10589637,"byte_end":10589678,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10589991,"byte_end":10589996,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10589865,"byte_end":10589913,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10589931,"byte_end":10589979,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590586,"byte_end":10590591,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590121,"byte_end":10590162,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590163,"byte_end":10590166,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590167,"byte_end":10590235,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590236,"byte_end":10590312,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590313,"byte_end":10590323,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590324,"byte_end":10590327,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590328,"byte_end":10590342,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590343,"byte_end":10590346,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590347,"byte_end":10590363,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590364,"byte_end":10590367,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590368,"byte_end":10590375,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590376,"byte_end":10590417,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590418,"byte_end":10590421,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590422,"byte_end":10590440,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590441,"byte_end":10590462,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590463,"byte_end":10590509,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590510,"byte_end":10590513,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590514,"byte_end":10590558,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590559,"byte_end":10590564,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590565,"byte_end":10590572,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8645},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591174,"byte_end":10591180,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":8648},{"krate":0,"index":8649}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8600},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10592612,"byte_end":10592621,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":8603},{"krate":0,"index":8604}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8551},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":10594038,"byte_end":10594048,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8511},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":10595204,"byte_end":10595208,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8513}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596340,"byte_end":10596344,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5226}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596216,"byte_end":10596262,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596280,"byte_end":10596328,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596918,"byte_end":10596922,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596396,"byte_end":10596460,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596461,"byte_end":10596489,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596490,"byte_end":10596493,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596494,"byte_end":10596567,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596568,"byte_end":10596623,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596624,"byte_end":10596627,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596628,"byte_end":10596635,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596636,"byte_end":10596658,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596659,"byte_end":10596700,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596701,"byte_end":10596704,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596705,"byte_end":10596753,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596754,"byte_end":10596757,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596758,"byte_end":10596804,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596805,"byte_end":10596851,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596852,"byte_end":10596894,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596895,"byte_end":10596902,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596903,"byte_end":10596910,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8457},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10597702,"byte_end":10597705,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8460},{"krate":0,"index":8461}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8408},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":10598775,"byte_end":10598780,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":8411},{"krate":0,"index":8412},{"krate":0,"index":8413}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600655,"byte_end":10600659,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5233}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600499,"byte_end":10600558,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600576,"byte_end":10600643,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601355,"byte_end":10601359,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":5240}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601231,"byte_end":10601277,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601295,"byte_end":10601343,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601931,"byte_end":10601935,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601435,"byte_end":10601491,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601492,"byte_end":10601495,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601496,"byte_end":10601575,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601576,"byte_end":10601579,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601580,"byte_end":10601594,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601595,"byte_end":10601598,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601599,"byte_end":10601606,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601607,"byte_end":10601648,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601649,"byte_end":10601652,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601653,"byte_end":10601671,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601672,"byte_end":10601693,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601694,"byte_end":10601732,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601733,"byte_end":10601771,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601772,"byte_end":10601775,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601776,"byte_end":10601822,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601823,"byte_end":10601826,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601827,"byte_end":10601865,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601866,"byte_end":10601909,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601910,"byte_end":10601915,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601916,"byte_end":10601923,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5244},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602558,"byte_end":10602565,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602428,"byte_end":10602480,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602498,"byte_end":10602546,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603305,"byte_end":10603312,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602696,"byte_end":10602736,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602737,"byte_end":10602740,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602741,"byte_end":10602799,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602800,"byte_end":10602871,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602872,"byte_end":10602941,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602942,"byte_end":10602986,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602987,"byte_end":10602990,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602991,"byte_end":10603005,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603006,"byte_end":10603009,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603010,"byte_end":10603026,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603027,"byte_end":10603030,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603031,"byte_end":10603044,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603045,"byte_end":10603086,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603087,"byte_end":10603090,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603091,"byte_end":10603109,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603110,"byte_end":10603131,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603132,"byte_end":10603181,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603182,"byte_end":10603185,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603186,"byte_end":10603221,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603222,"byte_end":10603249,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603250,"byte_end":10603253,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603254,"byte_end":10603277,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603278,"byte_end":10603283,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603284,"byte_end":10603291,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608961,"byte_end":10608970,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":5254}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603729,"byte_end":10603805,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603806,"byte_end":10603814,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603815,"byte_end":10603818,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603819,"byte_end":10603896,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603897,"byte_end":10603973,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10603974,"byte_end":10604050,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604051,"byte_end":10604085,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604086,"byte_end":10604089,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604090,"byte_end":10604110,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604111,"byte_end":10604114,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604115,"byte_end":10604158,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604159,"byte_end":10604219,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604220,"byte_end":10604298,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604299,"byte_end":10604332,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604333,"byte_end":10604336,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604337,"byte_end":10604416,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604417,"byte_end":10604497,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604498,"byte_end":10604570,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604571,"byte_end":10604595,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604596,"byte_end":10604599,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604600,"byte_end":10604613,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604614,"byte_end":10604617,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604618,"byte_end":10604696,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604697,"byte_end":10604766,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604767,"byte_end":10604846,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604847,"byte_end":10604878,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604879,"byte_end":10604882,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604883,"byte_end":10604903,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604904,"byte_end":10604907,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604908,"byte_end":10604985,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10604986,"byte_end":10605063,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605064,"byte_end":10605141,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605142,"byte_end":10605216,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605217,"byte_end":10605295,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605296,"byte_end":10605373,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605374,"byte_end":10605395,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605396,"byte_end":10605399,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605400,"byte_end":10605457,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605458,"byte_end":10605489,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605490,"byte_end":10605513,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605514,"byte_end":10605552,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605553,"byte_end":10605556,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605557,"byte_end":10605571,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605572,"byte_end":10605575,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605576,"byte_end":10605649,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605650,"byte_end":10605653,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605654,"byte_end":10605661,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605662,"byte_end":10605708,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605709,"byte_end":10605735,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605736,"byte_end":10605739,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605740,"byte_end":10605758,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605759,"byte_end":10605780,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605781,"byte_end":10605828,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605829,"byte_end":10605876,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605877,"byte_end":10605880,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605881,"byte_end":10605914,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605915,"byte_end":10605954,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605955,"byte_end":10605958,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10605959,"byte_end":10606039,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606040,"byte_end":10606112,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606113,"byte_end":10606151,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606152,"byte_end":10606163,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606164,"byte_end":10606167,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606168,"byte_end":10606201,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606202,"byte_end":10606241,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606242,"byte_end":10606280,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606281,"byte_end":10606292,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606293,"byte_end":10606296,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606297,"byte_end":10606336,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606337,"byte_end":10606340,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606341,"byte_end":10606371,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606372,"byte_end":10606403,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606404,"byte_end":10606435,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606436,"byte_end":10606439,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606440,"byte_end":10606461,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606462,"byte_end":10606485,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606486,"byte_end":10606541,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606542,"byte_end":10606545,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606546,"byte_end":10606575,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606576,"byte_end":10606611,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606612,"byte_end":10606632,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606633,"byte_end":10606668,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606669,"byte_end":10606682,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606683,"byte_end":10606686,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606687,"byte_end":10606753,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606754,"byte_end":10606782,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606783,"byte_end":10606792,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606793,"byte_end":10606798,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606799,"byte_end":10606806,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606807,"byte_end":10606810,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606811,"byte_end":10606889,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606890,"byte_end":10606966,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10606967,"byte_end":10607007,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607008,"byte_end":10607011,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607012,"byte_end":10607089,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607090,"byte_end":10607127,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607128,"byte_end":10607131,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607132,"byte_end":10607145,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607146,"byte_end":10607200,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607201,"byte_end":10607204,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607205,"byte_end":10607223,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607224,"byte_end":10607245,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607246,"byte_end":10607268,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607269,"byte_end":10607274,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607275,"byte_end":10607278,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607279,"byte_end":10607329,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607330,"byte_end":10607385,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607386,"byte_end":10607416,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607417,"byte_end":10607422,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607423,"byte_end":10607426,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607427,"byte_end":10607503,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607504,"byte_end":10607570,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607571,"byte_end":10607615,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607616,"byte_end":10607646,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607647,"byte_end":10607652,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607653,"byte_end":10607656,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607657,"byte_end":10607675,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607676,"byte_end":10607697,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607698,"byte_end":10607742,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607743,"byte_end":10607746,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607747,"byte_end":10607797,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607798,"byte_end":10607828,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607829,"byte_end":10607855,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607856,"byte_end":10607859,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607860,"byte_end":10607874,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607875,"byte_end":10607903,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607904,"byte_end":10607948,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607949,"byte_end":10607980,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10607981,"byte_end":10608029,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608030,"byte_end":10608106,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608107,"byte_end":10608148,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608149,"byte_end":10608200,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608201,"byte_end":10608257,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608258,"byte_end":10608283,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608284,"byte_end":10608333,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608334,"byte_end":10608385,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608386,"byte_end":10608411,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608412,"byte_end":10608433,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608434,"byte_end":10608451,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608452,"byte_end":10608508,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608509,"byte_end":10608589,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608590,"byte_end":10608632,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608633,"byte_end":10608683,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608684,"byte_end":10608701,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608702,"byte_end":10608777,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608778,"byte_end":10608854,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608855,"byte_end":10608885,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608886,"byte_end":10608899,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608900,"byte_end":10608909,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608910,"byte_end":10608915,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10608916,"byte_end":10608923,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609443,"byte_end":10609446,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609075,"byte_end":10609108,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609113,"byte_end":10609116,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609121,"byte_end":10609195,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609200,"byte_end":10609249,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609254,"byte_end":10609257,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609262,"byte_end":10609276,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609281,"byte_end":10609284,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609289,"byte_end":10609296,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609301,"byte_end":10609345,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609350,"byte_end":10609353,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609358,"byte_end":10609419,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609424,"byte_end":10609431,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609951,"byte_end":10609964,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609519,"byte_end":10609580,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609585,"byte_end":10609588,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609593,"byte_end":10609669,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609674,"byte_end":10609745,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609750,"byte_end":10609753,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609758,"byte_end":10609772,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609777,"byte_end":10609780,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609785,"byte_end":10609792,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609797,"byte_end":10609841,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609846,"byte_end":10609849,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609854,"byte_end":10609927,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609932,"byte_end":10609939,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610582,"byte_end":10610586,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610095,"byte_end":10610156,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610161,"byte_end":10610164,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610169,"byte_end":10610208,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610213,"byte_end":10610216,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610221,"byte_end":10610235,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610240,"byte_end":10610243,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610248,"byte_end":10610255,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610260,"byte_end":10610304,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610309,"byte_end":10610312,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610317,"byte_end":10610352,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610357,"byte_end":10610360,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610365,"byte_end":10610403,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610408,"byte_end":10610439,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610444,"byte_end":10610475,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610480,"byte_end":10610483,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610488,"byte_end":10610515,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610520,"byte_end":10610548,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610553,"byte_end":10610558,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610563,"byte_end":10610570,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611170,"byte_end":10611176,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610679,"byte_end":10610734,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610739,"byte_end":10610742,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610747,"byte_end":10610786,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610791,"byte_end":10610794,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610799,"byte_end":10610813,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610818,"byte_end":10610821,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610826,"byte_end":10610833,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610838,"byte_end":10610882,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610887,"byte_end":10610890,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610895,"byte_end":10610930,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610935,"byte_end":10610938,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610943,"byte_end":10610981,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10610986,"byte_end":10611017,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611022,"byte_end":10611053,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611058,"byte_end":10611061,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611066,"byte_end":10611098,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611103,"byte_end":10611136,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611141,"byte_end":10611146,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611151,"byte_end":10611158,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611776,"byte_end":10611786,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611269,"byte_end":10611332,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611337,"byte_end":10611340,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611345,"byte_end":10611388,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611393,"byte_end":10611396,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611401,"byte_end":10611415,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611420,"byte_end":10611423,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611428,"byte_end":10611435,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611440,"byte_end":10611484,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611489,"byte_end":10611492,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611497,"byte_end":10611532,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611537,"byte_end":10611540,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611545,"byte_end":10611583,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611588,"byte_end":10611619,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611624,"byte_end":10611655,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611660,"byte_end":10611663,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611668,"byte_end":10611704,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611709,"byte_end":10611742,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611747,"byte_end":10611752,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611757,"byte_end":10611764,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5023},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612364,"byte_end":10612372,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611891,"byte_end":10611963,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611968,"byte_end":10611971,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10611976,"byte_end":10612047,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612052,"byte_end":10612118,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612123,"byte_end":10612126,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612131,"byte_end":10612145,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612150,"byte_end":10612153,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612158,"byte_end":10612165,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612170,"byte_end":10612214,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612219,"byte_end":10612222,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612227,"byte_end":10612300,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612305,"byte_end":10612340,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612345,"byte_end":10612352,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5024},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612748,"byte_end":10612751,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612434,"byte_end":10612479,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612484,"byte_end":10612487,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612492,"byte_end":10612506,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612511,"byte_end":10612514,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612519,"byte_end":10612526,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612531,"byte_end":10612575,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612580,"byte_end":10612583,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612588,"byte_end":10612621,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612626,"byte_end":10612653,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612658,"byte_end":10612692,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612697,"byte_end":10612724,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612729,"byte_end":10612736,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5025},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613102,"byte_end":10613110,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612808,"byte_end":10612859,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612864,"byte_end":10612867,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612872,"byte_end":10612886,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612891,"byte_end":10612894,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612899,"byte_end":10612906,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612911,"byte_end":10612945,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612950,"byte_end":10612953,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612958,"byte_end":10612989,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10612994,"byte_end":10613020,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613025,"byte_end":10613046,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613051,"byte_end":10613078,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613083,"byte_end":10613090,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613522,"byte_end":10613527,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613171,"byte_end":10613241,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613246,"byte_end":10613267,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613272,"byte_end":10613275,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613280,"byte_end":10613294,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613299,"byte_end":10613302,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613307,"byte_end":10613314,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613319,"byte_end":10613363,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613368,"byte_end":10613371,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613376,"byte_end":10613409,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613414,"byte_end":10613448,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613453,"byte_end":10613467,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613472,"byte_end":10613498,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613503,"byte_end":10613510,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614202,"byte_end":10614208,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613582,"byte_end":10613624,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613629,"byte_end":10613632,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613637,"byte_end":10613702,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613707,"byte_end":10613710,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613715,"byte_end":10613790,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613795,"byte_end":10613834,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613839,"byte_end":10613842,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613847,"byte_end":10613861,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613866,"byte_end":10613869,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613874,"byte_end":10613881,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613886,"byte_end":10613930,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613935,"byte_end":10613938,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613943,"byte_end":10613978,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613983,"byte_end":10613986,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10613991,"byte_end":10614047,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614052,"byte_end":10614081,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614086,"byte_end":10614089,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614094,"byte_end":10614124,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614129,"byte_end":10614178,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614183,"byte_end":10614190,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5028},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614939,"byte_end":10614945,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614387,"byte_end":10614488,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614493,"byte_end":10614496,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614501,"byte_end":10614575,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614580,"byte_end":10614644,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614649,"byte_end":10614652,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614657,"byte_end":10614671,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614676,"byte_end":10614679,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614684,"byte_end":10614691,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614696,"byte_end":10614740,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614745,"byte_end":10614748,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614753,"byte_end":10614788,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614793,"byte_end":10614829,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614834,"byte_end":10614872,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614877,"byte_end":10614915,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10614920,"byte_end":10614927,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5030},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615779,"byte_end":10615791,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615247,"byte_end":10615317,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615322,"byte_end":10615325,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615330,"byte_end":10615404,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615409,"byte_end":10615473,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615478,"byte_end":10615481,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615486,"byte_end":10615500,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615505,"byte_end":10615508,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615513,"byte_end":10615520,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615525,"byte_end":10615569,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615574,"byte_end":10615577,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615582,"byte_end":10615617,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615622,"byte_end":10615658,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615663,"byte_end":10615706,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615711,"byte_end":10615755,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10615760,"byte_end":10615767,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8371},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10618731,"byte_end":10618735,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8373},{"krate":0,"index":8374}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8326},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620297,"byte_end":10620306,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8329},{"krate":0,"index":8330}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622110,"byte_end":10622117,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":5266}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10621946,"byte_end":10622013,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622031,"byte_end":10622098,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8289},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10622966,"byte_end":10622970,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8240},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10624813,"byte_end":10624822,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8201},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":10656967,"byte_end":10656974,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8205},{"krate":0,"index":8206}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5158},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555495,"byte_end":10555504,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5163},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5189},{"krate":0,"index":5191}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555384,"byte_end":10555458,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555459,"byte_end":10555484,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556574,"byte_end":10556578,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555519,"byte_end":10555589,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555594,"byte_end":10555617,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555622,"byte_end":10555625,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555630,"byte_end":10555648,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555653,"byte_end":10555656,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555661,"byte_end":10555674,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555679,"byte_end":10555730,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555735,"byte_end":10555742,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555747,"byte_end":10555750,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555755,"byte_end":10555823,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555828,"byte_end":10555903,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555908,"byte_end":10555983,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555988,"byte_end":10556042,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556047,"byte_end":10556122,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556127,"byte_end":10556137,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556142,"byte_end":10556145,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556150,"byte_end":10556164,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556169,"byte_end":10556172,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556177,"byte_end":10556184,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556189,"byte_end":10556209,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556214,"byte_end":10556237,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556242,"byte_end":10556283,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556288,"byte_end":10556291,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556296,"byte_end":10556337,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556342,"byte_end":10556345,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556350,"byte_end":10556395,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556400,"byte_end":10556445,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556450,"byte_end":10556495,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556500,"byte_end":10556542,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556547,"byte_end":10556554,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556559,"byte_end":10556566,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557649,"byte_end":10557657,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556680,"byte_end":10556748,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556753,"byte_end":10556821,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556826,"byte_end":10556829,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556834,"byte_end":10556852,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556857,"byte_end":10556860,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556865,"byte_end":10556878,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556883,"byte_end":10556940,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556945,"byte_end":10556952,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556957,"byte_end":10556960,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10556965,"byte_end":10557029,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557034,"byte_end":10557096,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557101,"byte_end":10557161,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557166,"byte_end":10557209,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557214,"byte_end":10557217,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557222,"byte_end":10557236,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557241,"byte_end":10557244,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557249,"byte_end":10557256,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557261,"byte_end":10557281,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557286,"byte_end":10557309,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557314,"byte_end":10557355,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557360,"byte_end":10557363,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557368,"byte_end":10557435,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557440,"byte_end":10557443,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557448,"byte_end":10557501,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557506,"byte_end":10557559,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557564,"byte_end":10557617,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557622,"byte_end":10557629,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557634,"byte_end":10557641,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5163},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558725,"byte_end":10558728,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557801,"byte_end":10557876,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557881,"byte_end":10557904,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557909,"byte_end":10557912,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557917,"byte_end":10557989,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10557994,"byte_end":10558058,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558063,"byte_end":10558100,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558105,"byte_end":10558108,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558113,"byte_end":10558189,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558194,"byte_end":10558265,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558270,"byte_end":10558291,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558296,"byte_end":10558299,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558304,"byte_end":10558318,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558323,"byte_end":10558326,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558331,"byte_end":10558338,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558343,"byte_end":10558363,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558368,"byte_end":10558391,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558396,"byte_end":10558437,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558442,"byte_end":10558445,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558450,"byte_end":10558487,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558492,"byte_end":10558535,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558540,"byte_end":10558543,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558548,"byte_end":10558593,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558598,"byte_end":10558643,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558648,"byte_end":10558693,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558698,"byte_end":10558705,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558710,"byte_end":10558717,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5166},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561338,"byte_end":10561343,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558872,"byte_end":10558945,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558950,"byte_end":10558966,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558971,"byte_end":10558974,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10558979,"byte_end":10559055,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559060,"byte_end":10559125,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559130,"byte_end":10559205,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559210,"byte_end":10559284,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559289,"byte_end":10559332,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559337,"byte_end":10559340,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559345,"byte_end":10559420,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559425,"byte_end":10559491,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559496,"byte_end":10559539,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559544,"byte_end":10559547,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559552,"byte_end":10559623,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559628,"byte_end":10559631,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559636,"byte_end":10559679,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559684,"byte_end":10559687,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559692,"byte_end":10559706,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559711,"byte_end":10559714,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559719,"byte_end":10559726,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559731,"byte_end":10559764,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559769,"byte_end":10559795,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559800,"byte_end":10559820,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559825,"byte_end":10559828,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559833,"byte_end":10559861,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559866,"byte_end":10559869,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559874,"byte_end":10559882,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559887,"byte_end":10559905,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559910,"byte_end":10559918,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559923,"byte_end":10559960,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559965,"byte_end":10559986,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10559991,"byte_end":10560011,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560016,"byte_end":10560063,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560068,"byte_end":10560115,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560120,"byte_end":10560123,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560128,"byte_end":10560164,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560169,"byte_end":10560172,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560177,"byte_end":10560210,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560215,"byte_end":10560258,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560263,"byte_end":10560302,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560307,"byte_end":10560346,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560351,"byte_end":10560354,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560359,"byte_end":10560404,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560409,"byte_end":10560470,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560475,"byte_end":10560478,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560483,"byte_end":10560522,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560527,"byte_end":10560538,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560543,"byte_end":10560546,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560551,"byte_end":10560584,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560589,"byte_end":10560642,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560647,"byte_end":10560707,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560712,"byte_end":10560715,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560720,"byte_end":10560759,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560764,"byte_end":10560767,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560772,"byte_end":10560833,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560838,"byte_end":10560841,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560846,"byte_end":10560881,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560886,"byte_end":10560925,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560930,"byte_end":10560941,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560946,"byte_end":10560949,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10560954,"byte_end":10561001,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561006,"byte_end":10561053,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561058,"byte_end":10561105,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561110,"byte_end":10561157,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561162,"byte_end":10561209,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561214,"byte_end":10561217,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561222,"byte_end":10561261,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561266,"byte_end":10561308,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561313,"byte_end":10561318,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561323,"byte_end":10561330,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5168},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562648,"byte_end":10562654,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561499,"byte_end":10561571,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561576,"byte_end":10561590,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561595,"byte_end":10561598,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561603,"byte_end":10561678,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561683,"byte_end":10561729,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561734,"byte_end":10561806,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561811,"byte_end":10561860,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561865,"byte_end":10561923,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561928,"byte_end":10561931,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10561936,"byte_end":10562012,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562017,"byte_end":10562089,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562094,"byte_end":10562115,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562120,"byte_end":10562123,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562128,"byte_end":10562142,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562147,"byte_end":10562150,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562155,"byte_end":10562162,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562167,"byte_end":10562187,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562192,"byte_end":10562215,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562220,"byte_end":10562261,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562266,"byte_end":10562269,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562274,"byte_end":10562311,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562316,"byte_end":10562366,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562371,"byte_end":10562374,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562379,"byte_end":10562423,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562428,"byte_end":10562472,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562477,"byte_end":10562521,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562526,"byte_end":10562570,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562575,"byte_end":10562616,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562621,"byte_end":10562628,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562633,"byte_end":10562640,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564021,"byte_end":10564031,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562805,"byte_end":10562880,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562885,"byte_end":10562948,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562953,"byte_end":10562956,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10562961,"byte_end":10563036,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563041,"byte_end":10563093,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563098,"byte_end":10563174,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563179,"byte_end":10563239,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563244,"byte_end":10563247,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563252,"byte_end":10563328,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563333,"byte_end":10563409,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563414,"byte_end":10563435,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563440,"byte_end":10563443,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563448,"byte_end":10563462,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563467,"byte_end":10563474,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563479,"byte_end":10563499,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563504,"byte_end":10563527,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563532,"byte_end":10563573,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563578,"byte_end":10563581,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563586,"byte_end":10563623,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563628,"byte_end":10563671,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563676,"byte_end":10563727,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563732,"byte_end":10563739,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563744,"byte_end":10563747,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563752,"byte_end":10563796,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563801,"byte_end":10563845,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563850,"byte_end":10563894,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563899,"byte_end":10563943,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563948,"byte_end":10563989,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10563994,"byte_end":10564001,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564006,"byte_end":10564013,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566163,"byte_end":10566167,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564195,"byte_end":10564250,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564255,"byte_end":10564258,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564263,"byte_end":10564336,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564341,"byte_end":10564413,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564418,"byte_end":10564492,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564497,"byte_end":10564523,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564528,"byte_end":10564531,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564536,"byte_end":10564550,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564555,"byte_end":10564558,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564563,"byte_end":10564570,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564575,"byte_end":10564618,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564623,"byte_end":10564626,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564631,"byte_end":10564653,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564658,"byte_end":10564693,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564698,"byte_end":10564701,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564706,"byte_end":10564760,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564765,"byte_end":10564787,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564792,"byte_end":10564811,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564816,"byte_end":10564821,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564826,"byte_end":10564829,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564834,"byte_end":10564865,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564870,"byte_end":10564894,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564899,"byte_end":10564902,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10564907,"byte_end":10564999,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565004,"byte_end":10565037,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565042,"byte_end":10565082,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565087,"byte_end":10565090,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565095,"byte_end":10565144,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565149,"byte_end":10565178,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565183,"byte_end":10565221,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565226,"byte_end":10565246,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565251,"byte_end":10565284,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565289,"byte_end":10565302,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565307,"byte_end":10565316,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565321,"byte_end":10565326,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565331,"byte_end":10565334,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565339,"byte_end":10565357,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565362,"byte_end":10565383,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565388,"byte_end":10565436,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565441,"byte_end":10565444,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565449,"byte_end":10565490,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565495,"byte_end":10565544,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565549,"byte_end":10565595,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565600,"byte_end":10565649,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565654,"byte_end":10565700,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565705,"byte_end":10565708,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565713,"byte_end":10565749,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565754,"byte_end":10565793,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565798,"byte_end":10565801,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565806,"byte_end":10565855,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565860,"byte_end":10565906,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565911,"byte_end":10565914,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565919,"byte_end":10565980,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10565985,"byte_end":10566031,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566036,"byte_end":10566082,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566087,"byte_end":10566133,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566138,"byte_end":10566143,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566148,"byte_end":10566155,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566903,"byte_end":10566907,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566260,"byte_end":10566331,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566336,"byte_end":10566339,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566344,"byte_end":10566417,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566422,"byte_end":10566457,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566462,"byte_end":10566465,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566470,"byte_end":10566484,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566489,"byte_end":10566492,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566497,"byte_end":10566504,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566509,"byte_end":10566529,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566534,"byte_end":10566557,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566562,"byte_end":10566603,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566608,"byte_end":10566611,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566616,"byte_end":10566666,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566671,"byte_end":10566674,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566679,"byte_end":10566724,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566729,"byte_end":10566774,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566779,"byte_end":10566824,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566829,"byte_end":10566871,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566876,"byte_end":10566883,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10566888,"byte_end":10566895,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567800,"byte_end":10567810,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567013,"byte_end":10567076,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567081,"byte_end":10567104,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567109,"byte_end":10567112,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567117,"byte_end":10567192,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567197,"byte_end":10567269,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567274,"byte_end":10567338,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567343,"byte_end":10567346,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567351,"byte_end":10567365,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567370,"byte_end":10567373,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567378,"byte_end":10567385,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567390,"byte_end":10567410,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567415,"byte_end":10567438,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567443,"byte_end":10567484,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567489,"byte_end":10567492,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567497,"byte_end":10567563,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567568,"byte_end":10567571,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567576,"byte_end":10567621,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567626,"byte_end":10567671,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567676,"byte_end":10567721,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567726,"byte_end":10567768,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567773,"byte_end":10567780,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567785,"byte_end":10567792,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568507,"byte_end":10568511,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10567967,"byte_end":10568033,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568038,"byte_end":10568060,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568065,"byte_end":10568068,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568073,"byte_end":10568087,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568092,"byte_end":10568095,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568100,"byte_end":10568107,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568112,"byte_end":10568132,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568137,"byte_end":10568160,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568165,"byte_end":10568206,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568211,"byte_end":10568214,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568219,"byte_end":10568269,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568274,"byte_end":10568277,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568282,"byte_end":10568327,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568332,"byte_end":10568377,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568382,"byte_end":10568428,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568433,"byte_end":10568475,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568480,"byte_end":10568487,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568492,"byte_end":10568499,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569489,"byte_end":10569499,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568617,"byte_end":10568690,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568695,"byte_end":10568718,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568723,"byte_end":10568726,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568731,"byte_end":10568809,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568814,"byte_end":10568886,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568891,"byte_end":10568951,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568956,"byte_end":10568959,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10568964,"byte_end":10569027,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569032,"byte_end":10569035,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569040,"byte_end":10569054,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569059,"byte_end":10569062,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569067,"byte_end":10569074,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569079,"byte_end":10569099,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569104,"byte_end":10569127,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569132,"byte_end":10569173,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569178,"byte_end":10569252,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569257,"byte_end":10569260,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569265,"byte_end":10569310,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569315,"byte_end":10569360,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569365,"byte_end":10569410,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569415,"byte_end":10569457,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569462,"byte_end":10569469,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569474,"byte_end":10569481,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571078,"byte_end":10571081,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569656,"byte_end":10569717,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569722,"byte_end":10569725,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569730,"byte_end":10569800,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569805,"byte_end":10569875,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569880,"byte_end":10569945,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10569950,"byte_end":10570002,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570007,"byte_end":10570010,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570015,"byte_end":10570087,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570092,"byte_end":10570166,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570171,"byte_end":10570207,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570212,"byte_end":10570215,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570220,"byte_end":10570255,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570260,"byte_end":10570263,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570268,"byte_end":10570282,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570287,"byte_end":10570290,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570295,"byte_end":10570311,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570316,"byte_end":10570319,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570324,"byte_end":10570331,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570336,"byte_end":10570356,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570361,"byte_end":10570384,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570389,"byte_end":10570430,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570435,"byte_end":10570438,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570443,"byte_end":10570465,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570470,"byte_end":10570473,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570478,"byte_end":10570530,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570535,"byte_end":10570538,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570543,"byte_end":10570596,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570601,"byte_end":10570608,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570613,"byte_end":10570620,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570625,"byte_end":10570628,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570633,"byte_end":10570667,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570672,"byte_end":10570675,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570680,"byte_end":10570687,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570692,"byte_end":10570712,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570717,"byte_end":10570740,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570745,"byte_end":10570786,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570791,"byte_end":10570794,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570799,"byte_end":10570821,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570826,"byte_end":10570829,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570834,"byte_end":10570870,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570875,"byte_end":10570878,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570883,"byte_end":10570925,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570930,"byte_end":10570933,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10570938,"byte_end":10570997,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571002,"byte_end":10571046,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571051,"byte_end":10571058,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571063,"byte_end":10571070,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572606,"byte_end":10572609,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571246,"byte_end":10571305,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571310,"byte_end":10571313,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571318,"byte_end":10571388,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571393,"byte_end":10571466,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571471,"byte_end":10571535,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571540,"byte_end":10571560,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571565,"byte_end":10571568,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571573,"byte_end":10571645,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571650,"byte_end":10571723,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571728,"byte_end":10571763,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571768,"byte_end":10571771,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571776,"byte_end":10571812,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571817,"byte_end":10571820,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571825,"byte_end":10571841,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571846,"byte_end":10571849,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571854,"byte_end":10571861,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571866,"byte_end":10571886,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571891,"byte_end":10571914,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571919,"byte_end":10571960,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571965,"byte_end":10571968,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10571973,"byte_end":10571995,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572000,"byte_end":10572003,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572008,"byte_end":10572060,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572065,"byte_end":10572068,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572073,"byte_end":10572126,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572131,"byte_end":10572138,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572143,"byte_end":10572150,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572155,"byte_end":10572158,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572163,"byte_end":10572196,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572201,"byte_end":10572204,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572209,"byte_end":10572216,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572221,"byte_end":10572241,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572246,"byte_end":10572269,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572274,"byte_end":10572315,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572320,"byte_end":10572323,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572328,"byte_end":10572350,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572355,"byte_end":10572358,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572363,"byte_end":10572399,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572404,"byte_end":10572407,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572412,"byte_end":10572453,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572458,"byte_end":10572461,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572466,"byte_end":10572525,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572530,"byte_end":10572574,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572579,"byte_end":10572586,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572591,"byte_end":10572598,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5184},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573752,"byte_end":10573757,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572774,"byte_end":10572845,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572850,"byte_end":10572906,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572911,"byte_end":10572914,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572919,"byte_end":10572993,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10572998,"byte_end":10573034,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573039,"byte_end":10573042,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573047,"byte_end":10573061,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573066,"byte_end":10573069,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573074,"byte_end":10573081,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573086,"byte_end":10573127,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573132,"byte_end":10573135,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573140,"byte_end":10573158,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573163,"byte_end":10573184,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573189,"byte_end":10573235,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573240,"byte_end":10573286,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573291,"byte_end":10573294,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573299,"byte_end":10573339,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573344,"byte_end":10573347,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573352,"byte_end":10573401,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573406,"byte_end":10573455,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573460,"byte_end":10573509,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573514,"byte_end":10573563,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573568,"byte_end":10573617,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573622,"byte_end":10573671,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573676,"byte_end":10573722,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573727,"byte_end":10573732,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573737,"byte_end":10573744,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574350,"byte_end":10574354,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573913,"byte_end":10573982,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10573987,"byte_end":10574023,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574028,"byte_end":10574031,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574036,"byte_end":10574050,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574055,"byte_end":10574071,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574076,"byte_end":10574083,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574088,"byte_end":10574108,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574113,"byte_end":10574136,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574141,"byte_end":10574174,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574179,"byte_end":10574182,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574187,"byte_end":10574229,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574234,"byte_end":10574282,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574287,"byte_end":10574290,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574295,"byte_end":10574318,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574323,"byte_end":10574330,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574335,"byte_end":10574342,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576667,"byte_end":10576674,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574533,"byte_end":10574595,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574600,"byte_end":10574603,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574608,"byte_end":10574684,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574689,"byte_end":10574756,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574761,"byte_end":10574809,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574814,"byte_end":10574879,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574884,"byte_end":10574887,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574892,"byte_end":10574906,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574911,"byte_end":10574914,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574919,"byte_end":10574993,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10574998,"byte_end":10575070,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575075,"byte_end":10575150,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575155,"byte_end":10575217,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575222,"byte_end":10575225,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575230,"byte_end":10575241,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575246,"byte_end":10575249,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575254,"byte_end":10575324,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575329,"byte_end":10575367,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575372,"byte_end":10575375,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575380,"byte_end":10575394,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575399,"byte_end":10575402,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575407,"byte_end":10575423,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575428,"byte_end":10575431,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575436,"byte_end":10575443,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575448,"byte_end":10575489,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575494,"byte_end":10575497,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575502,"byte_end":10575520,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575525,"byte_end":10575546,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575551,"byte_end":10575582,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575587,"byte_end":10575626,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575631,"byte_end":10575662,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575667,"byte_end":10575693,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575698,"byte_end":10575721,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575726,"byte_end":10575729,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575734,"byte_end":10575777,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575782,"byte_end":10575787,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575792,"byte_end":10575799,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575804,"byte_end":10575807,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575812,"byte_end":10575854,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575859,"byte_end":10575862,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575867,"byte_end":10575874,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575879,"byte_end":10575920,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575925,"byte_end":10575928,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575933,"byte_end":10575951,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575956,"byte_end":10575977,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10575982,"byte_end":10576047,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576052,"byte_end":10576096,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576101,"byte_end":10576152,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576157,"byte_end":10576183,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576188,"byte_end":10576211,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576216,"byte_end":10576219,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576224,"byte_end":10576270,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576275,"byte_end":10576278,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576283,"byte_end":10576355,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576360,"byte_end":10576432,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576437,"byte_end":10576440,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576445,"byte_end":10576489,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576494,"byte_end":10576527,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576532,"byte_end":10576558,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576563,"byte_end":10576586,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576591,"byte_end":10576594,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576599,"byte_end":10576637,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576642,"byte_end":10576647,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576652,"byte_end":10576659,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5191},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579329,"byte_end":10579336,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":5158},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576814,"byte_end":10576866,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576871,"byte_end":10576874,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576879,"byte_end":10576951,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10576956,"byte_end":10577026,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577031,"byte_end":10577034,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577039,"byte_end":10577115,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577120,"byte_end":10577197,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577202,"byte_end":10577278,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577283,"byte_end":10577326,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577331,"byte_end":10577334,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577339,"byte_end":10577350,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577355,"byte_end":10577358,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577363,"byte_end":10577429,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577434,"byte_end":10577460,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577465,"byte_end":10577468,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577473,"byte_end":10577548,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577553,"byte_end":10577587,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577592,"byte_end":10577595,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577600,"byte_end":10577614,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577619,"byte_end":10577622,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577627,"byte_end":10577701,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577706,"byte_end":10577709,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577714,"byte_end":10577721,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577726,"byte_end":10577746,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577751,"byte_end":10577774,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577779,"byte_end":10577820,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577825,"byte_end":10577853,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577858,"byte_end":10577901,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577906,"byte_end":10577909,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577914,"byte_end":10577982,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577987,"byte_end":10577990,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10577995,"byte_end":10578062,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578067,"byte_end":10578124,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578129,"byte_end":10578186,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578191,"byte_end":10578248,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578253,"byte_end":10578307,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578312,"byte_end":10578315,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578320,"byte_end":10578405,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578410,"byte_end":10578486,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578491,"byte_end":10578548,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578553,"byte_end":10578603,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578608,"byte_end":10578665,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578670,"byte_end":10578727,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578732,"byte_end":10578786,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578791,"byte_end":10578794,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578799,"byte_end":10578870,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578875,"byte_end":10578938,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10578943,"byte_end":10579015,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579020,"byte_end":10579082,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579087,"byte_end":10579090,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579095,"byte_end":10579152,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579157,"byte_end":10579211,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579216,"byte_end":10579223,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579228,"byte_end":10579235,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579240,"byte_end":10579269,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5296},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":5297},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5497},{"krate":0,"index":5924},{"krate":0,"index":6012},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6186},{"krate":0,"index":6277},{"krate":0,"index":6415},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549},{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6596},{"krate":0,"index":6597}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658513,"byte_end":10658577,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658578,"byte_end":10658581,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658582,"byte_end":10658657,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658658,"byte_end":10658738,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658739,"byte_end":10658818,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658819,"byte_end":10658853,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658854,"byte_end":10658857,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658858,"byte_end":10658882,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658883,"byte_end":10658886,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658887,"byte_end":10658908,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658909,"byte_end":10658912,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658913,"byte_end":10658986,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10658987,"byte_end":10659066,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659067,"byte_end":10659136,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659137,"byte_end":10659140,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659141,"byte_end":10659220,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659221,"byte_end":10659298,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659299,"byte_end":10659374,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659375,"byte_end":10659447,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659448,"byte_end":10659520,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659521,"byte_end":10659598,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659599,"byte_end":10659612,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659613,"byte_end":10659616,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659617,"byte_end":10659695,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659696,"byte_end":10659757,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659758,"byte_end":10659761,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659762,"byte_end":10659786,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659787,"byte_end":10659790,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659791,"byte_end":10659870,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659871,"byte_end":10659949,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659950,"byte_end":10659994,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659995,"byte_end":10659998,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10659999,"byte_end":10660079,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660080,"byte_end":10660096,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660097,"byte_end":10660100,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660101,"byte_end":10660108,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660109,"byte_end":10660138,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660139,"byte_end":10660142,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660143,"byte_end":10660186,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660187,"byte_end":10660249,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660250,"byte_end":10660255,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660256,"byte_end":10660259,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660260,"byte_end":10660278,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660279,"byte_end":10660300,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660301,"byte_end":10660343,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660344,"byte_end":10660347,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660348,"byte_end":10660381,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660382,"byte_end":10660429,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660430,"byte_end":10660464,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660465,"byte_end":10660476,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660477,"byte_end":10660480,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660481,"byte_end":10660558,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660559,"byte_end":10660562,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660563,"byte_end":10660605,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660606,"byte_end":10660642,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660643,"byte_end":10660648,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660649,"byte_end":10660656,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660657,"byte_end":10660660,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660661,"byte_end":10660725,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660726,"byte_end":10660790,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660791,"byte_end":10660853,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660854,"byte_end":10660924,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660925,"byte_end":10660990,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10660991,"byte_end":10661001,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661002,"byte_end":10661005,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661006,"byte_end":10661022,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661023,"byte_end":10661026,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661027,"byte_end":10661034,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661035,"byte_end":10661078,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661079,"byte_end":10661130,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661131,"byte_end":10661136,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661137,"byte_end":10661140,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661141,"byte_end":10661159,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661160,"byte_end":10661181,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661182,"byte_end":10661233,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661234,"byte_end":10661270,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661271,"byte_end":10661282,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661283,"byte_end":10661286,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661287,"byte_end":10661364,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661365,"byte_end":10661368,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661369,"byte_end":10661411,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661412,"byte_end":10661457,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661458,"byte_end":10661463,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661464,"byte_end":10661471,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661472,"byte_end":10661475,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661476,"byte_end":10661498,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661499,"byte_end":10661542,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661543,"byte_end":10661546,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661547,"byte_end":10661568,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661569,"byte_end":10661572,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661573,"byte_end":10661650,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661651,"byte_end":10661731,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661732,"byte_end":10661787,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661788,"byte_end":10661791,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661792,"byte_end":10661870,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661871,"byte_end":10661891,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661892,"byte_end":10661895,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661896,"byte_end":10661903,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661904,"byte_end":10661930,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661931,"byte_end":10661934,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661935,"byte_end":10661988,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10661989,"byte_end":10662043,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662044,"byte_end":10662049,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662050,"byte_end":10662053,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662054,"byte_end":10662072,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662073,"byte_end":10662094,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662095,"byte_end":10662145,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662146,"byte_end":10662149,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662150,"byte_end":10662183,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662184,"byte_end":10662212,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662213,"byte_end":10662265,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662266,"byte_end":10662310,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662311,"byte_end":10662324,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662325,"byte_end":10662336,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662337,"byte_end":10662340,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662341,"byte_end":10662388,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662389,"byte_end":10662427,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662428,"byte_end":10662437,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662438,"byte_end":10662443,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662444,"byte_end":10662451,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662452,"byte_end":10662455,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662456,"byte_end":10662536,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662537,"byte_end":10662614,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662615,"byte_end":10662688,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662689,"byte_end":10662764,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662765,"byte_end":10662778,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662779,"byte_end":10662782,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662783,"byte_end":10662858,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662859,"byte_end":10662938,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10662939,"byte_end":10663017,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663018,"byte_end":10663097,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663098,"byte_end":10663178,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663179,"byte_end":10663244,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663245,"byte_end":10663248,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663249,"byte_end":10663329,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663330,"byte_end":10663342,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663343,"byte_end":10663346,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663347,"byte_end":10663360,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663361,"byte_end":10663402,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663403,"byte_end":10663433,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663434,"byte_end":10663460,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663461,"byte_end":10663464,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663465,"byte_end":10663483,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663484,"byte_end":10663523,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663524,"byte_end":10663599,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663600,"byte_end":10663646,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663647,"byte_end":10663650,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663651,"byte_end":10663675,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663676,"byte_end":10663755,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663756,"byte_end":10663787,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663788,"byte_end":10663824,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663825,"byte_end":10663828,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663829,"byte_end":10663866,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663867,"byte_end":10663929,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663930,"byte_end":10663945,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663946,"byte_end":10663955,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663956,"byte_end":10663959,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10663960,"byte_end":10664039,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664040,"byte_end":10664115,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664116,"byte_end":10664194,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664195,"byte_end":10664242,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664243,"byte_end":10664260,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664261,"byte_end":10664264,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664265,"byte_end":10664312,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664313,"byte_end":10664354,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664355,"byte_end":10664364,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664365,"byte_end":10664368,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664369,"byte_end":10664383,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664384,"byte_end":10664389,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664390,"byte_end":10664397,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664398,"byte_end":10664401,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664402,"byte_end":10664477,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664478,"byte_end":10664553,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664554,"byte_end":10664633,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664634,"byte_end":10664699,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664700,"byte_end":10664777,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664778,"byte_end":10664781,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664782,"byte_end":10664860,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664861,"byte_end":10664941,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664942,"byte_end":10664987,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664988,"byte_end":10664991,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10664992,"byte_end":10664999,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665000,"byte_end":10665037,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665038,"byte_end":10665065,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665066,"byte_end":10665069,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665070,"byte_end":10665088,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665089,"byte_end":10665107,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665108,"byte_end":10665151,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665152,"byte_end":10665157,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665158,"byte_end":10665161,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665162,"byte_end":10665180,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665181,"byte_end":10665202,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665203,"byte_end":10665292,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665293,"byte_end":10665296,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665297,"byte_end":10665342,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665343,"byte_end":10665376,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665377,"byte_end":10665414,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665415,"byte_end":10665418,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665419,"byte_end":10665486,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665487,"byte_end":10665514,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665515,"byte_end":10665549,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665550,"byte_end":10665593,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665594,"byte_end":10665631,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665632,"byte_end":10665685,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665686,"byte_end":10665707,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665708,"byte_end":10665725,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665726,"byte_end":10665739,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665740,"byte_end":10665751,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665752,"byte_end":10665755,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665756,"byte_end":10665794,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665795,"byte_end":10665798,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665799,"byte_end":10665859,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665860,"byte_end":10665884,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665885,"byte_end":10665929,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665930,"byte_end":10665933,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665934,"byte_end":10665989,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10665990,"byte_end":10666050,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666051,"byte_end":10666054,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666055,"byte_end":10666125,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666126,"byte_end":10666175,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666176,"byte_end":10666179,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666180,"byte_end":10666233,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666234,"byte_end":10666250,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666251,"byte_end":10666260,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666261,"byte_end":10666264,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666265,"byte_end":10666306,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666307,"byte_end":10666358,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666359,"byte_end":10666398,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666399,"byte_end":10666408,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666409,"byte_end":10666414,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666415,"byte_end":10666422,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666423,"byte_end":10666426,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666427,"byte_end":10666443,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666444,"byte_end":10666447,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666448,"byte_end":10666474,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666475,"byte_end":10666478,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666479,"byte_end":10666546,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666547,"byte_end":10666619,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666620,"byte_end":10666693,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666694,"byte_end":10666747,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666748,"byte_end":10666751,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666752,"byte_end":10666832,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666833,"byte_end":10666855,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666856,"byte_end":10666859,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666860,"byte_end":10666875,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666876,"byte_end":10666879,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666880,"byte_end":10666887,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666888,"byte_end":10666919,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666920,"byte_end":10666923,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666924,"byte_end":10666942,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666943,"byte_end":10666964,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10666965,"byte_end":10667016,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667017,"byte_end":10667054,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667055,"byte_end":10667058,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667059,"byte_end":10667092,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667093,"byte_end":10667147,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667148,"byte_end":10667202,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667203,"byte_end":10667214,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667215,"byte_end":10667218,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667219,"byte_end":10667252,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667253,"byte_end":10667307,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667308,"byte_end":10667362,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667363,"byte_end":10667374,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667375,"byte_end":10667378,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667379,"byte_end":10667408,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667409,"byte_end":10667438,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667439,"byte_end":10667444,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667445,"byte_end":10667452,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667453,"byte_end":10667456,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667457,"byte_end":10667506,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667507,"byte_end":10667510,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667511,"byte_end":10667533,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667534,"byte_end":10667537,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667538,"byte_end":10667614,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667615,"byte_end":10667693,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667694,"byte_end":10667773,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667774,"byte_end":10667839,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667840,"byte_end":10667843,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667844,"byte_end":10667924,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667925,"byte_end":10667928,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10667929,"byte_end":10668003,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668004,"byte_end":10668077,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668078,"byte_end":10668091,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668092,"byte_end":10668095,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668096,"byte_end":10668169,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668170,"byte_end":10668250,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668251,"byte_end":10668326,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668327,"byte_end":10668330,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668331,"byte_end":10668338,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668339,"byte_end":10668366,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668367,"byte_end":10668414,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668415,"byte_end":10668418,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668419,"byte_end":10668435,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668436,"byte_end":10668439,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668440,"byte_end":10668482,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668483,"byte_end":10668502,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668503,"byte_end":10668529,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668530,"byte_end":10668535,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668536,"byte_end":10668539,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668540,"byte_end":10668557,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668558,"byte_end":10668615,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668616,"byte_end":10668674,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668675,"byte_end":10668727,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668728,"byte_end":10668737,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668738,"byte_end":10668743,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668744,"byte_end":10668747,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668748,"byte_end":10668783,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668784,"byte_end":10668812,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668813,"byte_end":10668818,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668819,"byte_end":10668822,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668823,"byte_end":10668841,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668842,"byte_end":10668863,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668864,"byte_end":10668907,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668908,"byte_end":10668973,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668974,"byte_end":10668977,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10668978,"byte_end":10669056,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669057,"byte_end":10669111,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669112,"byte_end":10669115,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669116,"byte_end":10669160,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669161,"byte_end":10669194,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669195,"byte_end":10669213,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669214,"byte_end":10669263,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669264,"byte_end":10669327,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669328,"byte_end":10669331,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669332,"byte_end":10669378,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669379,"byte_end":10669452,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669453,"byte_end":10669456,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669457,"byte_end":10669531,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669532,"byte_end":10669572,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669573,"byte_end":10669614,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669615,"byte_end":10669677,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669678,"byte_end":10669718,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669719,"byte_end":10669736,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669737,"byte_end":10669750,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669751,"byte_end":10669762,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669763,"byte_end":10669766,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669767,"byte_end":10669800,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669801,"byte_end":10669804,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669805,"byte_end":10669883,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669884,"byte_end":10669938,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669939,"byte_end":10669949,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10669950,"byte_end":10670027,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670028,"byte_end":10670106,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670107,"byte_end":10670142,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670143,"byte_end":10670166,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670167,"byte_end":10670230,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670231,"byte_end":10670267,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670268,"byte_end":10670271,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670272,"byte_end":10670322,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670323,"byte_end":10670402,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670403,"byte_end":10670478,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670479,"byte_end":10670532,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670533,"byte_end":10670579,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670580,"byte_end":10670612,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670613,"byte_end":10670616,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670617,"byte_end":10670695,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670696,"byte_end":10670772,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670773,"byte_end":10670821,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670822,"byte_end":10670878,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670879,"byte_end":10670882,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670883,"byte_end":10670933,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10670934,"byte_end":10671009,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671010,"byte_end":10671013,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671014,"byte_end":10671036,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671037,"byte_end":10671073,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671074,"byte_end":10671117,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671118,"byte_end":10671182,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671183,"byte_end":10671240,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671241,"byte_end":10671244,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671245,"byte_end":10671300,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671301,"byte_end":10671355,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671356,"byte_end":10671359,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671360,"byte_end":10671410,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671411,"byte_end":10671490,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671491,"byte_end":10671516,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671517,"byte_end":10671566,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671567,"byte_end":10671620,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671621,"byte_end":10671624,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671625,"byte_end":10671702,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671703,"byte_end":10671772,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671773,"byte_end":10671838,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671839,"byte_end":10671864,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671865,"byte_end":10671905,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671906,"byte_end":10671961,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671962,"byte_end":10671996,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10671997,"byte_end":10672022,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672023,"byte_end":10672044,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672045,"byte_end":10672062,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672063,"byte_end":10672078,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672079,"byte_end":10672082,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672083,"byte_end":10672116,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672117,"byte_end":10672126,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672127,"byte_end":10672130,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672131,"byte_end":10672172,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672173,"byte_end":10672207,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672208,"byte_end":10672217,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672218,"byte_end":10672223,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672224,"byte_end":10672231,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672232,"byte_end":10672235,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672236,"byte_end":10672281,"line_start":402,"line_end":402,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672282,"byte_end":10672335,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672336,"byte_end":10672339,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672340,"byte_end":10672367,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672368,"byte_end":10672371,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672372,"byte_end":10672446,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672447,"byte_end":10672521,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672522,"byte_end":10672598,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672599,"byte_end":10672649,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672650,"byte_end":10672653,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672654,"byte_end":10672731,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672732,"byte_end":10672809,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672810,"byte_end":10672813,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672814,"byte_end":10672891,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672892,"byte_end":10672947,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672948,"byte_end":10672951,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10672952,"byte_end":10673031,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673032,"byte_end":10673110,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673111,"byte_end":10673136,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673137,"byte_end":10673140,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673141,"byte_end":10673216,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673217,"byte_end":10673293,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673294,"byte_end":10673361,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673362,"byte_end":10673365,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673366,"byte_end":10673442,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673443,"byte_end":10673519,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673520,"byte_end":10673594,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673595,"byte_end":10673622,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6685},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675756,"byte_end":10675763,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674803,"byte_end":10674891,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674892,"byte_end":10674895,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674896,"byte_end":10674903,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674904,"byte_end":10674924,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674925,"byte_end":10674948,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674949,"byte_end":10674978,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674979,"byte_end":10674982,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10674983,"byte_end":10675017,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675018,"byte_end":10675041,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675042,"byte_end":10675045,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675046,"byte_end":10675091,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675092,"byte_end":10675137,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675138,"byte_end":10675158,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675159,"byte_end":10675191,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675192,"byte_end":10675246,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675247,"byte_end":10675292,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675293,"byte_end":10675326,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675327,"byte_end":10675363,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675364,"byte_end":10675400,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675401,"byte_end":10675436,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675437,"byte_end":10675451,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675452,"byte_end":10675463,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675464,"byte_end":10675469,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675470,"byte_end":10675544,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675545,"byte_end":10675583,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675584,"byte_end":10675639,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675640,"byte_end":10675711,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675712,"byte_end":10675719,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675720,"byte_end":10675727,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676226,"byte_end":10676229,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675986,"byte_end":10676053,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676058,"byte_end":10676061,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676066,"byte_end":10676154,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676159,"byte_end":10676214,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10677302,"byte_end":10677306,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676828,"byte_end":10676888,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676893,"byte_end":10676896,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676901,"byte_end":10676977,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10676982,"byte_end":10677007,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10677012,"byte_end":10677015,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10677020,"byte_end":10677113,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10677118,"byte_end":10677211,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10677216,"byte_end":10677284,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6697},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679228,"byte_end":10679245,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679092,"byte_end":10679192,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679493,"byte_end":10679502,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679283,"byte_end":10679350,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679355,"byte_end":10679358,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679363,"byte_end":10679455,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679460,"byte_end":10679481,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":13130},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":13136},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":6704},{"krate":0,"index":6708},{"krate":0,"index":6711},{"krate":0,"index":6721},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6723},{"krate":0,"index":6735},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":5340},{"krate":0,"index":5346},{"krate":0,"index":5351},{"krate":0,"index":5357},{"krate":0,"index":5362},{"krate":0,"index":5366},{"krate":0,"index":5372},{"krate":0,"index":5376},{"krate":0,"index":5379},{"krate":0,"index":5383},{"krate":0,"index":5386},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5392},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5398},{"krate":0,"index":5400},{"krate":0,"index":5409},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5417},{"krate":0,"index":5421},{"krate":0,"index":5441},{"krate":0,"index":5446},{"krate":0,"index":5451},{"krate":0,"index":5456},{"krate":0,"index":6737},{"krate":0,"index":6738},{"krate":0,"index":6742},{"krate":0,"index":5461},{"krate":0,"index":5467},{"krate":0,"index":5473},{"krate":0,"index":5476},{"krate":0,"index":5479},{"krate":0,"index":5484},{"krate":0,"index":5489},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5494},{"krate":0,"index":5495}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679544,"byte_end":10679624,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679625,"byte_end":10679643,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679644,"byte_end":10679647,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679648,"byte_end":10679726,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679727,"byte_end":10679802,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679803,"byte_end":10679881,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679882,"byte_end":10679936,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679937,"byte_end":10679940,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10679941,"byte_end":10680017,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680018,"byte_end":10680098,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680099,"byte_end":10680176,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680177,"byte_end":10680227,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680228,"byte_end":10680231,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680232,"byte_end":10680310,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680311,"byte_end":10680368,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680369,"byte_end":10680372,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680373,"byte_end":10680451,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680452,"byte_end":10680524,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680525,"byte_end":10680541,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680542,"byte_end":10680545,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680546,"byte_end":10680560,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680561,"byte_end":10680564,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680565,"byte_end":10680645,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680646,"byte_end":10680725,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680726,"byte_end":10680803,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680804,"byte_end":10680882,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680883,"byte_end":10680890,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680891,"byte_end":10680894,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680895,"byte_end":10680972,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10680973,"byte_end":10681048,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681049,"byte_end":10681129,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681130,"byte_end":10681133,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681134,"byte_end":10681206,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681207,"byte_end":10681285,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681286,"byte_end":10681362,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681363,"byte_end":10681422,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681423,"byte_end":10681426,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681427,"byte_end":10681505,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681506,"byte_end":10681580,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681581,"byte_end":10681617,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681618,"byte_end":10681621,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681622,"byte_end":10681701,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681702,"byte_end":10681779,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681780,"byte_end":10681855,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681856,"byte_end":10681887,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681888,"byte_end":10681891,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681892,"byte_end":10681906,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681907,"byte_end":10681910,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681911,"byte_end":10681986,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10681987,"byte_end":10682065,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682066,"byte_end":10682143,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682144,"byte_end":10682175,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682176,"byte_end":10682179,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682180,"byte_end":10682226,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682227,"byte_end":10682295,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682296,"byte_end":10682346,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682347,"byte_end":10682395,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682396,"byte_end":10682464,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682465,"byte_end":10682533,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682534,"byte_end":10682586,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682587,"byte_end":10682590,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682591,"byte_end":10682605,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682606,"byte_end":10682609,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682610,"byte_end":10682625,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682626,"byte_end":10682629,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682630,"byte_end":10682637,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682638,"byte_end":10682669,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682670,"byte_end":10682673,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682674,"byte_end":10682692,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682693,"byte_end":10682714,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682715,"byte_end":10682766,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682767,"byte_end":10682804,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682805,"byte_end":10682808,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682809,"byte_end":10682842,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682843,"byte_end":10682897,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682898,"byte_end":10682952,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682953,"byte_end":10682964,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682965,"byte_end":10682968,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10682969,"byte_end":10683002,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683003,"byte_end":10683057,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683058,"byte_end":10683112,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683113,"byte_end":10683124,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683125,"byte_end":10683128,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683129,"byte_end":10683158,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683159,"byte_end":10683188,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683189,"byte_end":10683194,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683195,"byte_end":10683202,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683203,"byte_end":10683206,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683207,"byte_end":10683223,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683224,"byte_end":10683227,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683228,"byte_end":10683235,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683236,"byte_end":10683267,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683268,"byte_end":10683271,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683272,"byte_end":10683290,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683291,"byte_end":10683312,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683313,"byte_end":10683362,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683363,"byte_end":10683366,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683367,"byte_end":10683396,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683397,"byte_end":10683426,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683427,"byte_end":10683456,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683457,"byte_end":10683460,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683461,"byte_end":10683498,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683499,"byte_end":10683541,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683542,"byte_end":10683545,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683546,"byte_end":10683615,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683616,"byte_end":10683619,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683620,"byte_end":10683669,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683670,"byte_end":10683719,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10683720,"byte_end":10683725,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":5332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684922,"byte_end":10684928,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5334}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684129,"byte_end":10684175,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684176,"byte_end":10684179,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684180,"byte_end":10684240,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684241,"byte_end":10684268,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684269,"byte_end":10684272,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684273,"byte_end":10684287,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684288,"byte_end":10684291,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684292,"byte_end":10684299,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684300,"byte_end":10684331,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684332,"byte_end":10684335,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684336,"byte_end":10684354,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684355,"byte_end":10684376,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684377,"byte_end":10684428,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684429,"byte_end":10684466,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684467,"byte_end":10684470,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684471,"byte_end":10684504,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684505,"byte_end":10684559,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684560,"byte_end":10684614,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684615,"byte_end":10684626,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684627,"byte_end":10684630,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684631,"byte_end":10684664,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684665,"byte_end":10684719,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684720,"byte_end":10684774,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684775,"byte_end":10684786,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684787,"byte_end":10684790,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684791,"byte_end":10684820,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684821,"byte_end":10684850,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684851,"byte_end":10684856,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684857,"byte_end":10684864,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684865,"byte_end":10684868,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684869,"byte_end":10684910,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685768,"byte_end":10685776,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5337},{"krate":0,"index":5338},{"krate":0,"index":5339}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10684965,"byte_end":10685013,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685014,"byte_end":10685017,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685018,"byte_end":10685084,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685085,"byte_end":10685114,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685115,"byte_end":10685118,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685119,"byte_end":10685133,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685134,"byte_end":10685137,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685138,"byte_end":10685145,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685146,"byte_end":10685177,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685178,"byte_end":10685181,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685182,"byte_end":10685200,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685201,"byte_end":10685222,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685223,"byte_end":10685274,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685275,"byte_end":10685312,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685313,"byte_end":10685316,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685317,"byte_end":10685350,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685351,"byte_end":10685405,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685406,"byte_end":10685460,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685461,"byte_end":10685472,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685473,"byte_end":10685476,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685477,"byte_end":10685510,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685511,"byte_end":10685565,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685566,"byte_end":10685620,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685621,"byte_end":10685632,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685633,"byte_end":10685636,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685637,"byte_end":10685666,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685667,"byte_end":10685696,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685697,"byte_end":10685702,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685703,"byte_end":10685710,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685711,"byte_end":10685714,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10685715,"byte_end":10685756,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6704},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686319,"byte_end":10686328,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686022,"byte_end":10686075,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686076,"byte_end":10686079,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686080,"byte_end":10686152,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686153,"byte_end":10686230,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686231,"byte_end":10686290,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6707},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686332,"byte_end":10686337,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":6704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686667,"byte_end":10686673,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6711},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686570,"byte_end":10686645,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686650,"byte_end":10686662,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6714},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686879,"byte_end":10686885,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6711},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686680,"byte_end":10686752,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686757,"byte_end":10686817,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686822,"byte_end":10686825,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686830,"byte_end":10686874,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6711},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686554,"byte_end":10686563,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6714}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686341,"byte_end":10686408,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686409,"byte_end":10686412,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686413,"byte_end":10686465,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686466,"byte_end":10686516,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687272,"byte_end":10687277,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6723},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687139,"byte_end":10687197,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687202,"byte_end":10687267,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6726},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687381,"byte_end":10687387,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6723},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687284,"byte_end":10687359,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687364,"byte_end":10687376,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6728},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687636,"byte_end":10687642,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6723},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687394,"byte_end":10687468,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687473,"byte_end":10687541,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687546,"byte_end":10687574,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687579,"byte_end":10687582,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687587,"byte_end":10687631,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":6723},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687120,"byte_end":10687132,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6724},{"krate":0,"index":6726},{"krate":0,"index":6728}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686895,"byte_end":10686966,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686967,"byte_end":10686970,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10686971,"byte_end":10687031,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10687032,"byte_end":10687082,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691943,"byte_end":10691950,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690331,"byte_end":10690407,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690408,"byte_end":10690457,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690458,"byte_end":10690461,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690462,"byte_end":10690531,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690532,"byte_end":10690582,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690583,"byte_end":10690586,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690587,"byte_end":10690661,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690662,"byte_end":10690737,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690738,"byte_end":10690806,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690807,"byte_end":10690810,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690811,"byte_end":10690887,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690888,"byte_end":10690969,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690970,"byte_end":10691009,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691010,"byte_end":10691013,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691014,"byte_end":10691060,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691061,"byte_end":10691129,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691130,"byte_end":10691180,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691181,"byte_end":10691233,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691234,"byte_end":10691286,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691287,"byte_end":10691339,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691340,"byte_end":10691343,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691344,"byte_end":10691358,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691359,"byte_end":10691362,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691363,"byte_end":10691370,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691371,"byte_end":10691402,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691403,"byte_end":10691406,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691407,"byte_end":10691425,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691426,"byte_end":10691447,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691448,"byte_end":10691499,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691500,"byte_end":10691537,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691538,"byte_end":10691541,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691542,"byte_end":10691575,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691576,"byte_end":10691630,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691631,"byte_end":10691685,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691686,"byte_end":10691697,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691698,"byte_end":10691701,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691702,"byte_end":10691735,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691736,"byte_end":10691790,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691791,"byte_end":10691845,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691846,"byte_end":10691857,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691858,"byte_end":10691861,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691862,"byte_end":10691891,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691892,"byte_end":10691921,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691922,"byte_end":10691927,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10691928,"byte_end":10691935,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5402},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695017,"byte_end":10695021,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693167,"byte_end":10693241,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693246,"byte_end":10693282,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693287,"byte_end":10693290,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693295,"byte_end":10693370,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693375,"byte_end":10693441,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693446,"byte_end":10693497,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693502,"byte_end":10693505,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693510,"byte_end":10693522,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693527,"byte_end":10693530,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693535,"byte_end":10693609,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693614,"byte_end":10693690,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693695,"byte_end":10693748,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693753,"byte_end":10693756,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693761,"byte_end":10693771,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693776,"byte_end":10693779,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693784,"byte_end":10693856,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693861,"byte_end":10693936,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693941,"byte_end":10694002,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694007,"byte_end":10694010,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694015,"byte_end":10694088,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694093,"byte_end":10694158,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694163,"byte_end":10694181,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694186,"byte_end":10694189,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694194,"byte_end":10694244,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694249,"byte_end":10694309,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694314,"byte_end":10694317,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694322,"byte_end":10694336,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694341,"byte_end":10694344,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694349,"byte_end":10694356,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694361,"byte_end":10694392,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694397,"byte_end":10694400,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694405,"byte_end":10694423,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694428,"byte_end":10694449,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694454,"byte_end":10694505,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694510,"byte_end":10694547,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694552,"byte_end":10694555,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694560,"byte_end":10694593,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694598,"byte_end":10694652,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694657,"byte_end":10694711,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694716,"byte_end":10694727,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694732,"byte_end":10694735,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694740,"byte_end":10694773,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694778,"byte_end":10694832,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694837,"byte_end":10694891,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694896,"byte_end":10694907,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694912,"byte_end":10694915,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694920,"byte_end":10694949,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694954,"byte_end":10694983,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694988,"byte_end":10694993,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10694998,"byte_end":10695005,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695781,"byte_end":10695790,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695186,"byte_end":10695263,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695268,"byte_end":10695297,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695302,"byte_end":10695305,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695310,"byte_end":10695324,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695329,"byte_end":10695332,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695337,"byte_end":10695344,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695349,"byte_end":10695380,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695385,"byte_end":10695388,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695393,"byte_end":10695411,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695416,"byte_end":10695437,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695442,"byte_end":10695489,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695494,"byte_end":10695497,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695502,"byte_end":10695529,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695534,"byte_end":10695563,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695568,"byte_end":10695571,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695576,"byte_end":10695612,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695617,"byte_end":10695620,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695625,"byte_end":10695654,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695659,"byte_end":10695662,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695667,"byte_end":10695712,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695717,"byte_end":10695747,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695752,"byte_end":10695757,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10695762,"byte_end":10695769,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697377,"byte_end":10697391,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696225,"byte_end":10696267,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696272,"byte_end":10696275,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696280,"byte_end":10696356,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696361,"byte_end":10696434,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696439,"byte_end":10696459,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696464,"byte_end":10696467,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696472,"byte_end":10696482,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696487,"byte_end":10696490,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696495,"byte_end":10696565,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696570,"byte_end":10696638,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696643,"byte_end":10696656,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696661,"byte_end":10696664,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696669,"byte_end":10696721,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696726,"byte_end":10696776,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696781,"byte_end":10696827,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696832,"byte_end":10696892,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696897,"byte_end":10696945,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696950,"byte_end":10696953,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696958,"byte_end":10696972,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696977,"byte_end":10696980,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696985,"byte_end":10696992,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10696997,"byte_end":10697028,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697033,"byte_end":10697036,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697041,"byte_end":10697059,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697064,"byte_end":10697085,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697090,"byte_end":10697138,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697143,"byte_end":10697146,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697151,"byte_end":10697194,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697199,"byte_end":10697202,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697207,"byte_end":10697245,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697250,"byte_end":10697253,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697258,"byte_end":10697301,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697306,"byte_end":10697309,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697314,"byte_end":10697343,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697348,"byte_end":10697353,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10697358,"byte_end":10697365,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5423},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706105,"byte_end":10706113,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704446,"byte_end":10704519,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704524,"byte_end":10704527,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704532,"byte_end":10704604,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704609,"byte_end":10704633,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704638,"byte_end":10704641,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704646,"byte_end":10704726,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704731,"byte_end":10704805,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704810,"byte_end":10704813,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704818,"byte_end":10704891,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704896,"byte_end":10704970,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704975,"byte_end":10704978,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704983,"byte_end":10705059,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705064,"byte_end":10705140,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705145,"byte_end":10705216,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705221,"byte_end":10705294,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705299,"byte_end":10705372,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705377,"byte_end":10705448,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705453,"byte_end":10705505,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705510,"byte_end":10705513,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705518,"byte_end":10705570,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705575,"byte_end":10705635,"line_start":811,"line_end":811,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705640,"byte_end":10705690,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705695,"byte_end":10705698,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705703,"byte_end":10705717,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705722,"byte_end":10705725,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705730,"byte_end":10705737,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705742,"byte_end":10705773,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705778,"byte_end":10705781,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705786,"byte_end":10705804,"line_start":819,"line_end":819,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705809,"byte_end":10705830,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705835,"byte_end":10705885,"line_start":821,"line_end":821,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705890,"byte_end":10705893,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705898,"byte_end":10705938,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705943,"byte_end":10705946,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705951,"byte_end":10705980,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705985,"byte_end":10705988,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10705993,"byte_end":10706036,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706041,"byte_end":10706071,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706076,"byte_end":10706081,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706086,"byte_end":10706093,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706355,"byte_end":10706364,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10706282,"byte_end":10706343,"line_start":837,"line_end":837,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710395,"byte_end":10710399,"line_start":952,"line_end":952,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708179,"byte_end":10708225,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708230,"byte_end":10708233,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708238,"byte_end":10708306,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708311,"byte_end":10708343,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708348,"byte_end":10708351,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708356,"byte_end":10708426,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708431,"byte_end":10708505,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708510,"byte_end":10708513,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708518,"byte_end":10708594,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708599,"byte_end":10708675,"line_start":897,"line_end":897,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708680,"byte_end":10708748,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708753,"byte_end":10708826,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708831,"byte_end":10708900,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708905,"byte_end":10708950,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708955,"byte_end":10708958,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10708963,"byte_end":10709013,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709018,"byte_end":10709070,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709075,"byte_end":10709078,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709083,"byte_end":10709097,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709102,"byte_end":10709105,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709110,"byte_end":10709117,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709122,"byte_end":10709153,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709158,"byte_end":10709161,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709166,"byte_end":10709184,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709189,"byte_end":10709210,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709215,"byte_end":10709266,"line_start":913,"line_end":913,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709271,"byte_end":10709308,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709313,"byte_end":10709316,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709321,"byte_end":10709354,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709359,"byte_end":10709413,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709418,"byte_end":10709472,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709477,"byte_end":10709488,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709493,"byte_end":10709496,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709501,"byte_end":10709534,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709539,"byte_end":10709593,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709598,"byte_end":10709652,"line_start":923,"line_end":923,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709657,"byte_end":10709668,"line_start":924,"line_end":924,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709673,"byte_end":10709676,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709681,"byte_end":10709710,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709715,"byte_end":10709744,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709749,"byte_end":10709754,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709759,"byte_end":10709766,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709771,"byte_end":10709774,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709779,"byte_end":10709795,"line_start":931,"line_end":931,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709800,"byte_end":10709803,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709808,"byte_end":10709815,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709820,"byte_end":10709851,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709856,"byte_end":10709859,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709864,"byte_end":10709882,"line_start":936,"line_end":936,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709887,"byte_end":10709908,"line_start":937,"line_end":937,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709913,"byte_end":10709962,"line_start":938,"line_end":938,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709967,"byte_end":10709970,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10709975,"byte_end":10710004,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710009,"byte_end":10710038,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710043,"byte_end":10710072,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710077,"byte_end":10710080,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710085,"byte_end":10710122,"line_start":944,"line_end":944,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710127,"byte_end":10710169,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710174,"byte_end":10710177,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710182,"byte_end":10710251,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710256,"byte_end":10710259,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710264,"byte_end":10710313,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710318,"byte_end":10710367,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710372,"byte_end":10710377,"line_start":951,"line_end":951,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":6740},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10714991,"byte_end":10715002,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5497},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5571},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5799},{"krate":0,"index":5845},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5923}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718656,"byte_end":10718725,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718726,"byte_end":10718749,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718750,"byte_end":10718753,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718754,"byte_end":10718829,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718830,"byte_end":10718908,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718909,"byte_end":10718989,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10718990,"byte_end":10719068,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719069,"byte_end":10719142,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719143,"byte_end":10719208,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719209,"byte_end":10719212,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719213,"byte_end":10719293,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719294,"byte_end":10719372,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719373,"byte_end":10719449,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719450,"byte_end":10719529,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719530,"byte_end":10719609,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719610,"byte_end":10719681,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719682,"byte_end":10719704,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719705,"byte_end":10719708,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719709,"byte_end":10719728,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719729,"byte_end":10719732,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719733,"byte_end":10719799,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719800,"byte_end":10719880,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719881,"byte_end":10719958,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719959,"byte_end":10719962,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10719963,"byte_end":10720033,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720034,"byte_end":10720113,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720114,"byte_end":10720137,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720138,"byte_end":10720141,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720142,"byte_end":10720162,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720163,"byte_end":10720166,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720167,"byte_end":10720247,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720248,"byte_end":10720328,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720329,"byte_end":10720407,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720408,"byte_end":10720480,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720481,"byte_end":10720555,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720556,"byte_end":10720568,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720569,"byte_end":10720572,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720573,"byte_end":10720620,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720621,"byte_end":10720624,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720625,"byte_end":10720706,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720707,"byte_end":10720742,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720743,"byte_end":10720746,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720747,"byte_end":10720827,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720828,"byte_end":10720908,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720909,"byte_end":10720987,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10720988,"byte_end":10721066,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721067,"byte_end":10721146,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721147,"byte_end":10721208,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721209,"byte_end":10721212,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721213,"byte_end":10721293,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721294,"byte_end":10721372,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721373,"byte_end":10721439,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721440,"byte_end":10721522,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721523,"byte_end":10721587,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721588,"byte_end":10721591,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721592,"byte_end":10721633,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721634,"byte_end":10721679,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721680,"byte_end":10721733,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721734,"byte_end":10721789,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721790,"byte_end":10721849,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721850,"byte_end":10721910,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721911,"byte_end":10721956,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10721957,"byte_end":10722047,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735912,"byte_end":10735918,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5585}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735787,"byte_end":10735832,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735833,"byte_end":10735836,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735837,"byte_end":10735900,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736427,"byte_end":10736435,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5594}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736299,"byte_end":10736347,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736348,"byte_end":10736351,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736352,"byte_end":10736415,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":5598},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737823,"byte_end":10737830,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736716,"byte_end":10736796,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736797,"byte_end":10736838,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736839,"byte_end":10736842,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736843,"byte_end":10736920,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736921,"byte_end":10736946,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736947,"byte_end":10736950,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736951,"byte_end":10737030,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737031,"byte_end":10737079,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737080,"byte_end":10737083,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737084,"byte_end":10737163,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737164,"byte_end":10737239,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737240,"byte_end":10737306,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737307,"byte_end":10737310,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737311,"byte_end":10737325,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737326,"byte_end":10737329,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737330,"byte_end":10737341,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737342,"byte_end":10737368,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737369,"byte_end":10737372,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737373,"byte_end":10737391,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737392,"byte_end":10737413,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737414,"byte_end":10737464,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737465,"byte_end":10737468,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737469,"byte_end":10737502,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737503,"byte_end":10737531,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737532,"byte_end":10737582,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737583,"byte_end":10737632,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737633,"byte_end":10737660,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737661,"byte_end":10737678,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737679,"byte_end":10737692,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737693,"byte_end":10737704,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737705,"byte_end":10737708,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737709,"byte_end":10737754,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737755,"byte_end":10737791,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737792,"byte_end":10737801,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737802,"byte_end":10737807,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10737808,"byte_end":10737815,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739512,"byte_end":10739516,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738430,"byte_end":10738476,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738481,"byte_end":10738484,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738489,"byte_end":10738561,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738566,"byte_end":10738620,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738625,"byte_end":10738628,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738633,"byte_end":10738647,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738652,"byte_end":10738655,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738660,"byte_end":10738667,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738672,"byte_end":10738698,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738703,"byte_end":10738706,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738711,"byte_end":10738729,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738734,"byte_end":10738755,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738760,"byte_end":10738810,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738815,"byte_end":10738818,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738823,"byte_end":10738856,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738861,"byte_end":10738905,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738910,"byte_end":10738921,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738926,"byte_end":10738929,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738934,"byte_end":10738985,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738990,"byte_end":10739032,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739037,"byte_end":10739042,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739047,"byte_end":10739054,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739059,"byte_end":10739062,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739067,"byte_end":10739091,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739096,"byte_end":10739099,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739104,"byte_end":10739111,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739116,"byte_end":10739142,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739147,"byte_end":10739150,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739155,"byte_end":10739173,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739178,"byte_end":10739199,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739204,"byte_end":10739254,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739259,"byte_end":10739262,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739267,"byte_end":10739307,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739312,"byte_end":10739352,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739357,"byte_end":10739360,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739365,"byte_end":10739416,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739421,"byte_end":10739472,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739477,"byte_end":10739482,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739487,"byte_end":10739494,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739682,"byte_end":10739691,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740347,"byte_end":10740355,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739784,"byte_end":10739857,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739862,"byte_end":10739865,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739870,"byte_end":10739942,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10739947,"byte_end":10740018,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740023,"byte_end":10740076,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740081,"byte_end":10740084,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740089,"byte_end":10740161,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740166,"byte_end":10740190,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740195,"byte_end":10740198,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740203,"byte_end":10740273,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740278,"byte_end":10740335,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740673,"byte_end":10740678,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740436,"byte_end":10740500,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740505,"byte_end":10740508,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740513,"byte_end":10740588,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740593,"byte_end":10740661,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742768,"byte_end":10742772,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741124,"byte_end":10741175,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741180,"byte_end":10741183,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741188,"byte_end":10741264,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741269,"byte_end":10741345,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741350,"byte_end":10741424,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741429,"byte_end":10741504,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741509,"byte_end":10741578,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741583,"byte_end":10741655,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741660,"byte_end":10741691,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741696,"byte_end":10741699,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741704,"byte_end":10741716,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741721,"byte_end":10741724,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741729,"byte_end":10741802,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741807,"byte_end":10741881,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741886,"byte_end":10741946,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741951,"byte_end":10741954,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741959,"byte_end":10741989,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741994,"byte_end":10742020,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742025,"byte_end":10742028,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742033,"byte_end":10742047,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742052,"byte_end":10742055,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742060,"byte_end":10742130,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742135,"byte_end":10742174,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742179,"byte_end":10742182,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742187,"byte_end":10742198,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742203,"byte_end":10742229,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742234,"byte_end":10742237,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742242,"byte_end":10742260,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742265,"byte_end":10742286,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742291,"byte_end":10742339,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742344,"byte_end":10742347,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742352,"byte_end":10742385,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742390,"byte_end":10742418,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742423,"byte_end":10742473,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742478,"byte_end":10742527,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742532,"byte_end":10742559,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742564,"byte_end":10742581,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742586,"byte_end":10742599,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742604,"byte_end":10742615,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742620,"byte_end":10742623,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742628,"byte_end":10742673,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742678,"byte_end":10742714,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742719,"byte_end":10742728,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742733,"byte_end":10742738,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10742743,"byte_end":10742750,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745505,"byte_end":10745513,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743193,"byte_end":10743252,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743257,"byte_end":10743260,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743265,"byte_end":10743344,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743349,"byte_end":10743424,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743429,"byte_end":10743507,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743512,"byte_end":10743554,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743559,"byte_end":10743562,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743567,"byte_end":10743639,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743644,"byte_end":10743695,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743700,"byte_end":10743703,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743708,"byte_end":10743720,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743725,"byte_end":10743728,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743733,"byte_end":10743804,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743809,"byte_end":10743885,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743890,"byte_end":10743912,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743917,"byte_end":10743920,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10743925,"byte_end":10743998,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744003,"byte_end":10744077,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744082,"byte_end":10744142,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744147,"byte_end":10744150,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744155,"byte_end":10744181,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744186,"byte_end":10744224,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744229,"byte_end":10744253,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744258,"byte_end":10744288,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744293,"byte_end":10744296,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744301,"byte_end":10744315,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744320,"byte_end":10744323,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744328,"byte_end":10744335,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744340,"byte_end":10744366,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744371,"byte_end":10744374,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744379,"byte_end":10744397,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744402,"byte_end":10744423,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744428,"byte_end":10744474,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744479,"byte_end":10744528,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744533,"byte_end":10744567,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744572,"byte_end":10744575,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744580,"byte_end":10744613,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744618,"byte_end":10744657,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744662,"byte_end":10744701,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744706,"byte_end":10744768,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744773,"byte_end":10744784,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744789,"byte_end":10744792,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744797,"byte_end":10744830,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744835,"byte_end":10744884,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744889,"byte_end":10744936,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744941,"byte_end":10744977,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744982,"byte_end":10744993,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10744998,"byte_end":10745001,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745006,"byte_end":10745026,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745031,"byte_end":10745070,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745075,"byte_end":10745120,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745125,"byte_end":10745128,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745133,"byte_end":10745172,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745177,"byte_end":10745222,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745227,"byte_end":10745230,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745235,"byte_end":10745284,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745289,"byte_end":10745320,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745325,"byte_end":10745387,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745392,"byte_end":10745457,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745462,"byte_end":10745471,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745476,"byte_end":10745481,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745486,"byte_end":10745493,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747330,"byte_end":10747342,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745634,"byte_end":10745714,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745719,"byte_end":10745722,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745727,"byte_end":10745804,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745809,"byte_end":10745887,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745892,"byte_end":10745940,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745945,"byte_end":10745948,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745953,"byte_end":10745979,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745984,"byte_end":10745987,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10745992,"byte_end":10746004,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746009,"byte_end":10746012,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746017,"byte_end":10746090,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746095,"byte_end":10746152,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746157,"byte_end":10746238,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746243,"byte_end":10746246,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746251,"byte_end":10746281,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746286,"byte_end":10746312,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746317,"byte_end":10746320,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746325,"byte_end":10746339,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746344,"byte_end":10746347,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746352,"byte_end":10746430,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746435,"byte_end":10746506,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746511,"byte_end":10746514,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746519,"byte_end":10746530,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746535,"byte_end":10746561,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746566,"byte_end":10746609,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746614,"byte_end":10746617,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746622,"byte_end":10746640,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746645,"byte_end":10746666,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746671,"byte_end":10746719,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746724,"byte_end":10746727,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746732,"byte_end":10746765,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746770,"byte_end":10746798,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746803,"byte_end":10746889,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746894,"byte_end":10746947,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746952,"byte_end":10746979,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10746984,"byte_end":10747001,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747006,"byte_end":10747019,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747024,"byte_end":10747035,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747040,"byte_end":10747043,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747048,"byte_end":10747093,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747098,"byte_end":10747134,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747139,"byte_end":10747195,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747200,"byte_end":10747209,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747214,"byte_end":10747219,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747224,"byte_end":10747231,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10747236,"byte_end":10747260,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5628},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749126,"byte_end":10749136,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748045,"byte_end":10748127,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748132,"byte_end":10748135,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748140,"byte_end":10748232,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748237,"byte_end":10748264,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748269,"byte_end":10748272,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748277,"byte_end":10748370,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748375,"byte_end":10748470,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748475,"byte_end":10748568,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748573,"byte_end":10748668,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748673,"byte_end":10748720,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748725,"byte_end":10748728,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748733,"byte_end":10748827,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748832,"byte_end":10748900,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748905,"byte_end":10748908,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10748913,"byte_end":10748997,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749002,"byte_end":10749095,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749100,"byte_end":10749114,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751692,"byte_end":10751698,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749281,"byte_end":10749324,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749329,"byte_end":10749332,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749337,"byte_end":10749427,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749432,"byte_end":10749525,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749530,"byte_end":10749621,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749626,"byte_end":10749714,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749719,"byte_end":10749722,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749727,"byte_end":10749819,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749824,"byte_end":10749871,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749876,"byte_end":10749879,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749884,"byte_end":10749900,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749905,"byte_end":10749908,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10749913,"byte_end":10750008,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750013,"byte_end":10750107,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750112,"byte_end":10750206,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750211,"byte_end":10750285,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750290,"byte_end":10750293,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750298,"byte_end":10750316,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750321,"byte_end":10750331,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750336,"byte_end":10750369,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750374,"byte_end":10750426,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750431,"byte_end":10750458,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750463,"byte_end":10750477,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750482,"byte_end":10750496,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750501,"byte_end":10750508,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750513,"byte_end":10750518,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750523,"byte_end":10750530,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750535,"byte_end":10750538,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750543,"byte_end":10750636,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750641,"byte_end":10750736,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750741,"byte_end":10750827,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750832,"byte_end":10750927,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10750932,"byte_end":10750996,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751001,"byte_end":10751004,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751009,"byte_end":10751103,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751108,"byte_end":10751173,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751178,"byte_end":10751181,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751186,"byte_end":10751204,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751209,"byte_end":10751219,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751224,"byte_end":10751257,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751262,"byte_end":10751296,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751301,"byte_end":10751341,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751346,"byte_end":10751408,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751413,"byte_end":10751427,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751432,"byte_end":10751494,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751499,"byte_end":10751519,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751524,"byte_end":10751531,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751536,"byte_end":10751576,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751581,"byte_end":10751608,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751613,"byte_end":10751627,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751632,"byte_end":10751646,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751651,"byte_end":10751658,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751663,"byte_end":10751668,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10751673,"byte_end":10751680,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10753690,"byte_end":10753696,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5855},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777589,"byte_end":10777604,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5857}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777431,"byte_end":10777485,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777486,"byte_end":10777489,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777490,"byte_end":10777522,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777523,"byte_end":10777577,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778182,"byte_end":10778199,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5866}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778021,"byte_end":10778078,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778079,"byte_end":10778082,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778083,"byte_end":10778115,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778116,"byte_end":10778170,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779010,"byte_end":10779027,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778498,"byte_end":10778574,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778575,"byte_end":10778585,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778586,"byte_end":10778589,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778590,"byte_end":10778670,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778671,"byte_end":10778750,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778751,"byte_end":10778764,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778765,"byte_end":10778768,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778769,"byte_end":10778848,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778849,"byte_end":10778925,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778926,"byte_end":10779002,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5876},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779475,"byte_end":10779484,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5877},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780647,"byte_end":10780651,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779577,"byte_end":10779623,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779628,"byte_end":10779631,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779636,"byte_end":10779708,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779713,"byte_end":10779767,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779772,"byte_end":10779775,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779780,"byte_end":10779794,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779799,"byte_end":10779802,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779807,"byte_end":10779814,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779819,"byte_end":10779845,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779850,"byte_end":10779853,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779858,"byte_end":10779876,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779881,"byte_end":10779902,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779907,"byte_end":10779960,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779965,"byte_end":10779968,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779973,"byte_end":10780006,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780011,"byte_end":10780049,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780054,"byte_end":10780065,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780070,"byte_end":10780073,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780078,"byte_end":10780129,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780134,"byte_end":10780176,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780181,"byte_end":10780186,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780191,"byte_end":10780198,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780203,"byte_end":10780206,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780211,"byte_end":10780235,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780240,"byte_end":10780243,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780248,"byte_end":10780255,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780260,"byte_end":10780286,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780291,"byte_end":10780294,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780299,"byte_end":10780317,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780322,"byte_end":10780343,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780348,"byte_end":10780401,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780406,"byte_end":10780409,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780414,"byte_end":10780448,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780453,"byte_end":10780487,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780492,"byte_end":10780495,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780500,"byte_end":10780551,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780556,"byte_end":10780607,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780612,"byte_end":10780617,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780622,"byte_end":10780629,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781336,"byte_end":10781344,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780773,"byte_end":10780846,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780851,"byte_end":10780854,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780859,"byte_end":10780931,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10780936,"byte_end":10781007,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781012,"byte_end":10781065,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781070,"byte_end":10781073,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781078,"byte_end":10781150,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781155,"byte_end":10781179,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781184,"byte_end":10781187,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781192,"byte_end":10781262,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781267,"byte_end":10781324,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781662,"byte_end":10781667,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781425,"byte_end":10781489,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781494,"byte_end":10781497,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781502,"byte_end":10781577,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781582,"byte_end":10781650,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782790,"byte_end":10782794,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782102,"byte_end":10782176,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782181,"byte_end":10782184,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782189,"byte_end":10782274,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782279,"byte_end":10782360,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782365,"byte_end":10782433,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782438,"byte_end":10782441,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782446,"byte_end":10782519,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782524,"byte_end":10782595,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782600,"byte_end":10782677,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782682,"byte_end":10782685,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782690,"byte_end":10782729,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10782734,"byte_end":10782778,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":5896},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":6768},{"krate":0,"index":6772},{"krate":0,"index":5899},{"krate":0,"index":5902},{"krate":0,"index":6775},{"krate":0,"index":6783},{"krate":0,"index":5904},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":6786},{"krate":0,"index":6789},{"krate":0,"index":5912},{"krate":0,"index":5914},{"krate":0,"index":6791},{"krate":0,"index":6799},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":5915},{"krate":0,"index":5917},{"krate":0,"index":6801},{"krate":0,"index":6804},{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5922},{"krate":0,"index":6811},{"krate":0,"index":6819},{"krate":0,"index":6806},{"krate":0,"index":6808}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10782912,"byte_end":10782935,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6768},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783039,"byte_end":10783048,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10782975,"byte_end":10783010,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6771},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783052,"byte_end":10783057,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783601,"byte_end":10783605,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6775},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783469,"byte_end":10783537,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783542,"byte_end":10783596,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783706,"byte_end":10783712,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6775},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783615,"byte_end":10783684,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783689,"byte_end":10783701,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6775},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783447,"byte_end":10783459,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6777},{"krate":0,"index":6780}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783301,"byte_end":10783372,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783373,"byte_end":10783420,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784350,"byte_end":10784359,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784288,"byte_end":10784321,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6792},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784864,"byte_end":10784869,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6791},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784736,"byte_end":10784803,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784808,"byte_end":10784859,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6794},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784989,"byte_end":10784995,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6791},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784875,"byte_end":10784937,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784942,"byte_end":10784984,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6791},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784717,"byte_end":10784729,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6794}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784570,"byte_end":10784640,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784641,"byte_end":10784679,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6801},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785486,"byte_end":10785497,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785385,"byte_end":10785457,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786103,"byte_end":10786110,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6811},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6816},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786223,"byte_end":10786229,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6811},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785941,"byte_end":10785957,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6813},{"krate":0,"index":6816}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5933},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791143,"byte_end":10791148,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5935},{"krate":0,"index":5936}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10786890,"byte_end":10786928,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10786929,"byte_end":10786932,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10786933,"byte_end":10787011,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787012,"byte_end":10787088,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787089,"byte_end":10787113,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787114,"byte_end":10787117,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787118,"byte_end":10787159,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787160,"byte_end":10787163,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787164,"byte_end":10787244,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787245,"byte_end":10787324,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787325,"byte_end":10787388,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787389,"byte_end":10787392,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787393,"byte_end":10787472,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787473,"byte_end":10787553,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787554,"byte_end":10787632,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787633,"byte_end":10787712,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787713,"byte_end":10787791,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787792,"byte_end":10787872,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787873,"byte_end":10787886,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787887,"byte_end":10787890,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787891,"byte_end":10787970,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10787971,"byte_end":10788047,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788048,"byte_end":10788125,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788126,"byte_end":10788159,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788160,"byte_end":10788163,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788164,"byte_end":10788239,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788240,"byte_end":10788318,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788319,"byte_end":10788361,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788362,"byte_end":10788365,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788366,"byte_end":10788393,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788394,"byte_end":10788442,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788443,"byte_end":10788521,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788522,"byte_end":10788525,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788526,"byte_end":10788541,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788542,"byte_end":10788545,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788546,"byte_end":10788564,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788565,"byte_end":10788592,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788593,"byte_end":10788616,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788617,"byte_end":10788620,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788621,"byte_end":10788639,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788640,"byte_end":10788661,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788662,"byte_end":10788706,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788707,"byte_end":10788746,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788747,"byte_end":10788750,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788751,"byte_end":10788784,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788785,"byte_end":10788831,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788832,"byte_end":10788855,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788856,"byte_end":10788867,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788868,"byte_end":10788871,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788872,"byte_end":10788914,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788915,"byte_end":10788934,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788935,"byte_end":10788940,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788941,"byte_end":10788948,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788949,"byte_end":10788952,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788953,"byte_end":10788956,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788957,"byte_end":10788975,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10788976,"byte_end":10789003,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789004,"byte_end":10789027,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789028,"byte_end":10789031,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789032,"byte_end":10789050,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789051,"byte_end":10789072,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789073,"byte_end":10789117,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789118,"byte_end":10789121,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789122,"byte_end":10789145,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789146,"byte_end":10789192,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789193,"byte_end":10789230,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789231,"byte_end":10789263,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789264,"byte_end":10789321,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789322,"byte_end":10789353,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789354,"byte_end":10789395,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789396,"byte_end":10789413,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789414,"byte_end":10789429,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789430,"byte_end":10789439,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789440,"byte_end":10789443,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789444,"byte_end":10789458,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789459,"byte_end":10789501,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789502,"byte_end":10789524,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789525,"byte_end":10789538,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789539,"byte_end":10789548,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789549,"byte_end":10789583,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789584,"byte_end":10789589,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789590,"byte_end":10789597,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789598,"byte_end":10789674,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789675,"byte_end":10789748,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789749,"byte_end":10789764,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789765,"byte_end":10789840,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789841,"byte_end":10789917,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789918,"byte_end":10789970,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789971,"byte_end":10789974,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10789975,"byte_end":10790053,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790054,"byte_end":10790134,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790135,"byte_end":10790211,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790212,"byte_end":10790289,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790290,"byte_end":10790368,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790369,"byte_end":10790449,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790450,"byte_end":10790530,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790531,"byte_end":10790600,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790601,"byte_end":10790604,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790605,"byte_end":10790684,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790685,"byte_end":10790764,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790765,"byte_end":10790843,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790844,"byte_end":10790905,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790906,"byte_end":10790909,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790910,"byte_end":10790937,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790938,"byte_end":10790975,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10790976,"byte_end":10791010,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791011,"byte_end":10791060,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791061,"byte_end":10791098,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791099,"byte_end":10791131,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791577,"byte_end":10791587,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5940}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791216,"byte_end":10791247,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791248,"byte_end":10791251,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791252,"byte_end":10791331,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791332,"byte_end":10791407,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791408,"byte_end":10791441,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791442,"byte_end":10791445,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791446,"byte_end":10791524,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791525,"byte_end":10791565,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792374,"byte_end":10792389,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5943}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791632,"byte_end":10791670,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791671,"byte_end":10791674,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791675,"byte_end":10791756,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791757,"byte_end":10791837,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791838,"byte_end":10791912,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791913,"byte_end":10791974,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791975,"byte_end":10791978,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10791979,"byte_end":10792058,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792059,"byte_end":10792137,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792138,"byte_end":10792206,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792207,"byte_end":10792210,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792211,"byte_end":10792289,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792290,"byte_end":10792330,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792331,"byte_end":10792334,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792335,"byte_end":10792362,"line_start":149,"line_end":149,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6822},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793097,"byte_end":10793109,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792889,"byte_end":10792946,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792947,"byte_end":10792950,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792951,"byte_end":10793023,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793024,"byte_end":10793027,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793028,"byte_end":10793068,"line_start":166,"line_end":166,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5957},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794325,"byte_end":10794328,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794122,"byte_end":10794180,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794185,"byte_end":10794188,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794193,"byte_end":10794207,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794212,"byte_end":10794215,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794220,"byte_end":10794227,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794232,"byte_end":10794259,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794264,"byte_end":10794267,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794272,"byte_end":10794301,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794306,"byte_end":10794313,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794953,"byte_end":10794957,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794493,"byte_end":10794539,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794544,"byte_end":10794590,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794595,"byte_end":10794666,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794671,"byte_end":10794674,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794679,"byte_end":10794693,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794698,"byte_end":10794701,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794706,"byte_end":10794713,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794718,"byte_end":10794745,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794750,"byte_end":10794753,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794758,"byte_end":10794776,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794781,"byte_end":10794802,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794807,"byte_end":10794841,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794846,"byte_end":10794849,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794854,"byte_end":10794893,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794898,"byte_end":10794913,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794918,"byte_end":10794923,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794928,"byte_end":10794935,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795984,"byte_end":10795994,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795063,"byte_end":10795137,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795142,"byte_end":10795209,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795214,"byte_end":10795238,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795243,"byte_end":10795246,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795251,"byte_end":10795324,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795329,"byte_end":10795402,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795407,"byte_end":10795478,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795483,"byte_end":10795558,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795563,"byte_end":10795605,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795610,"byte_end":10795613,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795618,"byte_end":10795632,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795637,"byte_end":10795640,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795645,"byte_end":10795652,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795657,"byte_end":10795684,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795689,"byte_end":10795712,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795717,"byte_end":10795720,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795725,"byte_end":10795743,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795748,"byte_end":10795769,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795774,"byte_end":10795818,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795823,"byte_end":10795826,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795831,"byte_end":10795884,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795889,"byte_end":10795904,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795909,"byte_end":10795914,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795919,"byte_end":10795926,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795931,"byte_end":10795934,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10795939,"byte_end":10795966,"line_start":269,"line_end":269,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796871,"byte_end":10796879,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796403,"byte_end":10796472,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796477,"byte_end":10796519,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796524,"byte_end":10796527,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796532,"byte_end":10796566,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796571,"byte_end":10796585,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796590,"byte_end":10796593,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796598,"byte_end":10796605,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796610,"byte_end":10796637,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796642,"byte_end":10796705,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796710,"byte_end":10796713,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796718,"byte_end":10796748,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796753,"byte_end":10796756,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796761,"byte_end":10796791,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796796,"byte_end":10796818,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796823,"byte_end":10796835,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796840,"byte_end":10796847,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10796852,"byte_end":10796859,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798000,"byte_end":10798014,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797088,"byte_end":10797162,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797167,"byte_end":10797204,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797209,"byte_end":10797212,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797217,"byte_end":10797285,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797290,"byte_end":10797363,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797368,"byte_end":10797444,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797449,"byte_end":10797523,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797528,"byte_end":10797576,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797581,"byte_end":10797584,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797589,"byte_end":10797623,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797628,"byte_end":10797655,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797660,"byte_end":10797674,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797679,"byte_end":10797682,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797687,"byte_end":10797694,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797699,"byte_end":10797726,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797731,"byte_end":10797754,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797759,"byte_end":10797822,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797827,"byte_end":10797830,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797835,"byte_end":10797875,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797880,"byte_end":10797883,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797888,"byte_end":10797932,"line_start":327,"line_end":327,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797937,"byte_end":10797959,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797964,"byte_end":10797976,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10797981,"byte_end":10797988,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798572,"byte_end":10798582,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798239,"byte_end":10798293,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798298,"byte_end":10798312,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798317,"byte_end":10798320,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798325,"byte_end":10798332,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798337,"byte_end":10798364,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798369,"byte_end":10798372,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798377,"byte_end":10798395,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798400,"byte_end":10798421,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798426,"byte_end":10798460,"line_start":346,"line_end":346,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798465,"byte_end":10798468,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798473,"byte_end":10798508,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798513,"byte_end":10798538,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798543,"byte_end":10798548,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798553,"byte_end":10798560,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6827},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803987,"byte_end":10803993,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6828},{"krate":0,"index":6829}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801177,"byte_end":10801213,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801214,"byte_end":10801217,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801218,"byte_end":10801294,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801295,"byte_end":10801375,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801376,"byte_end":10801417,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801418,"byte_end":10801421,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801422,"byte_end":10801496,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801497,"byte_end":10801578,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801579,"byte_end":10801645,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801646,"byte_end":10801649,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801650,"byte_end":10801708,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801709,"byte_end":10801789,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801790,"byte_end":10801870,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801871,"byte_end":10801950,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10801951,"byte_end":10802001,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802002,"byte_end":10802005,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802006,"byte_end":10802085,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802086,"byte_end":10802161,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802162,"byte_end":10802232,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802233,"byte_end":10802236,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802237,"byte_end":10802317,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802318,"byte_end":10802391,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802392,"byte_end":10802463,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802464,"byte_end":10802467,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802468,"byte_end":10802482,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802483,"byte_end":10802486,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802487,"byte_end":10802503,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802504,"byte_end":10802507,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802508,"byte_end":10802515,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802516,"byte_end":10802544,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802545,"byte_end":10802568,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802569,"byte_end":10802572,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802573,"byte_end":10802591,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802592,"byte_end":10802613,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802614,"byte_end":10802659,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802660,"byte_end":10802697,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802698,"byte_end":10802701,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802702,"byte_end":10802735,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802736,"byte_end":10802773,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802774,"byte_end":10802820,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802821,"byte_end":10802832,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802833,"byte_end":10802836,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802837,"byte_end":10802878,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802879,"byte_end":10802903,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802904,"byte_end":10802909,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802910,"byte_end":10802917,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802918,"byte_end":10802921,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802922,"byte_end":10802947,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802948,"byte_end":10802951,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802952,"byte_end":10802959,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802960,"byte_end":10802988,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802989,"byte_end":10802992,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10802993,"byte_end":10803028,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803029,"byte_end":10803054,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803055,"byte_end":10803058,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803059,"byte_end":10803082,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803083,"byte_end":10803118,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803119,"byte_end":10803142,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803143,"byte_end":10803148,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803149,"byte_end":10803152,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803153,"byte_end":10803177,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803178,"byte_end":10803216,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803217,"byte_end":10803256,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803257,"byte_end":10803291,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803292,"byte_end":10803295,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803296,"byte_end":10803351,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803352,"byte_end":10803385,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803386,"byte_end":10803395,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803396,"byte_end":10803399,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803400,"byte_end":10803439,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803440,"byte_end":10803458,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803459,"byte_end":10803490,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803491,"byte_end":10803569,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803570,"byte_end":10803603,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803604,"byte_end":10803621,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803622,"byte_end":10803625,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803626,"byte_end":10803676,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803677,"byte_end":10803722,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803723,"byte_end":10803736,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803737,"byte_end":10803746,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803747,"byte_end":10803752,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803753,"byte_end":10803760,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803761,"byte_end":10803764,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803765,"byte_end":10803794,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803795,"byte_end":10803836,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803837,"byte_end":10803881,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803882,"byte_end":10803916,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10803917,"byte_end":10803958,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805225,"byte_end":10805228,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805021,"byte_end":10805077,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805082,"byte_end":10805085,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805090,"byte_end":10805104,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805109,"byte_end":10805112,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805117,"byte_end":10805124,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805129,"byte_end":10805157,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805162,"byte_end":10805165,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805170,"byte_end":10805201,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805206,"byte_end":10805213,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6042},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806300,"byte_end":10806308,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805370,"byte_end":10805398,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805403,"byte_end":10805406,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805411,"byte_end":10805487,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805492,"byte_end":10805566,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805571,"byte_end":10805646,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805651,"byte_end":10805720,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805725,"byte_end":10805728,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805733,"byte_end":10805765,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805770,"byte_end":10805773,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805778,"byte_end":10805792,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805797,"byte_end":10805800,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805805,"byte_end":10805812,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805817,"byte_end":10805845,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805850,"byte_end":10805873,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805878,"byte_end":10805881,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805886,"byte_end":10805904,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805909,"byte_end":10805930,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805935,"byte_end":10805980,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805985,"byte_end":10806022,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806027,"byte_end":10806030,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806035,"byte_end":10806068,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806073,"byte_end":10806110,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806115,"byte_end":10806161,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806166,"byte_end":10806177,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806182,"byte_end":10806185,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806190,"byte_end":10806231,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806236,"byte_end":10806260,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806265,"byte_end":10806270,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806275,"byte_end":10806282,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807804,"byte_end":10807810,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806645,"byte_end":10806672,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806677,"byte_end":10806680,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806685,"byte_end":10806756,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806761,"byte_end":10806829,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806834,"byte_end":10806910,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806915,"byte_end":10806956,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806961,"byte_end":10806964,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10806969,"byte_end":10807043,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807048,"byte_end":10807122,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807127,"byte_end":10807199,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807204,"byte_end":10807218,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807223,"byte_end":10807226,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807231,"byte_end":10807275,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807280,"byte_end":10807283,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807288,"byte_end":10807302,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807307,"byte_end":10807310,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807315,"byte_end":10807322,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807327,"byte_end":10807355,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807360,"byte_end":10807383,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807388,"byte_end":10807391,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807396,"byte_end":10807414,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807419,"byte_end":10807440,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807445,"byte_end":10807490,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807495,"byte_end":10807532,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807537,"byte_end":10807540,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807545,"byte_end":10807578,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807583,"byte_end":10807620,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807625,"byte_end":10807671,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807676,"byte_end":10807687,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807692,"byte_end":10807695,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807700,"byte_end":10807741,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807746,"byte_end":10807770,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807775,"byte_end":10807780,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10807785,"byte_end":10807792,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6067},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":13372},{"krate":0,"index":6078},{"krate":0,"index":13374},{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":13376},{"krate":0,"index":6081},{"krate":0,"index":13378},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6856},{"krate":0,"index":6859},{"krate":0,"index":6862},{"krate":0,"index":6865},{"krate":0,"index":6086},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6893},{"krate":0,"index":6897},{"krate":0,"index":6896},{"krate":0,"index":6101},{"krate":0,"index":6103},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6130},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6158},{"krate":0,"index":6162},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6184}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10819586,"byte_end":10819656,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6856},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820135,"byte_end":10820141,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6858}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10819988,"byte_end":10820035,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820036,"byte_end":10820039,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820040,"byte_end":10820106,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6862},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820333,"byte_end":10820341,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6864}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820184,"byte_end":10820233,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820234,"byte_end":10820237,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820238,"byte_end":10820304,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6086},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820392,"byte_end":10820397,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":6087},{"krate":0,"index":6868},{"krate":0,"index":6878},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6880},{"krate":0,"index":6891},{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6885},{"krate":0,"index":6886},{"krate":0,"index":6088},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6093}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820404,"byte_end":10820427,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6868},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820569,"byte_end":10820578,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820452,"byte_end":10820517,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6881},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820800,"byte_end":10820805,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6880},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820733,"byte_end":10820791,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820894,"byte_end":10820900,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6880},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820816,"byte_end":10820885,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6880},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820710,"byte_end":10820722,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6881},{"krate":0,"index":6883}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820600,"byte_end":10820660,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822897,"byte_end":10822904,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822082,"byte_end":10822161,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822162,"byte_end":10822172,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822173,"byte_end":10822176,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822177,"byte_end":10822253,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822254,"byte_end":10822332,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822333,"byte_end":10822379,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822380,"byte_end":10822383,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822384,"byte_end":10822430,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822431,"byte_end":10822434,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822435,"byte_end":10822449,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822450,"byte_end":10822453,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822454,"byte_end":10822461,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822462,"byte_end":10822491,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822492,"byte_end":10822495,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822496,"byte_end":10822514,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822515,"byte_end":10822536,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822537,"byte_end":10822579,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822580,"byte_end":10822583,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822584,"byte_end":10822617,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822618,"byte_end":10822658,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822659,"byte_end":10822708,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822709,"byte_end":10822722,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822723,"byte_end":10822734,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822735,"byte_end":10822738,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822739,"byte_end":10822763,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822764,"byte_end":10822811,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822812,"byte_end":10822865,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822866,"byte_end":10822875,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822876,"byte_end":10822881,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10822882,"byte_end":10822889,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6105},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824940,"byte_end":10824944,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823369,"byte_end":10823444,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823449,"byte_end":10823465,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823470,"byte_end":10823473,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823478,"byte_end":10823557,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823562,"byte_end":10823637,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823642,"byte_end":10823718,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823723,"byte_end":10823795,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823800,"byte_end":10823813,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823818,"byte_end":10823821,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823826,"byte_end":10823902,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823907,"byte_end":10823983,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823988,"byte_end":10824060,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824065,"byte_end":10824138,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824143,"byte_end":10824217,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824222,"byte_end":10824294,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824299,"byte_end":10824336,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824341,"byte_end":10824344,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824349,"byte_end":10824363,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824368,"byte_end":10824371,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824376,"byte_end":10824408,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824413,"byte_end":10824416,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824421,"byte_end":10824428,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824433,"byte_end":10824462,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824467,"byte_end":10824470,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824475,"byte_end":10824493,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824498,"byte_end":10824519,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824524,"byte_end":10824566,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824571,"byte_end":10824574,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824579,"byte_end":10824612,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824617,"byte_end":10824657,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824662,"byte_end":10824711,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824716,"byte_end":10824729,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824734,"byte_end":10824745,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824750,"byte_end":10824753,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824758,"byte_end":10824782,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824787,"byte_end":10824834,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824839,"byte_end":10824892,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824897,"byte_end":10824906,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824911,"byte_end":10824916,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10824921,"byte_end":10824928,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6108},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10825345,"byte_end":10825356,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828598,"byte_end":10828604,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826713,"byte_end":10826771,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826776,"byte_end":10826779,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826784,"byte_end":10826858,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826863,"byte_end":10826897,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826902,"byte_end":10826905,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826910,"byte_end":10826975,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10826980,"byte_end":10827052,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827057,"byte_end":10827060,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827065,"byte_end":10827077,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827082,"byte_end":10827085,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827090,"byte_end":10827138,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827143,"byte_end":10827146,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827151,"byte_end":10827177,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827182,"byte_end":10827212,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827217,"byte_end":10827220,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827225,"byte_end":10827239,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827244,"byte_end":10827247,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827252,"byte_end":10827267,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827272,"byte_end":10827275,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827280,"byte_end":10827287,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827292,"byte_end":10827321,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827326,"byte_end":10827329,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827334,"byte_end":10827352,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827357,"byte_end":10827378,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827383,"byte_end":10827435,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827440,"byte_end":10827443,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827448,"byte_end":10827481,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827486,"byte_end":10827507,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827512,"byte_end":10827523,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827528,"byte_end":10827531,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827536,"byte_end":10827562,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827567,"byte_end":10827608,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827613,"byte_end":10827618,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827623,"byte_end":10827630,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827635,"byte_end":10827638,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827643,"byte_end":10827665,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827670,"byte_end":10827673,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827678,"byte_end":10827685,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827690,"byte_end":10827719,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827724,"byte_end":10827762,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827767,"byte_end":10827770,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827775,"byte_end":10827812,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827817,"byte_end":10827820,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827825,"byte_end":10827859,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827864,"byte_end":10827915,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827920,"byte_end":10827945,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827950,"byte_end":10827955,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827960,"byte_end":10827963,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827968,"byte_end":10827986,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10827991,"byte_end":10828012,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828017,"byte_end":10828063,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828068,"byte_end":10828071,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828076,"byte_end":10828109,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828114,"byte_end":10828135,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828140,"byte_end":10828183,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828188,"byte_end":10828263,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828268,"byte_end":10828285,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828290,"byte_end":10828335,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828340,"byte_end":10828383,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828388,"byte_end":10828405,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828410,"byte_end":10828423,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828428,"byte_end":10828439,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828444,"byte_end":10828447,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828452,"byte_end":10828488,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828493,"byte_end":10828558,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828563,"byte_end":10828568,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828573,"byte_end":10828580,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829474,"byte_end":10829483,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828715,"byte_end":10828789,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828794,"byte_end":10828797,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828802,"byte_end":10828876,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828881,"byte_end":10828915,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828920,"byte_end":10828923,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10828928,"byte_end":10829003,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829008,"byte_end":10829011,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829016,"byte_end":10829042,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829047,"byte_end":10829077,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829082,"byte_end":10829085,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829090,"byte_end":10829104,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829109,"byte_end":10829112,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829117,"byte_end":10829124,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829129,"byte_end":10829158,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829163,"byte_end":10829166,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829171,"byte_end":10829189,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829194,"byte_end":10829215,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829220,"byte_end":10829262,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829267,"byte_end":10829270,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829275,"byte_end":10829308,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829313,"byte_end":10829316,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829321,"byte_end":10829338,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829343,"byte_end":10829346,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829351,"byte_end":10829383,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829388,"byte_end":10829440,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829445,"byte_end":10829450,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829455,"byte_end":10829462,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831461,"byte_end":10831466,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829823,"byte_end":10829890,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829895,"byte_end":10829898,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829903,"byte_end":10829977,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829982,"byte_end":10830050,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830055,"byte_end":10830121,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830126,"byte_end":10830140,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830145,"byte_end":10830148,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830153,"byte_end":10830229,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830234,"byte_end":10830297,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830302,"byte_end":10830305,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830310,"byte_end":10830332,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830337,"byte_end":10830373,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830378,"byte_end":10830381,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830386,"byte_end":10830400,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830405,"byte_end":10830408,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830413,"byte_end":10830448,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830453,"byte_end":10830456,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830461,"byte_end":10830468,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830473,"byte_end":10830502,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830507,"byte_end":10830557,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830562,"byte_end":10830565,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830570,"byte_end":10830588,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830593,"byte_end":10830614,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830619,"byte_end":10830665,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830670,"byte_end":10830673,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830678,"byte_end":10830711,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830716,"byte_end":10830719,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830724,"byte_end":10830743,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830748,"byte_end":10830751,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830756,"byte_end":10830788,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830793,"byte_end":10830845,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830850,"byte_end":10830853,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830858,"byte_end":10830887,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830892,"byte_end":10830935,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830940,"byte_end":10830972,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830977,"byte_end":10830986,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10830991,"byte_end":10830996,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831001,"byte_end":10831008,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831013,"byte_end":10831016,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831021,"byte_end":10831072,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831077,"byte_end":10831080,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831085,"byte_end":10831092,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831097,"byte_end":10831126,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831131,"byte_end":10831134,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831139,"byte_end":10831157,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831162,"byte_end":10831183,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831188,"byte_end":10831234,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831239,"byte_end":10831242,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831247,"byte_end":10831296,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831301,"byte_end":10831304,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831309,"byte_end":10831328,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831333,"byte_end":10831336,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831341,"byte_end":10831382,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831387,"byte_end":10831427,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831432,"byte_end":10831437,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831442,"byte_end":10831449,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833449,"byte_end":10833457,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831564,"byte_end":10831596,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831601,"byte_end":10831604,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831609,"byte_end":10831682,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831687,"byte_end":10831753,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831758,"byte_end":10831782,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831787,"byte_end":10831790,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831795,"byte_end":10831861,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831866,"byte_end":10831888,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831893,"byte_end":10831896,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831901,"byte_end":10831913,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831918,"byte_end":10831921,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831926,"byte_end":10831977,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10831982,"byte_end":10832045,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832050,"byte_end":10832125,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832130,"byte_end":10832144,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832149,"byte_end":10832152,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832157,"byte_end":10832171,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832176,"byte_end":10832179,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832184,"byte_end":10832234,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832239,"byte_end":10832242,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832247,"byte_end":10832254,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832259,"byte_end":10832288,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832293,"byte_end":10832343,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832348,"byte_end":10832351,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832356,"byte_end":10832374,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832379,"byte_end":10832400,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832405,"byte_end":10832451,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832456,"byte_end":10832459,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832464,"byte_end":10832493,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832498,"byte_end":10832543,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832548,"byte_end":10832590,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832595,"byte_end":10832627,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832632,"byte_end":10832641,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832646,"byte_end":10832649,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832654,"byte_end":10832677,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832682,"byte_end":10832716,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832721,"byte_end":10832724,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832729,"byte_end":10832758,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832763,"byte_end":10832815,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832820,"byte_end":10832852,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832857,"byte_end":10832866,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832871,"byte_end":10832876,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832881,"byte_end":10832888,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832893,"byte_end":10832896,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832901,"byte_end":10832962,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832967,"byte_end":10832970,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832975,"byte_end":10832982,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10832987,"byte_end":10833016,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833021,"byte_end":10833071,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833076,"byte_end":10833079,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833084,"byte_end":10833102,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833107,"byte_end":10833128,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833133,"byte_end":10833185,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833190,"byte_end":10833193,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833198,"byte_end":10833215,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833220,"byte_end":10833223,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833228,"byte_end":10833257,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833262,"byte_end":10833316,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833321,"byte_end":10833364,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833369,"byte_end":10833401,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833406,"byte_end":10833415,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833420,"byte_end":10833425,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10833430,"byte_end":10833437,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6960},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902022,"byte_end":10902031,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6961}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901371,"byte_end":10901436,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901437,"byte_end":10901440,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901441,"byte_end":10901516,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901517,"byte_end":10901593,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901594,"byte_end":10901674,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901675,"byte_end":10901684,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901685,"byte_end":10901688,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901689,"byte_end":10901762,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901763,"byte_end":10901842,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901843,"byte_end":10901921,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10901922,"byte_end":10901993,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6964},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902280,"byte_end":10902295,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6966},{"krate":0,"index":6967}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902096,"byte_end":10902128,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902129,"byte_end":10902132,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902133,"byte_end":10902184,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902185,"byte_end":10902188,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902189,"byte_end":10902239,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902240,"byte_end":10902251,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902556,"byte_end":10902576,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6972},{"krate":0,"index":6973}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902347,"byte_end":10902386,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902387,"byte_end":10902390,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902391,"byte_end":10902448,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902449,"byte_end":10902452,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902453,"byte_end":10902515,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902516,"byte_end":10902527,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6976},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902872,"byte_end":10902887,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902625,"byte_end":10902689,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902690,"byte_end":10902693,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902694,"byte_end":10902771,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902772,"byte_end":10902784,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902785,"byte_end":10902788,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10902789,"byte_end":10902843,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903441,"byte_end":10903444,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903366,"byte_end":10903429,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6420},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903620,"byte_end":10903637,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903556,"byte_end":10903608,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6421},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903884,"byte_end":10903895,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903707,"byte_end":10903749,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903754,"byte_end":10903757,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903762,"byte_end":10903872,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904015,"byte_end":10904022,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903958,"byte_end":10903997,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6425},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904258,"byte_end":10904269,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904197,"byte_end":10904246,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6426},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904730,"byte_end":10904743,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904552,"byte_end":10904591,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904596,"byte_end":10904599,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904604,"byte_end":10904672,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904677,"byte_end":10904680,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904685,"byte_end":10904712,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905123,"byte_end":10905140,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904941,"byte_end":10904990,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10904995,"byte_end":10904998,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905003,"byte_end":10905071,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905076,"byte_end":10905079,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905084,"byte_end":10905111,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6432},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905655,"byte_end":10905661,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905480,"byte_end":10905550,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905555,"byte_end":10905624,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905629,"byte_end":10905643,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6434},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905916,"byte_end":10905922,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905741,"byte_end":10905811,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905816,"byte_end":10905885,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905890,"byte_end":10905904,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6981},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908974,"byte_end":10908980,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6983},{"krate":0,"index":6984}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906444,"byte_end":10906482,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906483,"byte_end":10906486,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906487,"byte_end":10906564,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906565,"byte_end":10906644,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906645,"byte_end":10906724,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906725,"byte_end":10906783,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906784,"byte_end":10906787,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906788,"byte_end":10906866,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906867,"byte_end":10906945,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10906946,"byte_end":10907024,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907025,"byte_end":10907090,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907091,"byte_end":10907094,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907095,"byte_end":10907159,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907160,"byte_end":10907232,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907233,"byte_end":10907313,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907314,"byte_end":10907394,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907395,"byte_end":10907475,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907476,"byte_end":10907545,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907546,"byte_end":10907616,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907617,"byte_end":10907655,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907656,"byte_end":10907659,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907660,"byte_end":10907737,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907738,"byte_end":10907823,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907824,"byte_end":10907904,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907905,"byte_end":10907952,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10907953,"byte_end":10908025,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908026,"byte_end":10908029,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908030,"byte_end":10908044,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908045,"byte_end":10908048,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908049,"byte_end":10908056,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908057,"byte_end":10908085,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908086,"byte_end":10908089,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908090,"byte_end":10908108,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908109,"byte_end":10908130,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908131,"byte_end":10908165,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908166,"byte_end":10908169,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908170,"byte_end":10908218,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908219,"byte_end":10908228,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908229,"byte_end":10908268,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908269,"byte_end":10908308,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908309,"byte_end":10908340,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908341,"byte_end":10908372,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908373,"byte_end":10908422,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908423,"byte_end":10908426,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908427,"byte_end":10908478,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908479,"byte_end":10908488,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908489,"byte_end":10908532,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908533,"byte_end":10908553,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908554,"byte_end":10908584,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908585,"byte_end":10908624,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908625,"byte_end":10908630,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908631,"byte_end":10908638,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908639,"byte_end":10908642,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908643,"byte_end":10908677,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908678,"byte_end":10908707,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908708,"byte_end":10908755,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908756,"byte_end":10908805,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908806,"byte_end":10908843,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10908844,"byte_end":10908945,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909355,"byte_end":10909370,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909114,"byte_end":10909186,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909187,"byte_end":10909199,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909200,"byte_end":10909203,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909204,"byte_end":10909259,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909260,"byte_end":10909275,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909276,"byte_end":10909279,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909280,"byte_end":10909313,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909314,"byte_end":10909343,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910688,"byte_end":10910691,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909514,"byte_end":10909582,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909587,"byte_end":10909590,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909595,"byte_end":10909668,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909673,"byte_end":10909693,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909698,"byte_end":10909701,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909706,"byte_end":10909757,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909762,"byte_end":10909832,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909837,"byte_end":10909901,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909906,"byte_end":10909909,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909914,"byte_end":10909986,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909991,"byte_end":10910017,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910022,"byte_end":10910025,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910030,"byte_end":10910139,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910144,"byte_end":10910207,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910212,"byte_end":10910215,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910220,"byte_end":10910234,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910239,"byte_end":10910242,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910247,"byte_end":10910254,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910259,"byte_end":10910306,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910311,"byte_end":10910314,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910319,"byte_end":10910367,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910372,"byte_end":10910392,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910397,"byte_end":10910400,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910405,"byte_end":10910425,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910430,"byte_end":10910453,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910458,"byte_end":10910493,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910498,"byte_end":10910501,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910506,"byte_end":10910540,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910545,"byte_end":10910599,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910604,"byte_end":10910607,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910612,"byte_end":10910638,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910643,"byte_end":10910650,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910655,"byte_end":10910662,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10910667,"byte_end":10910676,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6464},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912386,"byte_end":10912393,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911069,"byte_end":10911138,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911143,"byte_end":10911213,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911218,"byte_end":10911229,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911234,"byte_end":10911237,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911242,"byte_end":10911315,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911320,"byte_end":10911340,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911345,"byte_end":10911348,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911353,"byte_end":10911412,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911417,"byte_end":10911497,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911502,"byte_end":10911551,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911556,"byte_end":10911559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911564,"byte_end":10911640,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911645,"byte_end":10911671,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911676,"byte_end":10911679,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911684,"byte_end":10911801,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911806,"byte_end":10911869,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911874,"byte_end":10911877,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911882,"byte_end":10911896,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911901,"byte_end":10911904,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911909,"byte_end":10911916,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911921,"byte_end":10911968,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911973,"byte_end":10911976,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10911981,"byte_end":10912029,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912034,"byte_end":10912054,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912059,"byte_end":10912062,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912067,"byte_end":10912087,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912092,"byte_end":10912115,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912120,"byte_end":10912155,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912160,"byte_end":10912163,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912168,"byte_end":10912202,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912207,"byte_end":10912297,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912302,"byte_end":10912305,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912310,"byte_end":10912336,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912341,"byte_end":10912348,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912353,"byte_end":10912360,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912365,"byte_end":10912374,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6479},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913642,"byte_end":10913658,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6482},{"krate":0,"index":6483},{"krate":0,"index":6484}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913390,"byte_end":10913466,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913467,"byte_end":10913479,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913480,"byte_end":10913483,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913484,"byte_end":10913541,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913542,"byte_end":10913560,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913561,"byte_end":10913564,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913565,"byte_end":10913600,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913601,"byte_end":10913630,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6488},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915043,"byte_end":10915046,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913813,"byte_end":10913882,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913887,"byte_end":10913890,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913895,"byte_end":10913969,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913974,"byte_end":10913994,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913999,"byte_end":10914002,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914007,"byte_end":10914066,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914071,"byte_end":10914144,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914149,"byte_end":10914202,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914207,"byte_end":10914210,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914215,"byte_end":10914288,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914293,"byte_end":10914319,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914324,"byte_end":10914327,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914332,"byte_end":10914443,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914448,"byte_end":10914511,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914516,"byte_end":10914519,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914524,"byte_end":10914538,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914543,"byte_end":10914546,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914551,"byte_end":10914558,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914563,"byte_end":10914611,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914616,"byte_end":10914619,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914624,"byte_end":10914672,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914677,"byte_end":10914697,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914702,"byte_end":10914705,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914710,"byte_end":10914730,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914735,"byte_end":10914758,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914763,"byte_end":10914798,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914803,"byte_end":10914806,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914811,"byte_end":10914816,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914821,"byte_end":10914902,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914907,"byte_end":10914927,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914932,"byte_end":10914937,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914942,"byte_end":10914945,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914950,"byte_end":10914993,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10914998,"byte_end":10915005,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915010,"byte_end":10915017,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915022,"byte_end":10915031,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6491},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916845,"byte_end":10916852,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915440,"byte_end":10915507,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915512,"byte_end":10915586,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915591,"byte_end":10915602,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915607,"byte_end":10915610,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915615,"byte_end":10915689,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915694,"byte_end":10915714,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915719,"byte_end":10915722,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915727,"byte_end":10915778,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915783,"byte_end":10915858,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915863,"byte_end":10915927,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915932,"byte_end":10915935,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10915940,"byte_end":10916013,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916018,"byte_end":10916048,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916053,"byte_end":10916056,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916061,"byte_end":10916180,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916185,"byte_end":10916248,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916253,"byte_end":10916256,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916261,"byte_end":10916275,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916280,"byte_end":10916283,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916288,"byte_end":10916295,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916300,"byte_end":10916348,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916353,"byte_end":10916356,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916361,"byte_end":10916409,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916414,"byte_end":10916434,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916439,"byte_end":10916442,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916447,"byte_end":10916467,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916472,"byte_end":10916495,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916500,"byte_end":10916535,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916540,"byte_end":10916543,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916548,"byte_end":10916553,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916558,"byte_end":10916597,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916602,"byte_end":10916705,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916710,"byte_end":10916729,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916734,"byte_end":10916739,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916744,"byte_end":10916747,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916752,"byte_end":10916795,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916800,"byte_end":10916807,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916812,"byte_end":10916819,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10916824,"byte_end":10916833,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6520},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919955,"byte_end":10919958,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919745,"byte_end":10919808,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919813,"byte_end":10919816,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919821,"byte_end":10919835,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919840,"byte_end":10919843,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919848,"byte_end":10919855,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919860,"byte_end":10919888,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919893,"byte_end":10919896,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919901,"byte_end":10919931,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919936,"byte_end":10919943,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921173,"byte_end":10921177,"line_start":467,"line_end":467,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920135,"byte_end":10920206,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920211,"byte_end":10920257,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920262,"byte_end":10920265,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920270,"byte_end":10920339,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920344,"byte_end":10920420,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920425,"byte_end":10920449,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920454,"byte_end":10920457,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920462,"byte_end":10920476,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920481,"byte_end":10920484,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920489,"byte_end":10920496,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920501,"byte_end":10920524,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920529,"byte_end":10920557,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920562,"byte_end":10920565,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920570,"byte_end":10920588,"line_start":449,"line_end":449,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920593,"byte_end":10920614,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920619,"byte_end":10920663,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920668,"byte_end":10920702,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920707,"byte_end":10920710,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920715,"byte_end":10920749,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920754,"byte_end":10920780,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920785,"byte_end":10920788,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920793,"byte_end":10920826,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920831,"byte_end":10920901,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920906,"byte_end":10920946,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920951,"byte_end":10920981,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10920986,"byte_end":10921042,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921047,"byte_end":10921050,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921055,"byte_end":10921113,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921118,"byte_end":10921134,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921139,"byte_end":10921143,"line_start":465,"line_end":465,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921148,"byte_end":10921155,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922265,"byte_end":10922270,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921624,"byte_end":10921699,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921704,"byte_end":10921750,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921755,"byte_end":10921758,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921763,"byte_end":10921833,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921838,"byte_end":10921876,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921881,"byte_end":10921884,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921889,"byte_end":10921962,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921967,"byte_end":10921984,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921989,"byte_end":10921992,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10921997,"byte_end":10922011,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922016,"byte_end":10922019,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922024,"byte_end":10922031,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922036,"byte_end":10922064,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922069,"byte_end":10922072,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922077,"byte_end":10922095,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922100,"byte_end":10922121,"line_start":495,"line_end":495,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922126,"byte_end":10922158,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922163,"byte_end":10922166,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922171,"byte_end":10922208,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922213,"byte_end":10922226,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922231,"byte_end":10922235,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922240,"byte_end":10922247,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922799,"byte_end":10922809,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922734,"byte_end":10922787,"line_start":515,"line_end":515,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6597},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6598},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":13520},{"krate":0,"index":6605},{"krate":0,"index":13522},{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613},{"krate":0,"index":13534},{"krate":0,"index":6614},{"krate":0,"index":13536},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6988},{"krate":0,"index":6992},{"krate":0,"index":6995},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7005},{"krate":0,"index":6618},{"krate":0,"index":7015},{"krate":0,"index":7021},{"krate":0,"index":6625},{"krate":0,"index":7024},{"krate":0,"index":7029},{"krate":0,"index":7027},{"krate":0,"index":7031},{"krate":0,"index":7034},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6631},{"krate":0,"index":6636},{"krate":0,"index":6643},{"krate":0,"index":6648},{"krate":0,"index":6651},{"krate":0,"index":6654},{"krate":0,"index":6662},{"krate":0,"index":6664},{"krate":0,"index":6667},{"krate":0,"index":6671},{"krate":0,"index":6674},{"krate":0,"index":6676},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6682}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936308,"byte_end":10936387,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936388,"byte_end":10936398,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936399,"byte_end":10936402,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936403,"byte_end":10936479,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936480,"byte_end":10936554,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936555,"byte_end":10936558,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936559,"byte_end":10936570,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936571,"byte_end":10936574,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936575,"byte_end":10936642,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936643,"byte_end":10936708,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936709,"byte_end":10936774,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936775,"byte_end":10936845,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936846,"byte_end":10936898,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936899,"byte_end":10936902,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936903,"byte_end":10936970,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936971,"byte_end":10936974,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936975,"byte_end":10936989,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936990,"byte_end":10936993,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10936994,"byte_end":10937001,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937002,"byte_end":10937029,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937030,"byte_end":10937033,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937034,"byte_end":10937098,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937099,"byte_end":10937150,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937151,"byte_end":10937154,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937155,"byte_end":10937188,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937189,"byte_end":10937242,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937243,"byte_end":10937294,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937295,"byte_end":10937308,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937309,"byte_end":10937320,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937321,"byte_end":10937324,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937325,"byte_end":10937356,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937357,"byte_end":10937369,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937370,"byte_end":10937377,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937378,"byte_end":10937385,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937386,"byte_end":10937389,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937390,"byte_end":10937403,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937404,"byte_end":10937407,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937408,"byte_end":10937482,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937483,"byte_end":10937562,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937563,"byte_end":10937620,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937621,"byte_end":10937624,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937625,"byte_end":10937644,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937645,"byte_end":10937648,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937649,"byte_end":10937729,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937730,"byte_end":10937809,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937810,"byte_end":10937882,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937883,"byte_end":10937886,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937887,"byte_end":10937929,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937930,"byte_end":10937976,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10937977,"byte_end":10938035,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938036,"byte_end":10938080,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938081,"byte_end":10938139,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6988},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938627,"byte_end":10938635,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6990},{"krate":0,"index":6991}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938461,"byte_end":10938527,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938528,"byte_end":10938531,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938532,"byte_end":10938598,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6995},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938942,"byte_end":10938948,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6997}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938777,"byte_end":10938842,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938843,"byte_end":10938846,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938847,"byte_end":10938913,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7001},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939269,"byte_end":10939272,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":7004}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10938986,"byte_end":10939028,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939029,"byte_end":10939032,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939033,"byte_end":10939109,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939110,"byte_end":10939189,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939190,"byte_end":10939240,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6618},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939328,"byte_end":10939333,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6619},{"krate":0,"index":7009},{"krate":0,"index":7012},{"krate":0,"index":6620},{"krate":0,"index":6623}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939340,"byte_end":10939361,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7009},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939469,"byte_end":10939478,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":7011}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939386,"byte_end":10939432,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941257,"byte_end":10941264,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940489,"byte_end":10940565,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940566,"byte_end":10940569,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940570,"byte_end":10940652,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940653,"byte_end":10940729,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940730,"byte_end":10940766,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940767,"byte_end":10940770,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940771,"byte_end":10940785,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940786,"byte_end":10940789,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940790,"byte_end":10940797,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940798,"byte_end":10940825,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940826,"byte_end":10940829,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940830,"byte_end":10940894,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940895,"byte_end":10940946,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940947,"byte_end":10940950,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940951,"byte_end":10940984,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10940985,"byte_end":10941038,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941039,"byte_end":10941090,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941091,"byte_end":10941104,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941105,"byte_end":10941116,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941117,"byte_end":10941120,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941121,"byte_end":10941152,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941153,"byte_end":10941165,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941166,"byte_end":10941173,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941174,"byte_end":10941181,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941182,"byte_end":10941185,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941186,"byte_end":10941215,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941216,"byte_end":10941249,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6633},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942433,"byte_end":10942439,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941971,"byte_end":10942026,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942031,"byte_end":10942034,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942039,"byte_end":10942115,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942120,"byte_end":10942196,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942201,"byte_end":10942232,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942237,"byte_end":10942240,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942245,"byte_end":10942259,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942264,"byte_end":10942267,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942272,"byte_end":10942279,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942284,"byte_end":10942311,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942316,"byte_end":10942319,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942324,"byte_end":10942366,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942371,"byte_end":10942409,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942414,"byte_end":10942421,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6634},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10942599,"byte_end":10942612,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6638},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944333,"byte_end":10944337,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943251,"byte_end":10943311,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943316,"byte_end":10943319,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943324,"byte_end":10943392,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943397,"byte_end":10943471,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943476,"byte_end":10943549,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943554,"byte_end":10943593,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943598,"byte_end":10943601,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943606,"byte_end":10943661,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943666,"byte_end":10943669,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943674,"byte_end":10943688,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943693,"byte_end":10943696,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943701,"byte_end":10943708,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943713,"byte_end":10943740,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943745,"byte_end":10943748,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943753,"byte_end":10943771,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943776,"byte_end":10943797,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943802,"byte_end":10943853,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943858,"byte_end":10943861,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943866,"byte_end":10943907,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943912,"byte_end":10943943,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943948,"byte_end":10943951,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943956,"byte_end":10943989,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943994,"byte_end":10944039,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944044,"byte_end":10944055,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944060,"byte_end":10944063,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944068,"byte_end":10944130,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944135,"byte_end":10944176,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944181,"byte_end":10944214,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944219,"byte_end":10944222,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944227,"byte_end":10944259,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944264,"byte_end":10944293,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944298,"byte_end":10944303,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944308,"byte_end":10944315,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6656},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945403,"byte_end":10945412,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945323,"byte_end":10945391,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6657},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946243,"byte_end":10946249,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946032,"byte_end":10946078,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946083,"byte_end":10946086,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946091,"byte_end":10946165,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946170,"byte_end":10946225,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":7036},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":7038},{"krate":0,"index":7040},{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7062}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10947995,"byte_end":10948026,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948027,"byte_end":10948030,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948031,"byte_end":10948053,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948054,"byte_end":10948057,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948058,"byte_end":10948139,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948140,"byte_end":10948220,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948221,"byte_end":10948301,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948302,"byte_end":10948376,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948377,"byte_end":10948452,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948453,"byte_end":10948475,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948476,"byte_end":10948479,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948480,"byte_end":10948515,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948516,"byte_end":10948519,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948520,"byte_end":10948594,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948595,"byte_end":10948674,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948675,"byte_end":10948747,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948748,"byte_end":10948823,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948824,"byte_end":10948877,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948878,"byte_end":10948881,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948882,"byte_end":10948959,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10948960,"byte_end":10949033,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949034,"byte_end":10949113,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949114,"byte_end":10949192,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949193,"byte_end":10949265,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949266,"byte_end":10949341,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949342,"byte_end":10949416,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949417,"byte_end":10949492,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949493,"byte_end":10949523,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949524,"byte_end":10949527,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949528,"byte_end":10949606,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949607,"byte_end":10949682,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949683,"byte_end":10949760,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949761,"byte_end":10949840,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949841,"byte_end":10949919,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949920,"byte_end":10949995,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10949996,"byte_end":10950071,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950072,"byte_end":10950133,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950134,"byte_end":10950137,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950138,"byte_end":10950162,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950163,"byte_end":10950227,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950228,"byte_end":10950288,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950289,"byte_end":10950378,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950379,"byte_end":10950467,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950468,"byte_end":10950471,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950472,"byte_end":10950497,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950498,"byte_end":10950501,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950502,"byte_end":10950569,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950570,"byte_end":10950573,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950574,"byte_end":10950590,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950591,"byte_end":10950594,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950595,"byte_end":10950674,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950675,"byte_end":10950754,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950755,"byte_end":10950834,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950835,"byte_end":10950902,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950903,"byte_end":10950906,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950907,"byte_end":10950914,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950915,"byte_end":10950935,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950936,"byte_end":10950939,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950940,"byte_end":10950962,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950963,"byte_end":10950986,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10950987,"byte_end":10951023,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951024,"byte_end":10951031,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951032,"byte_end":10951039,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951040,"byte_end":10951047,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951048,"byte_end":10951051,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951052,"byte_end":10951131,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951132,"byte_end":10951210,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951211,"byte_end":10951245,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951246,"byte_end":10951249,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951250,"byte_end":10951257,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951258,"byte_end":10951278,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951279,"byte_end":10951282,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951283,"byte_end":10951363,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951364,"byte_end":10951398,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951399,"byte_end":10951413,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951414,"byte_end":10951436,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951437,"byte_end":10951444,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951445,"byte_end":10951448,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951449,"byte_end":10951459,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951460,"byte_end":10951463,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951464,"byte_end":10951508,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951509,"byte_end":10951538,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951539,"byte_end":10951578,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951579,"byte_end":10951591,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951592,"byte_end":10951599,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951600,"byte_end":10951607,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951608,"byte_end":10951611,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951612,"byte_end":10951692,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951693,"byte_end":10951769,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951770,"byte_end":10951782,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951783,"byte_end":10951786,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951787,"byte_end":10951794,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951795,"byte_end":10951815,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951816,"byte_end":10951819,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951820,"byte_end":10951858,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951859,"byte_end":10951893,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951894,"byte_end":10951935,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951936,"byte_end":10951943,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951944,"byte_end":10951947,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10951948,"byte_end":10952006,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952007,"byte_end":10952040,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952041,"byte_end":10952048,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952049,"byte_end":10952056,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952057,"byte_end":10952060,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952061,"byte_end":10952134,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952135,"byte_end":10952163,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952164,"byte_end":10952167,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952168,"byte_end":10952209,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952210,"byte_end":10952243,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952244,"byte_end":10952290,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952291,"byte_end":10952334,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952335,"byte_end":10952377,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952378,"byte_end":10952419,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952420,"byte_end":10952423,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952424,"byte_end":10952453,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952454,"byte_end":10952457,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952458,"byte_end":10952538,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952539,"byte_end":10952618,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952619,"byte_end":10952698,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952699,"byte_end":10952739,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952740,"byte_end":10952743,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952744,"byte_end":10952818,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952819,"byte_end":10952899,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952900,"byte_end":10952903,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952904,"byte_end":10952927,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952928,"byte_end":10952931,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10952932,"byte_end":10953012,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953013,"byte_end":10953079,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953080,"byte_end":10953147,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953148,"byte_end":10953222,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953223,"byte_end":10953235,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953236,"byte_end":10953239,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953240,"byte_end":10953247,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953248,"byte_end":10953268,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953269,"byte_end":10953272,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953273,"byte_end":10953296,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953297,"byte_end":10953326,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953327,"byte_end":10953389,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953390,"byte_end":10953397,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953398,"byte_end":10953405,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953406,"byte_end":10953413,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953414,"byte_end":10953417,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953418,"byte_end":10953492,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953493,"byte_end":10953560,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953561,"byte_end":10953564,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953565,"byte_end":10953576,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953577,"byte_end":10953599,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953600,"byte_end":10953664,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953665,"byte_end":10953705,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953706,"byte_end":10953768,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953769,"byte_end":10953797,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953798,"byte_end":10953805,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953806,"byte_end":10953809,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953810,"byte_end":10953839,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953840,"byte_end":10953885,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953886,"byte_end":10953898,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953899,"byte_end":10953906,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953907,"byte_end":10953914,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953915,"byte_end":10953918,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953919,"byte_end":10953942,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953943,"byte_end":10953946,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10953947,"byte_end":10954027,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954028,"byte_end":10954102,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954103,"byte_end":10954179,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954180,"byte_end":10954254,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954255,"byte_end":10954334,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954335,"byte_end":10954417,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954418,"byte_end":10954439,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954440,"byte_end":10954443,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954444,"byte_end":10954460,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954461,"byte_end":10954464,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954465,"byte_end":10954472,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954473,"byte_end":10954493,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954494,"byte_end":10954497,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954498,"byte_end":10954521,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954522,"byte_end":10954564,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954565,"byte_end":10954627,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954628,"byte_end":10954656,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954657,"byte_end":10954664,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954665,"byte_end":10954668,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954669,"byte_end":10954714,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954715,"byte_end":10954722,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954723,"byte_end":10954730,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954731,"byte_end":10954734,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954735,"byte_end":10954753,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954754,"byte_end":10954757,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954758,"byte_end":10954832,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954833,"byte_end":10954911,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954912,"byte_end":10954988,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10954989,"byte_end":10955046,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955047,"byte_end":10955125,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955126,"byte_end":10955154,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955155,"byte_end":10955158,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955159,"byte_end":10955170,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955171,"byte_end":10955191,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955192,"byte_end":10955195,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955196,"byte_end":10955234,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955235,"byte_end":10955246,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955247,"byte_end":10955274,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955275,"byte_end":10955293,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955294,"byte_end":10955336,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955337,"byte_end":10955348,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955349,"byte_end":10955352,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955353,"byte_end":10955420,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955421,"byte_end":10955453,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955454,"byte_end":10955490,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955491,"byte_end":10955496,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955497,"byte_end":10955510,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955511,"byte_end":10955518,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955519,"byte_end":10955526,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955527,"byte_end":10955530,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955531,"byte_end":10955588,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955589,"byte_end":10955646,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955647,"byte_end":10955706,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955707,"byte_end":10955756,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\mod.rs","byte_start":10955757,"byte_end":10955806,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\blocking.rs","byte_start":10958406,"byte_end":10958420,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":22068,"byte_end":22099,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7044},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\blocking.rs","byte_start":10961309,"byte_end":10961323,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":16603,"byte_end":16631,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":7063},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\spawn.rs","byte_start":10965495,"byte_end":10965500,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":7065},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":10966581,"byte_end":10966590,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":10966500,"byte_end":10966563,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7076},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7174},{"krate":0,"index":7175},{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7358},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":7436},{"krate":0,"index":7437},{"krate":0,"index":7438},{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7474},{"krate":0,"index":7475},{"krate":0,"index":7476},{"krate":0,"index":7477},{"krate":0,"index":7478},{"krate":0,"index":7724},{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7479},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7549}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967122,"byte_end":10967154,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967155,"byte_end":10967158,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967159,"byte_end":10967239,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967240,"byte_end":10967252,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967253,"byte_end":10967256,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967257,"byte_end":10967338,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967339,"byte_end":10967353,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967354,"byte_end":10967357,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967358,"byte_end":10967428,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967429,"byte_end":10967509,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967510,"byte_end":10967524,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967525,"byte_end":10967528,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967529,"byte_end":10967608,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967609,"byte_end":10967681,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967682,"byte_end":10967751,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967752,"byte_end":10967755,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967756,"byte_end":10967833,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967834,"byte_end":10967852,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967853,"byte_end":10967856,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967857,"byte_end":10967928,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967929,"byte_end":10967948,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967949,"byte_end":10967952,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10967953,"byte_end":10968023,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968024,"byte_end":10968027,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968028,"byte_end":10968042,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968043,"byte_end":10968046,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968047,"byte_end":10968093,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968094,"byte_end":10968097,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968098,"byte_end":10968105,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968106,"byte_end":10968137,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968138,"byte_end":10968141,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968142,"byte_end":10968170,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968171,"byte_end":10968174,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968175,"byte_end":10968178,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968179,"byte_end":10968197,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968198,"byte_end":10968219,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968220,"byte_end":10968272,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968273,"byte_end":10968313,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968314,"byte_end":10968319,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968320,"byte_end":10968327,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968328,"byte_end":10968331,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968332,"byte_end":10968411,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968412,"byte_end":10968490,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968491,"byte_end":10968503,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968504,"byte_end":10968507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968508,"byte_end":10968515,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968516,"byte_end":10968557,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968558,"byte_end":10968561,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968562,"byte_end":10968590,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968591,"byte_end":10968614,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968615,"byte_end":10968620,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968621,"byte_end":10968624,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968625,"byte_end":10968647,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968648,"byte_end":10968715,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968716,"byte_end":10968719,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968720,"byte_end":10968741,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968742,"byte_end":10968782,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968783,"byte_end":10968788,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968789,"byte_end":10968796,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968797,"byte_end":10968804,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968805,"byte_end":10968808,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968809,"byte_end":10968885,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968886,"byte_end":10968889,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968890,"byte_end":10968958,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10968959,"byte_end":10969031,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969032,"byte_end":10969107,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969108,"byte_end":10969186,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969187,"byte_end":10969190,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969191,"byte_end":10969269,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969270,"byte_end":10969340,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969341,"byte_end":10969353,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969354,"byte_end":10969357,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969358,"byte_end":10969365,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969366,"byte_end":10969386,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969387,"byte_end":10969390,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969391,"byte_end":10969432,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969433,"byte_end":10969459,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969460,"byte_end":10969519,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969520,"byte_end":10969525,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969526,"byte_end":10969529,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969530,"byte_end":10969548,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969549,"byte_end":10969570,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969571,"byte_end":10969643,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969644,"byte_end":10969668,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969669,"byte_end":10969703,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969704,"byte_end":10969749,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969750,"byte_end":10969759,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969760,"byte_end":10969765,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969766,"byte_end":10969773,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969774,"byte_end":10969777,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969778,"byte_end":10969821,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969822,"byte_end":10969863,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","parent":null,"children":[{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":13600},{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7566},{"krate":0,"index":7574},{"krate":0,"index":7577},{"krate":0,"index":7582},{"krate":0,"index":7585},{"krate":0,"index":7589},{"krate":0,"index":7587},{"krate":0,"index":7591},{"krate":0,"index":7595},{"krate":0,"index":7598},{"krate":0,"index":7605},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7123},{"krate":0,"index":7125},{"krate":0,"index":7128},{"krate":0,"index":7132},{"krate":0,"index":7142},{"krate":0,"index":7145},{"krate":0,"index":7147}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976014,"byte_end":10976046,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976047,"byte_end":10976050,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976051,"byte_end":10976091,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976092,"byte_end":10976095,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976096,"byte_end":10976133,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7566},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980444,"byte_end":10980454,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976374,"byte_end":10976406,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976407,"byte_end":10976410,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976411,"byte_end":10976488,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976489,"byte_end":10976529,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976530,"byte_end":10976533,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976534,"byte_end":10976545,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976546,"byte_end":10976549,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976550,"byte_end":10976617,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976618,"byte_end":10976698,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976699,"byte_end":10976777,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976778,"byte_end":10976814,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976815,"byte_end":10976818,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976819,"byte_end":10976889,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976890,"byte_end":10976976,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10976977,"byte_end":10977050,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977051,"byte_end":10977120,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977121,"byte_end":10977124,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977125,"byte_end":10977154,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977155,"byte_end":10977158,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977159,"byte_end":10977249,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977250,"byte_end":10977330,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977331,"byte_end":10977407,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977408,"byte_end":10977420,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977421,"byte_end":10977424,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977425,"byte_end":10977504,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977505,"byte_end":10977582,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977583,"byte_end":10977659,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977660,"byte_end":10977693,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977694,"byte_end":10977697,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977698,"byte_end":10977776,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977777,"byte_end":10977853,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977854,"byte_end":10977932,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977933,"byte_end":10977972,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977973,"byte_end":10977976,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977977,"byte_end":10977997,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10977998,"byte_end":10978001,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978002,"byte_end":10978100,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978101,"byte_end":10978198,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978199,"byte_end":10978240,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978241,"byte_end":10978244,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978245,"byte_end":10978345,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978346,"byte_end":10978411,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978412,"byte_end":10978415,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978416,"byte_end":10978498,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978499,"byte_end":10978526,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978527,"byte_end":10978530,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978531,"byte_end":10978542,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978543,"byte_end":10978546,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978547,"byte_end":10978594,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978595,"byte_end":10978598,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978599,"byte_end":10978617,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978618,"byte_end":10978672,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978673,"byte_end":10978676,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978677,"byte_end":10978700,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978701,"byte_end":10978735,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978736,"byte_end":10978771,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978772,"byte_end":10978800,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978801,"byte_end":10978830,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978831,"byte_end":10978857,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978858,"byte_end":10978861,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978862,"byte_end":10978880,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978881,"byte_end":10978943,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978944,"byte_end":10978986,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978987,"byte_end":10978992,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978993,"byte_end":10978996,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10978997,"byte_end":10979026,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979027,"byte_end":10979030,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979031,"byte_end":10979047,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979048,"byte_end":10979107,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979108,"byte_end":10979148,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979149,"byte_end":10979217,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979218,"byte_end":10979221,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979222,"byte_end":10979275,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979276,"byte_end":10979285,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979286,"byte_end":10979289,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979290,"byte_end":10979347,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979348,"byte_end":10979381,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979382,"byte_end":10979419,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979420,"byte_end":10979429,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979430,"byte_end":10979433,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979434,"byte_end":10979480,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979481,"byte_end":10979549,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979550,"byte_end":10979602,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979603,"byte_end":10979616,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979617,"byte_end":10979626,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979627,"byte_end":10979630,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979631,"byte_end":10979714,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979715,"byte_end":10979792,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979793,"byte_end":10979826,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979827,"byte_end":10979880,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979881,"byte_end":10979894,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979895,"byte_end":10979898,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979899,"byte_end":10979930,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979931,"byte_end":10979940,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979941,"byte_end":10979946,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979947,"byte_end":10979954,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979955,"byte_end":10979958,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979959,"byte_end":10979994,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10979995,"byte_end":10980036,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980037,"byte_end":10980060,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980061,"byte_end":10980137,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980138,"byte_end":10980185,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980186,"byte_end":10980241,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980242,"byte_end":10980279,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980280,"byte_end":10980318,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980319,"byte_end":10980337,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980338,"byte_end":10980377,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980378,"byte_end":10980415,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7577},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981169,"byte_end":10981176,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7581}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10980951,"byte_end":10981009,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981010,"byte_end":10981013,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981014,"byte_end":10981070,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981071,"byte_end":10981074,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981075,"byte_end":10981140,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7585},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981644,"byte_end":10981647,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":7586}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981344,"byte_end":10981390,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981391,"byte_end":10981394,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981395,"byte_end":10981476,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981477,"byte_end":10981512,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981513,"byte_end":10981516,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981517,"byte_end":10981554,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10981555,"byte_end":10981608,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7097},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982625,"byte_end":10982628,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982325,"byte_end":10982363,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982368,"byte_end":10982371,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982376,"byte_end":10982449,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982454,"byte_end":10982457,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982462,"byte_end":10982476,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982481,"byte_end":10982484,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982489,"byte_end":10982500,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982505,"byte_end":10982539,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982544,"byte_end":10982601,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982606,"byte_end":10982613,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7098},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983546,"byte_end":10983559,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982698,"byte_end":10982765,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982770,"byte_end":10982773,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982778,"byte_end":10982849,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982854,"byte_end":10982923,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982928,"byte_end":10982940,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982945,"byte_end":10982948,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982953,"byte_end":10982967,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982972,"byte_end":10982975,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982980,"byte_end":10982991,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982996,"byte_end":10983030,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983035,"byte_end":10983065,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983070,"byte_end":10983073,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983078,"byte_end":10983098,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983103,"byte_end":10983126,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983131,"byte_end":10983191,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983196,"byte_end":10983199,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983204,"byte_end":10983267,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983272,"byte_end":10983296,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983301,"byte_end":10983359,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983364,"byte_end":10983373,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983378,"byte_end":10983381,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983386,"byte_end":10983449,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983454,"byte_end":10983510,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983515,"byte_end":10983522,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983527,"byte_end":10983534,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7099},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985627,"byte_end":10985636,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983858,"byte_end":10983931,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983936,"byte_end":10983945,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983950,"byte_end":10983953,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10983958,"byte_end":10984032,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984037,"byte_end":10984057,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984062,"byte_end":10984065,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984070,"byte_end":10984145,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984150,"byte_end":10984228,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984233,"byte_end":10984297,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984302,"byte_end":10984305,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984310,"byte_end":10984385,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984390,"byte_end":10984465,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984470,"byte_end":10984548,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984553,"byte_end":10984626,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984631,"byte_end":10984707,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984712,"byte_end":10984746,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984751,"byte_end":10984754,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984759,"byte_end":10984811,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984816,"byte_end":10984819,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984824,"byte_end":10984836,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984841,"byte_end":10984844,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984849,"byte_end":10984909,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984914,"byte_end":10984917,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984922,"byte_end":10984936,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984941,"byte_end":10984944,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984949,"byte_end":10984964,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984969,"byte_end":10984972,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984977,"byte_end":10984988,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10984993,"byte_end":10985046,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985051,"byte_end":10985054,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985059,"byte_end":10985079,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985084,"byte_end":10985107,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985112,"byte_end":10985160,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985165,"byte_end":10985205,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985210,"byte_end":10985270,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985275,"byte_end":10985278,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985283,"byte_end":10985310,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985315,"byte_end":10985359,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985364,"byte_end":10985407,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985412,"byte_end":10985419,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985424,"byte_end":10985431,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985436,"byte_end":10985439,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985444,"byte_end":10985491,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985496,"byte_end":10985531,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985536,"byte_end":10985569,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985574,"byte_end":10985597,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10985602,"byte_end":10985615,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7100},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10986996,"byte_end":10987008,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10986788,"byte_end":10986863,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10986868,"byte_end":10986944,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10986949,"byte_end":10986984,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7103},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989412,"byte_end":10989418,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987625,"byte_end":10987702,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987707,"byte_end":10987719,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987724,"byte_end":10987727,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987732,"byte_end":10987801,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987806,"byte_end":10987834,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987839,"byte_end":10987842,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987847,"byte_end":10987922,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10987927,"byte_end":10988005,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988010,"byte_end":10988074,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988079,"byte_end":10988082,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988087,"byte_end":10988162,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988167,"byte_end":10988242,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988247,"byte_end":10988325,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988330,"byte_end":10988403,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988408,"byte_end":10988484,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988489,"byte_end":10988523,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988528,"byte_end":10988531,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988536,"byte_end":10988588,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988593,"byte_end":10988596,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988601,"byte_end":10988613,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988618,"byte_end":10988621,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988626,"byte_end":10988701,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988706,"byte_end":10988719,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988724,"byte_end":10988727,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988732,"byte_end":10988746,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988751,"byte_end":10988754,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988759,"byte_end":10988774,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988779,"byte_end":10988782,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988787,"byte_end":10988798,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988803,"byte_end":10988835,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988840,"byte_end":10988868,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988873,"byte_end":10988876,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988881,"byte_end":10988901,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988906,"byte_end":10988929,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988934,"byte_end":10988982,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10988987,"byte_end":10989055,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989060,"byte_end":10989063,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989068,"byte_end":10989095,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989100,"byte_end":10989144,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989149,"byte_end":10989192,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989197,"byte_end":10989204,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989209,"byte_end":10989216,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989221,"byte_end":10989224,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989229,"byte_end":10989276,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989281,"byte_end":10989316,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989321,"byte_end":10989354,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989359,"byte_end":10989382,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10989387,"byte_end":10989400,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991495,"byte_end":10991501,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990641,"byte_end":10990699,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990704,"byte_end":10990707,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990712,"byte_end":10990785,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990790,"byte_end":10990863,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990868,"byte_end":10990885,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990890,"byte_end":10990893,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990898,"byte_end":10990910,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990915,"byte_end":10990918,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990923,"byte_end":10990986,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990991,"byte_end":10990994,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10990999,"byte_end":10991013,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991018,"byte_end":10991021,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991026,"byte_end":10991041,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991046,"byte_end":10991049,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991054,"byte_end":10991065,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991070,"byte_end":10991102,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991107,"byte_end":10991135,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991140,"byte_end":10991143,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991148,"byte_end":10991168,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991173,"byte_end":10991196,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991201,"byte_end":10991249,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991254,"byte_end":10991322,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991327,"byte_end":10991330,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991335,"byte_end":10991362,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991367,"byte_end":10991411,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991416,"byte_end":10991459,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991464,"byte_end":10991471,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991476,"byte_end":10991483,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992909,"byte_end":10992917,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991795,"byte_end":10991868,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991873,"byte_end":10991876,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991881,"byte_end":10991956,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991961,"byte_end":10991978,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991983,"byte_end":10991986,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10991991,"byte_end":10992066,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992071,"byte_end":10992147,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992152,"byte_end":10992167,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992172,"byte_end":10992175,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992180,"byte_end":10992192,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992197,"byte_end":10992200,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992205,"byte_end":10992279,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992284,"byte_end":10992315,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992320,"byte_end":10992323,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992328,"byte_end":10992342,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992347,"byte_end":10992350,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992355,"byte_end":10992370,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992375,"byte_end":10992378,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992383,"byte_end":10992394,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992399,"byte_end":10992452,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992457,"byte_end":10992460,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992465,"byte_end":10992485,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992490,"byte_end":10992513,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992518,"byte_end":10992566,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992571,"byte_end":10992639,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992644,"byte_end":10992647,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992652,"byte_end":10992709,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992714,"byte_end":10992717,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992722,"byte_end":10992799,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992804,"byte_end":10992807,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992812,"byte_end":10992873,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992878,"byte_end":10992885,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10992890,"byte_end":10992897,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7114},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994785,"byte_end":10994790,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993635,"byte_end":10993703,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993708,"byte_end":10993722,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993727,"byte_end":10993730,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993735,"byte_end":10993810,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993815,"byte_end":10993835,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993840,"byte_end":10993843,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993848,"byte_end":10993918,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993923,"byte_end":10993993,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10993998,"byte_end":10994026,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994031,"byte_end":10994034,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994039,"byte_end":10994051,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994056,"byte_end":10994059,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994064,"byte_end":10994139,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994144,"byte_end":10994199,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994204,"byte_end":10994207,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994212,"byte_end":10994226,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994231,"byte_end":10994234,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994239,"byte_end":10994254,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994259,"byte_end":10994262,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994267,"byte_end":10994278,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994283,"byte_end":10994315,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994320,"byte_end":10994348,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994353,"byte_end":10994356,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994361,"byte_end":10994381,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994386,"byte_end":10994409,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994414,"byte_end":10994462,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994467,"byte_end":10994535,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994540,"byte_end":10994543,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994548,"byte_end":10994605,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994610,"byte_end":10994613,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994618,"byte_end":10994675,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994680,"byte_end":10994683,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994688,"byte_end":10994749,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994754,"byte_end":10994761,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994766,"byte_end":10994773,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995656,"byte_end":10995661,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994899,"byte_end":10994940,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994945,"byte_end":10994948,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10994953,"byte_end":10995027,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995032,"byte_end":10995035,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995040,"byte_end":10995106,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995111,"byte_end":10995114,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995119,"byte_end":10995166,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995171,"byte_end":10995174,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995179,"byte_end":10995193,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995198,"byte_end":10995201,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995206,"byte_end":10995217,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995222,"byte_end":10995254,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995259,"byte_end":10995287,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995292,"byte_end":10995295,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995300,"byte_end":10995320,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995325,"byte_end":10995348,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995353,"byte_end":10995401,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995406,"byte_end":10995409,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995414,"byte_end":10995472,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995477,"byte_end":10995480,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995485,"byte_end":10995526,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995531,"byte_end":10995534,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995539,"byte_end":10995567,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995572,"byte_end":10995575,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995580,"byte_end":10995620,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995625,"byte_end":10995632,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995637,"byte_end":10995644,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996133,"byte_end":10996141,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995816,"byte_end":10995891,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995896,"byte_end":10995899,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995904,"byte_end":10995918,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995923,"byte_end":10995926,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995931,"byte_end":10995942,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995947,"byte_end":10995979,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995984,"byte_end":10995987,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10995992,"byte_end":10996061,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996066,"byte_end":10996109,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996114,"byte_end":10996121,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996709,"byte_end":10996712,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996200,"byte_end":10996258,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996263,"byte_end":10996266,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996271,"byte_end":10996285,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996290,"byte_end":10996293,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996298,"byte_end":10996309,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996314,"byte_end":10996346,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996351,"byte_end":10996379,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996384,"byte_end":10996387,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996392,"byte_end":10996412,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996417,"byte_end":10996440,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996445,"byte_end":10996522,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996527,"byte_end":10996568,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996573,"byte_end":10996627,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996632,"byte_end":10996673,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996678,"byte_end":10996685,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996690,"byte_end":10996697,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997921,"byte_end":10997928,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996766,"byte_end":10996837,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996842,"byte_end":10996865,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996870,"byte_end":10996873,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996878,"byte_end":10996953,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10996958,"byte_end":10997034,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997039,"byte_end":10997115,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997120,"byte_end":10997196,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997201,"byte_end":10997224,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997229,"byte_end":10997232,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997237,"byte_end":10997309,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997314,"byte_end":10997347,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997352,"byte_end":10997355,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997360,"byte_end":10997372,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997377,"byte_end":10997380,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997385,"byte_end":10997457,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997462,"byte_end":10997484,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997489,"byte_end":10997492,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997497,"byte_end":10997511,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997516,"byte_end":10997519,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997524,"byte_end":10997531,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997536,"byte_end":10997568,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997573,"byte_end":10997601,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997606,"byte_end":10997609,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997614,"byte_end":10997634,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997639,"byte_end":10997662,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997667,"byte_end":10997715,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997720,"byte_end":10997723,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997728,"byte_end":10997789,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997794,"byte_end":10997826,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997831,"byte_end":10997834,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997839,"byte_end":10997885,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997890,"byte_end":10997897,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10997902,"byte_end":10997909,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7119},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998644,"byte_end":10998652,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998011,"byte_end":10998065,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998070,"byte_end":10998073,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998078,"byte_end":10998152,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998157,"byte_end":10998213,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998218,"byte_end":10998221,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998226,"byte_end":10998240,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998245,"byte_end":10998248,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998253,"byte_end":10998260,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998265,"byte_end":10998297,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998302,"byte_end":10998330,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998335,"byte_end":10998338,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998343,"byte_end":10998363,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998368,"byte_end":10998391,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998396,"byte_end":10998444,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998449,"byte_end":10998489,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998494,"byte_end":10998497,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998502,"byte_end":10998562,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998567,"byte_end":10998608,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998613,"byte_end":10998620,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10998625,"byte_end":10998632,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7149},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003315,"byte_end":11003322,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003260,"byte_end":11003303,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7150},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003431,"byte_end":11003438,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003368,"byte_end":11003419,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003556,"byte_end":11003566,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003496,"byte_end":11003544,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7152},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003677,"byte_end":11003685,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003609,"byte_end":11003665,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004263,"byte_end":11004274,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11003889,"byte_end":11003927,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11003928,"byte_end":11003931,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11003932,"byte_end":11004007,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004008,"byte_end":11004085,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004086,"byte_end":11004121,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004122,"byte_end":11004125,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004126,"byte_end":11004144,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004145,"byte_end":11004148,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004149,"byte_end":11004225,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004226,"byte_end":11004255,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005340,"byte_end":11005349,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004413,"byte_end":11004452,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004453,"byte_end":11004456,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004457,"byte_end":11004532,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004533,"byte_end":11004568,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004569,"byte_end":11004572,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004573,"byte_end":11004648,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004649,"byte_end":11004726,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004727,"byte_end":11004762,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004763,"byte_end":11004766,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004767,"byte_end":11004830,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004831,"byte_end":11004834,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004835,"byte_end":11004853,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004854,"byte_end":11004857,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004858,"byte_end":11004934,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004935,"byte_end":11004964,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004965,"byte_end":11004968,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004969,"byte_end":11004983,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004984,"byte_end":11004987,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11004988,"byte_end":11005035,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005036,"byte_end":11005039,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005040,"byte_end":11005047,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005048,"byte_end":11005091,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005092,"byte_end":11005095,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005096,"byte_end":11005114,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005115,"byte_end":11005136,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005137,"byte_end":11005189,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005190,"byte_end":11005230,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005231,"byte_end":11005236,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005237,"byte_end":11005244,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005245,"byte_end":11005248,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005249,"byte_end":11005290,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005609,"byte_end":11005614,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7609}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005427,"byte_end":11005482,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005483,"byte_end":11005512,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005530,"byte_end":11005597,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7168},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006054,"byte_end":11006062,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005984,"byte_end":11006042,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006266,"byte_end":11006276,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006131,"byte_end":11006176,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006181,"byte_end":11006184,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006189,"byte_end":11006254,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7170},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006665,"byte_end":11006670,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006344,"byte_end":11006394,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006399,"byte_end":11006402,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006407,"byte_end":11006481,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006486,"byte_end":11006553,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006558,"byte_end":11006561,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006566,"byte_end":11006634,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006639,"byte_end":11006653,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7667},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041233,"byte_end":11041238,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040120,"byte_end":11040171,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040172,"byte_end":11040175,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040176,"byte_end":11040237,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040238,"byte_end":11040241,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040242,"byte_end":11040316,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040317,"byte_end":11040396,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040397,"byte_end":11040472,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040473,"byte_end":11040548,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040549,"byte_end":11040577,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040578,"byte_end":11040581,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040582,"byte_end":11040659,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040660,"byte_end":11040738,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040739,"byte_end":11040815,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040816,"byte_end":11040896,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040897,"byte_end":11040974,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11040975,"byte_end":11041056,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041057,"byte_end":11041139,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041140,"byte_end":11041143,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041144,"byte_end":11041204,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041439,"byte_end":11041447,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041376,"byte_end":11041427,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7364},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041579,"byte_end":11041590,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041496,"byte_end":11041567,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7365},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041778,"byte_end":11041789,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041712,"byte_end":11041766,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7366},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041926,"byte_end":11041940,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041840,"byte_end":11041914,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7367},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042131,"byte_end":11042138,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042064,"byte_end":11042119,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7368},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042274,"byte_end":11042284,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042186,"byte_end":11042262,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043498,"byte_end":11043505,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7688}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043302,"byte_end":11043362,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043363,"byte_end":11043425,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7381},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043752,"byte_end":11043755,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043559,"byte_end":11043605,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043610,"byte_end":11043613,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043618,"byte_end":11043632,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043637,"byte_end":11043640,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043645,"byte_end":11043652,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043657,"byte_end":11043686,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043691,"byte_end":11043694,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043699,"byte_end":11043728,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043733,"byte_end":11043740,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043881,"byte_end":11043889,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043805,"byte_end":11043869,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044025,"byte_end":11044033,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043963,"byte_end":11044013,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7384},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044277,"byte_end":11044291,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044092,"byte_end":11044164,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044169,"byte_end":11044172,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044177,"byte_end":11044189,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044194,"byte_end":11044197,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044202,"byte_end":11044265,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7385},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044982,"byte_end":11045004,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044387,"byte_end":11044462,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044467,"byte_end":11044515,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044520,"byte_end":11044523,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044528,"byte_end":11044542,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044547,"byte_end":11044550,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044555,"byte_end":11044562,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044567,"byte_end":11044619,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044624,"byte_end":11044627,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044632,"byte_end":11044650,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044655,"byte_end":11044676,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044681,"byte_end":11044714,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044719,"byte_end":11044764,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044769,"byte_end":11044806,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044811,"byte_end":11044873,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044878,"byte_end":11044948,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044953,"byte_end":11044958,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11044963,"byte_end":11044970,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7386},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045727,"byte_end":11045752,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045116,"byte_end":11045191,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045196,"byte_end":11045255,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045260,"byte_end":11045263,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045268,"byte_end":11045282,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045287,"byte_end":11045290,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045295,"byte_end":11045302,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045307,"byte_end":11045359,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045364,"byte_end":11045367,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045372,"byte_end":11045390,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045395,"byte_end":11045416,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045421,"byte_end":11045454,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045459,"byte_end":11045504,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045509,"byte_end":11045546,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045551,"byte_end":11045616,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045621,"byte_end":11045693,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045698,"byte_end":11045703,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045708,"byte_end":11045715,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7387},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046523,"byte_end":11046530,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045859,"byte_end":11045929,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045934,"byte_end":11045937,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045942,"byte_end":11045954,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045959,"byte_end":11045962,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11045967,"byte_end":11046035,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046040,"byte_end":11046106,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046111,"byte_end":11046138,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046143,"byte_end":11046146,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046151,"byte_end":11046165,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046170,"byte_end":11046173,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046178,"byte_end":11046185,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046190,"byte_end":11046242,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046247,"byte_end":11046250,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046255,"byte_end":11046273,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046278,"byte_end":11046299,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046304,"byte_end":11046341,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046346,"byte_end":11046394,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046399,"byte_end":11046435,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046440,"byte_end":11046489,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046494,"byte_end":11046499,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046504,"byte_end":11046511,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7388},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046811,"byte_end":11046822,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046594,"byte_end":11046669,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046674,"byte_end":11046745,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046750,"byte_end":11046799,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7389},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047161,"byte_end":11047172,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11046944,"byte_end":11047019,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047024,"byte_end":11047095,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047100,"byte_end":11047149,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7425},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050636,"byte_end":11050644,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11048894,"byte_end":11048971,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11048972,"byte_end":11049003,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049004,"byte_end":11049007,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049008,"byte_end":11049088,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049089,"byte_end":11049128,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049129,"byte_end":11049132,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049133,"byte_end":11049206,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049207,"byte_end":11049210,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049211,"byte_end":11049223,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049224,"byte_end":11049227,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049228,"byte_end":11049273,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049274,"byte_end":11049277,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049278,"byte_end":11049292,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049293,"byte_end":11049296,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049297,"byte_end":11049304,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049305,"byte_end":11049343,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049344,"byte_end":11049347,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049348,"byte_end":11049366,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049367,"byte_end":11049388,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049389,"byte_end":11049458,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049459,"byte_end":11049462,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049463,"byte_end":11049493,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049494,"byte_end":11049524,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049525,"byte_end":11049555,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049556,"byte_end":11049559,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049560,"byte_end":11049603,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049604,"byte_end":11049609,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049610,"byte_end":11049617,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049618,"byte_end":11049621,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049622,"byte_end":11049696,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049697,"byte_end":11049700,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049701,"byte_end":11049778,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049779,"byte_end":11049854,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049855,"byte_end":11049931,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049932,"byte_end":11049993,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049994,"byte_end":11049997,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11049998,"byte_end":11050076,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050077,"byte_end":11050147,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050148,"byte_end":11050160,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050161,"byte_end":11050164,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050165,"byte_end":11050172,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050173,"byte_end":11050193,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050194,"byte_end":11050197,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050198,"byte_end":11050239,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050240,"byte_end":11050266,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050267,"byte_end":11050326,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050327,"byte_end":11050332,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050333,"byte_end":11050336,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050337,"byte_end":11050355,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050356,"byte_end":11050377,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050378,"byte_end":11050450,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050451,"byte_end":11050475,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050476,"byte_end":11050510,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050511,"byte_end":11050556,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050557,"byte_end":11050566,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050567,"byte_end":11050572,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050573,"byte_end":11050580,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050581,"byte_end":11050584,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050585,"byte_end":11050628,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7426},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051533,"byte_end":11051544,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050794,"byte_end":11050867,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050868,"byte_end":11050905,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050906,"byte_end":11050909,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050910,"byte_end":11050990,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11050991,"byte_end":11051030,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051031,"byte_end":11051034,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051035,"byte_end":11051047,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051048,"byte_end":11051051,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051052,"byte_end":11051097,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051098,"byte_end":11051101,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051102,"byte_end":11051116,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051117,"byte_end":11051120,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051121,"byte_end":11051128,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051129,"byte_end":11051183,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051184,"byte_end":11051187,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051188,"byte_end":11051206,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051207,"byte_end":11051228,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051229,"byte_end":11051292,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051293,"byte_end":11051366,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051367,"byte_end":11051370,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051371,"byte_end":11051401,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051402,"byte_end":11051432,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051433,"byte_end":11051463,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051464,"byte_end":11051467,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051468,"byte_end":11051511,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051512,"byte_end":11051517,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051518,"byte_end":11051525,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7710},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051993,"byte_end":11052001,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7712}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051742,"byte_end":11051821,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051822,"byte_end":11051825,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051826,"byte_end":11051903,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051904,"byte_end":11051916,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051917,"byte_end":11051920,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11051921,"byte_end":11051964,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7428},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052246,"byte_end":11052255,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7429},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053347,"byte_end":11053351,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052742,"byte_end":11052811,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052816,"byte_end":11052819,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052824,"byte_end":11052838,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052843,"byte_end":11052846,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052851,"byte_end":11052858,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052863,"byte_end":11052883,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052888,"byte_end":11052891,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052896,"byte_end":11052924,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052929,"byte_end":11052932,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052937,"byte_end":11052955,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052960,"byte_end":11052981,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052986,"byte_end":11053055,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053060,"byte_end":11053063,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053068,"byte_end":11053098,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053103,"byte_end":11053133,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053138,"byte_end":11053168,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053173,"byte_end":11053176,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053181,"byte_end":11053224,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053229,"byte_end":11053234,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053239,"byte_end":11053246,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053251,"byte_end":11053291,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":7453},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055033,"byte_end":11055040,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054018,"byte_end":11054095,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054096,"byte_end":11054099,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054100,"byte_end":11054179,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054180,"byte_end":11054252,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054253,"byte_end":11054266,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054267,"byte_end":11054270,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054271,"byte_end":11054288,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054289,"byte_end":11054292,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054293,"byte_end":11054371,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054372,"byte_end":11054402,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054403,"byte_end":11054406,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054407,"byte_end":11054487,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054488,"byte_end":11054515,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054516,"byte_end":11054519,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054520,"byte_end":11054534,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054535,"byte_end":11054538,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054539,"byte_end":11054599,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054600,"byte_end":11054603,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054604,"byte_end":11054615,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054616,"byte_end":11054645,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054646,"byte_end":11054675,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054676,"byte_end":11054679,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054680,"byte_end":11054708,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054709,"byte_end":11054712,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054713,"byte_end":11054735,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054736,"byte_end":11054774,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054775,"byte_end":11054802,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054803,"byte_end":11054806,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054807,"byte_end":11054880,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054881,"byte_end":11054947,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11054948,"byte_end":11055003,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055004,"byte_end":11055009,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055010,"byte_end":11055017,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055018,"byte_end":11055025,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7455},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056262,"byte_end":11056272,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055231,"byte_end":11055303,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055304,"byte_end":11055307,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055308,"byte_end":11055385,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055386,"byte_end":11055441,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055442,"byte_end":11055445,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055446,"byte_end":11055463,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055464,"byte_end":11055467,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055468,"byte_end":11055546,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055547,"byte_end":11055577,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055578,"byte_end":11055581,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055582,"byte_end":11055662,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055663,"byte_end":11055690,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055691,"byte_end":11055694,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055695,"byte_end":11055709,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055710,"byte_end":11055713,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055714,"byte_end":11055774,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055775,"byte_end":11055778,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055779,"byte_end":11055790,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055791,"byte_end":11055834,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055835,"byte_end":11055864,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055865,"byte_end":11055868,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055869,"byte_end":11055897,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055898,"byte_end":11055901,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055902,"byte_end":11055924,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055925,"byte_end":11055963,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055964,"byte_end":11055991,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055992,"byte_end":11055995,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11055996,"byte_end":11056074,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056075,"byte_end":11056089,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056090,"byte_end":11056176,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056177,"byte_end":11056232,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056233,"byte_end":11056238,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056239,"byte_end":11056246,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056247,"byte_end":11056254,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8161},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056647,"byte_end":11056654,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8163},{"krate":0,"index":8164}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7715},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056811,"byte_end":11056818,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056739,"byte_end":11056771,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7462},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057169,"byte_end":11057176,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057096,"byte_end":11057157,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7463},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057304,"byte_end":11057311,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057223,"byte_end":11057292,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7464},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057440,"byte_end":11057450,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057370,"byte_end":11057428,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075583,"byte_end":11075591,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075009,"byte_end":11075068,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075069,"byte_end":11075138,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075139,"byte_end":11075142,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075143,"byte_end":11075156,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075157,"byte_end":11075160,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075161,"byte_end":11075191,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075192,"byte_end":11075210,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075211,"byte_end":11075239,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075240,"byte_end":11075273,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075274,"byte_end":11075304,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075305,"byte_end":11075308,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075309,"byte_end":11075331,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075332,"byte_end":11075423,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075424,"byte_end":11075427,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075428,"byte_end":11075438,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075439,"byte_end":11075501,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075502,"byte_end":11075553,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075554,"byte_end":11075559,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075560,"byte_end":11075567,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11075568,"byte_end":11075575,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076086,"byte_end":11076094,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":8115},{"krate":0,"index":8116},{"krate":0,"index":8117},{"krate":0,"index":8118}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.12\\src\\lib.rs","byte_start":9877589,"byte_end":9877598,"line_start":225,"line_end":225,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076561,"byte_end":11076568,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076454,"byte_end":11076527,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076532,"byte_end":11076549,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076877,"byte_end":11076884,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076616,"byte_end":11076694,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076699,"byte_end":11076719,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076724,"byte_end":11076727,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076732,"byte_end":11076812,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076817,"byte_end":11076865,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077179,"byte_end":11077189,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076944,"byte_end":11077006,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077011,"byte_end":11077014,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077019,"byte_end":11077096,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077101,"byte_end":11077167,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":7511},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074142,"byte_end":11074147,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":7510},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074092,"byte_end":11074132,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":7512},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074205,"byte_end":11074213,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":7510},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074178,"byte_end":11074195,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":7513},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074302,"byte_end":11074307,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":7510},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074220,"byte_end":11074292,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182194,"byte_end":182200,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182103,"byte_end":182132,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182137,"byte_end":182140,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182145,"byte_end":182184,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182230,"byte_end":182236,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":788},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182207,"byte_end":182220,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":198821,"byte_end":198833,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":198686,"byte_end":198737,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10107093,"byte_end":10107104,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10107863,"byte_end":10107874,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10108081,"byte_end":10108092,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10110714,"byte_end":10110725,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10096413,"byte_end":10096419,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099280,"byte_end":10099286,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099685,"byte_end":10099691,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099827,"byte_end":10099833,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10100994,"byte_end":10101000,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10101078,"byte_end":10101084,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10101219,"byte_end":10101224,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10102768,"byte_end":10102777,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117283,"byte_end":10117294,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10125085,"byte_end":10125096,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10125589,"byte_end":10125600,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10126681,"byte_end":10126692,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10126865,"byte_end":10126876,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129024,"byte_end":10129036,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139906,"byte_end":10139918,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139943,"byte_end":10139955,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139974,"byte_end":10139986,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141768,"byte_end":10141776,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142693,"byte_end":10142702,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142952,"byte_end":10142960,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10143515,"byte_end":10143524,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10144473,"byte_end":10144478,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10144871,"byte_end":10144876,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145129,"byte_end":10145134,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145257,"byte_end":10145265,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145302,"byte_end":10145311,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145348,"byte_end":10145356,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145393,"byte_end":10145402,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145445,"byte_end":10145453,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145621,"byte_end":10145630,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":10146320,"byte_end":10146324,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10158419,"byte_end":10158420,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10197852,"byte_end":10197853,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199611,"byte_end":10199612,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10234959,"byte_end":10234960,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236376,"byte_end":10236385,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238564,"byte_end":10238573,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10239549,"byte_end":10239558,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10240389,"byte_end":10240398,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10241114,"byte_end":10241123,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242630,"byte_end":10242639,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244476,"byte_end":10244485,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244627,"byte_end":10244636,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10245348,"byte_end":10245357,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10245887,"byte_end":10245896,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10246375,"byte_end":10246384,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248338,"byte_end":10248347,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250625,"byte_end":10250634,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10251524,"byte_end":10251533,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10252015,"byte_end":10252024,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10252311,"byte_end":10252320,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253489,"byte_end":10253494,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254634,"byte_end":10254639,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254918,"byte_end":10254923,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10255746,"byte_end":10255751,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":10258794,"byte_end":10258798,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10261908,"byte_end":10261913,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10262242,"byte_end":10262247,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10262480,"byte_end":10262485,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":10263306,"byte_end":10263311,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264491,"byte_end":10264496,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265748,"byte_end":10265753,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10266500,"byte_end":10266505,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269665,"byte_end":10269677,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10270226,"byte_end":10270238,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10270963,"byte_end":10270975,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10271135,"byte_end":10271139,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10271545,"byte_end":10271549,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10272375,"byte_end":10272379,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":10274307,"byte_end":10274311,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":10275372,"byte_end":10275379,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":10276744,"byte_end":10276753,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":10285031,"byte_end":10285039,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":10290959,"byte_end":10290968,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":10293707,"byte_end":10293719,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":10296159,"byte_end":10296168,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":10298002,"byte_end":10298008,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":10299130,"byte_end":10299138,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10300971,"byte_end":10300975,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10301485,"byte_end":10301489,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302454,"byte_end":10302459,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303198,"byte_end":10303203,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303982,"byte_end":10303987,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317526,"byte_end":10317538,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10318043,"byte_end":10318055,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10319594,"byte_end":10319606,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10323135,"byte_end":10323147,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305155,"byte_end":10305159,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306787,"byte_end":10306791,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10307448,"byte_end":10307452,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":10309009,"byte_end":10309014,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":10309807,"byte_end":10309815,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":10311323,"byte_end":10311331,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327831,"byte_end":10327842,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338537,"byte_end":10338548,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338863,"byte_end":10338874,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10339314,"byte_end":10339325,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10339651,"byte_end":10339662,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340721,"byte_end":10340729,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10341367,"byte_end":10341375,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343538,"byte_end":10343546,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10346001,"byte_end":10346009,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2848},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10346329,"byte_end":10346338,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10347151,"byte_end":10347159,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10347253,"byte_end":10347262,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350350,"byte_end":10350362,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350565,"byte_end":10350577,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350587,"byte_end":10350600,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353434,"byte_end":10353447,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353752,"byte_end":10353766,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354449,"byte_end":10354463,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354623,"byte_end":10354637,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10355576,"byte_end":10355589,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10355685,"byte_end":10355699,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357834,"byte_end":10357843,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2954},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10382900,"byte_end":10382909,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10383345,"byte_end":10383354,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10383707,"byte_end":10383716,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10384030,"byte_end":10384039,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10384783,"byte_end":10384792,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386021,"byte_end":10386030,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400691,"byte_end":10400700,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10401136,"byte_end":10401145,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10401465,"byte_end":10401474,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403788,"byte_end":10403800,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404003,"byte_end":10404015,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404542,"byte_end":10404550,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406182,"byte_end":10406190,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407510,"byte_end":10407518,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407609,"byte_end":10407617,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10407830,"byte_end":10407836,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10408793,"byte_end":10408799,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10409013,"byte_end":10409019,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10411145,"byte_end":10411159,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10414698,"byte_end":10414703,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10415390,"byte_end":10415404,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416291,"byte_end":10416305,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416471,"byte_end":10416478,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416936,"byte_end":10416943,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10417111,"byte_end":10417114,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10418212,"byte_end":10418218,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10425901,"byte_end":10425907,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10425932,"byte_end":10425938,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10426297,"byte_end":10426301,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10427079,"byte_end":10427083,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10432834,"byte_end":10432840,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433465,"byte_end":10433474,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436553,"byte_end":10436562,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436805,"byte_end":10436814,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10437091,"byte_end":10437100,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10437134,"byte_end":10437139,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10437817,"byte_end":10437824,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10438301,"byte_end":10438308,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3562},{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3583}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10440479,"byte_end":10440484,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452788,"byte_end":10452798,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452835,"byte_end":10452845,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452861,"byte_end":10452871,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10453047,"byte_end":10453057,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10453084,"byte_end":10453094,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10454320,"byte_end":10454330,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10454596,"byte_end":10454606,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10455853,"byte_end":10455860,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10457391,"byte_end":10457398,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10457488,"byte_end":10457495,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10460177,"byte_end":10460182,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10469038,"byte_end":10469046,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10470923,"byte_end":10470928,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10471087,"byte_end":10471095,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\waker.rs","byte_start":10472913,"byte_end":10472921,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10474669,"byte_end":10474682,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3893}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10475840,"byte_end":10475844,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10476244,"byte_end":10476248,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419231,"byte_end":10419235,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419266,"byte_end":10419270,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419407,"byte_end":10419415,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419456,"byte_end":10419464,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421388,"byte_end":10421392,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421689,"byte_end":10421697,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3912},{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421948,"byte_end":10421952,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422145,"byte_end":10422153,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422284,"byte_end":10422288,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422457,"byte_end":10422465,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422751,"byte_end":10422755,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422995,"byte_end":10422999,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10423151,"byte_end":10423159,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3838}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10423375,"byte_end":10423379,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10478656,"byte_end":10478668,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480554,"byte_end":10480566,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3972}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480652,"byte_end":10480664,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480825,"byte_end":10480832,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10483275,"byte_end":10483280,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10486029,"byte_end":10486036,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\schedule.rs","byte_start":10486539,"byte_end":10486551,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\shutdown.rs","byte_start":10487424,"byte_end":10487432,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4005}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489180,"byte_end":10489192,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489418,"byte_end":10489430,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489460,"byte_end":10489472,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4024},{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4058}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4062},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4095}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4132}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4136}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10491443,"byte_end":10491449,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4170}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10491918,"byte_end":10491924,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10492240,"byte_end":10492246,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10492965,"byte_end":10492973,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10493042,"byte_end":10493047,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500270,"byte_end":10500275,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500306,"byte_end":10500311,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500342,"byte_end":10500348,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500379,"byte_end":10500385,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10501244,"byte_end":10501249,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4279},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10507783,"byte_end":10507788,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10512956,"byte_end":10512961,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513057,"byte_end":10513062,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513221,"byte_end":10513226,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513414,"byte_end":10513420,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10516925,"byte_end":10516931,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4316}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521157,"byte_end":10521167,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521204,"byte_end":10521214,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521230,"byte_end":10521240,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10522027,"byte_end":10522037,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10522843,"byte_end":10522847,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10526720,"byte_end":10526725,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4380}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10528203,"byte_end":10528208,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4382}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10528381,"byte_end":10528386,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10534150,"byte_end":10534155,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4542}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10537785,"byte_end":10537791,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10538566,"byte_end":10538573,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10542839,"byte_end":10542843,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10547655,"byte_end":10547661,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10548101,"byte_end":10548104,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10550675,"byte_end":10550681,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10518983,"byte_end":10518993,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4510}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520148,"byte_end":10520158,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520297,"byte_end":10520307,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520410,"byte_end":10520417,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4519}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520838,"byte_end":10520845,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4583}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4598}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4600}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580264,"byte_end":10580273,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580419,"byte_end":10580428,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580467,"byte_end":10580476,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4626},{"krate":0,"index":4627}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581427,"byte_end":10581436,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4640}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581582,"byte_end":10581591,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581630,"byte_end":10581639,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":10582562,"byte_end":10582567,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4662}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":10582747,"byte_end":10582752,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584330,"byte_end":10584337,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584621,"byte_end":10584628,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4694},{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10585604,"byte_end":10585610,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10585665,"byte_end":10585671,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586060,"byte_end":10586063,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586109,"byte_end":10586112,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586495,"byte_end":10586498,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586546,"byte_end":10586549,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10587064,"byte_end":10587070,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10587159,"byte_end":10587165,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588243,"byte_end":10588248,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588296,"byte_end":10588301,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588701,"byte_end":10588709,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588757,"byte_end":10588765,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590036,"byte_end":10590041,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590072,"byte_end":10590077,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590108,"byte_end":10590113,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590656,"byte_end":10590661,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591275,"byte_end":10591281,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591499,"byte_end":10591505,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4802}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591624,"byte_end":10591630,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10592716,"byte_end":10592725,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10592946,"byte_end":10592955,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10593077,"byte_end":10593086,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":10594158,"byte_end":10594168,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4846}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":10594364,"byte_end":10594374,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4851},{"krate":0,"index":4852}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":10595273,"byte_end":10595277,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":10595437,"byte_end":10595441,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596384,"byte_end":10596388,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10597050,"byte_end":10597054,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10597800,"byte_end":10597803,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10597992,"byte_end":10597995,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10598116,"byte_end":10598119,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4912}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":10598964,"byte_end":10598969,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":10599223,"byte_end":10599228,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600740,"byte_end":10600744,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600778,"byte_end":10600782,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4950}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600923,"byte_end":10600927,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4953},{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601423,"byte_end":10601427,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10602054,"byte_end":10602058,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602605,"byte_end":10602612,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602643,"byte_end":10602650,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602681,"byte_end":10602688,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603381,"byte_end":10603388,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609053,"byte_end":10609062,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10616063,"byte_end":10616072,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10617611,"byte_end":10617620,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10618836,"byte_end":10618840,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10619050,"byte_end":10619054,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5057}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10619187,"byte_end":10619191,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620417,"byte_end":10620426,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5076}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620647,"byte_end":10620656,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620841,"byte_end":10620850,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5084},{"krate":0,"index":5085},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622199,"byte_end":10622206,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622240,"byte_end":10622247,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5102}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622454,"byte_end":10622461,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623071,"byte_end":10623075,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623285,"byte_end":10623289,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5124}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623422,"byte_end":10623426,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10624945,"byte_end":10624954,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10625214,"byte_end":10625223,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10625416,"byte_end":10625425,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5155}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":10657127,"byte_end":10657134,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":10657489,"byte_end":10657496,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579494,"byte_end":10579496,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675972,"byte_end":10675979,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5301},{"krate":0,"index":5302}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679259,"byte_end":10679276,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10689843,"byte_end":10689849,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5378}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10689976,"byte_end":10689982,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5382}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690143,"byte_end":10690147,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690217,"byte_end":10690221,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10692995,"byte_end":10693001,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693038,"byte_end":10693044,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693082,"byte_end":10693090,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693127,"byte_end":10693135,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693151,"byte_end":10693157,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10698793,"byte_end":10698797,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5410}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699189,"byte_end":10699195,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699375,"byte_end":10699381,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699535,"byte_end":10699543,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704408,"byte_end":10704416,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5438}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10707234,"byte_end":10707239,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710591,"byte_end":10710599,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5443},{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10711049,"byte_end":10711057,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10712241,"byte_end":10712245,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10713087,"byte_end":10713091,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10713821,"byte_end":10713829,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10715141,"byte_end":10715145,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6746}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10715869,"byte_end":10715873,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10716671,"byte_end":10716677,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717092,"byte_end":10717098,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5475}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717242,"byte_end":10717250,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5478}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717385,"byte_end":10717394,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717567,"byte_end":10717576,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5487}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717867,"byte_end":10717876,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718149,"byte_end":10718158,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718185,"byte_end":10718197,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718539,"byte_end":10718551,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10724860,"byte_end":10724865,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5549},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5553},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10734847,"byte_end":10734853,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10735335,"byte_end":10735341,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735979,"byte_end":10735985,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5588}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736117,"byte_end":10736123,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5591}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736530,"byte_end":10736538,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738310,"byte_end":10738318,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740746,"byte_end":10740754,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740814,"byte_end":10740822,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6753},{"krate":0,"index":6754}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741010,"byte_end":10741016,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5628},{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10752406,"byte_end":10752408,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5665}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10752809,"byte_end":10752811,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5673}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10753118,"byte_end":10753127,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5676}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10753389,"byte_end":10753401,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10755186,"byte_end":10755190,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10755823,"byte_end":10755831,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756097,"byte_end":10756101,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756150,"byte_end":10756154,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756633,"byte_end":10756635,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757334,"byte_end":10757336,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5727}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757484,"byte_end":10757486,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757664,"byte_end":10757666,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10758066,"byte_end":10758068,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5738}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10758595,"byte_end":10758597,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5745},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10761717,"byte_end":10761719,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5755}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10762155,"byte_end":10762159,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10762623,"byte_end":10762627,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5765}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10763176,"byte_end":10763188,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10764848,"byte_end":10764859,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10767603,"byte_end":10767605,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5832}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10773309,"byte_end":10773311,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5835}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10773588,"byte_end":10773590,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10776989,"byte_end":10776991,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777665,"byte_end":10777680,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5860}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777821,"byte_end":10777836,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778294,"byte_end":10778311,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779289,"byte_end":10779306,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5882},{"krate":0,"index":5883}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781778,"byte_end":10781795,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5887}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781961,"byte_end":10781976,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783086,"byte_end":10783095,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5901}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783255,"byte_end":10783264,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783750,"byte_end":10783762,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783795,"byte_end":10783807,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784147,"byte_end":10784159,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5911}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784388,"byte_end":10784397,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784527,"byte_end":10784536,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785022,"byte_end":10785034,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785340,"byte_end":10785352,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785509,"byte_end":10785520,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785619,"byte_end":10785630,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785760,"byte_end":10785771,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786275,"byte_end":10786291,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786328,"byte_end":10786344,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792643,"byte_end":10792648,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792702,"byte_end":10792707,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792761,"byte_end":10792771,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792836,"byte_end":10792851,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793138,"byte_end":10793150,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5953}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793287,"byte_end":10793299,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794107,"byte_end":10794112,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5964},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798685,"byte_end":10798690,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5973}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798774,"byte_end":10798779,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798903,"byte_end":10798908,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799303,"byte_end":10799313,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5982}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799414,"byte_end":10799424,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5985},{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799571,"byte_end":10799581,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799738,"byte_end":10799748,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5992}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799914,"byte_end":10799924,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5995}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800102,"byte_end":10800117,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800214,"byte_end":10800229,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800372,"byte_end":10800387,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800540,"byte_end":10800555,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800717,"byte_end":10800732,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10804696,"byte_end":10804704,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10804737,"byte_end":10804745,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805008,"byte_end":10805014,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6045}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10809022,"byte_end":10809028,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10810766,"byte_end":10810774,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10811284,"byte_end":10811292,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6052},{"krate":0,"index":6053}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10816122,"byte_end":10816130,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10819088,"byte_end":10819094,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6063}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820970,"byte_end":10820979,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6089}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821141,"byte_end":10821150,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821219,"byte_end":10821231,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821530,"byte_end":10821542,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823353,"byte_end":10823359,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6108},{"krate":0,"index":6110},{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829660,"byte_end":10829666,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829805,"byte_end":10829813,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6121},{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834204,"byte_end":10834212,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6125}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834359,"byte_end":10834367,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834830,"byte_end":10834835,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6138},{"krate":0,"index":6142},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6150},{"krate":0,"index":6152}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839207,"byte_end":10839212,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839249,"byte_end":10839254,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839279,"byte_end":10839284,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6160}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839653,"byte_end":10839658,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10840053,"byte_end":10840058,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10841771,"byte_end":10841776,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6185}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10845254,"byte_end":10845263,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6226},{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6240}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10855184,"byte_end":10855193,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6244}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10855394,"byte_end":10855400,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6247}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10856266,"byte_end":10856273,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6249},{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10856951,"byte_end":10856958,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6253},{"krate":0,"index":6254}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10857757,"byte_end":10857764,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6258}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859406,"byte_end":10859413,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859460,"byte_end":10859472,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6261}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859565,"byte_end":10859577,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859721,"byte_end":10859733,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859780,"byte_end":10859795,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860417,"byte_end":10860432,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860718,"byte_end":10860733,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860826,"byte_end":10860832,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10866101,"byte_end":10866110,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6329},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882304,"byte_end":10882313,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882392,"byte_end":10882401,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882779,"byte_end":10882788,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882813,"byte_end":10882822,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882860,"byte_end":10882866,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6349},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6356},{"krate":0,"index":6358},{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889272,"byte_end":10889278,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889351,"byte_end":10889357,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6364}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889779,"byte_end":10889791,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889971,"byte_end":10889983,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890127,"byte_end":10890139,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890186,"byte_end":10890201,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6372},{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890731,"byte_end":10890746,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6375}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10891032,"byte_end":10891047,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10891085,"byte_end":10891091,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10896578,"byte_end":10896586,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6403}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10900249,"byte_end":10900257,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6405}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10900610,"byte_end":10900621,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903350,"byte_end":10903359,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6429}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905454,"byte_end":10905469,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905714,"byte_end":10905734,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905988,"byte_end":10906003,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10906111,"byte_end":10906131,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6439}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909485,"byte_end":10909500,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6464}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912918,"byte_end":10912933,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913113,"byte_end":10913128,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6474}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913304,"byte_end":10913319,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6478}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913783,"byte_end":10913799,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6488},{"krate":0,"index":6491}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917393,"byte_end":10917409,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917589,"byte_end":10917605,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917781,"byte_end":10917797,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6505}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10918873,"byte_end":10918879,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10918933,"byte_end":10918939,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919173,"byte_end":10919188,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919246,"byte_end":10919261,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919326,"byte_end":10919342,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919655,"byte_end":10919671,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919729,"byte_end":10919735,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6525},{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922923,"byte_end":10922938,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923069,"byte_end":10923085,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6537}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923219,"byte_end":10923235,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6540}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923349,"byte_end":10923355,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6543}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923447,"byte_end":10923453,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6546}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10929728,"byte_end":10929739,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6577},{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935666,"byte_end":10935677,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6581}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935763,"byte_end":10935774,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935907,"byte_end":10935918,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935943,"byte_end":10935954,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10936050,"byte_end":10936055,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6590},{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939596,"byte_end":10939605,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6622}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939785,"byte_end":10939794,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941953,"byte_end":10941961,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6633},{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943233,"byte_end":10943241,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6638}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944607,"byte_end":10944615,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6645},{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944874,"byte_end":10944882,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6650}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945185,"byte_end":10945193,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945307,"byte_end":10945313,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6661}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946848,"byte_end":10946854,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947093,"byte_end":10947096,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6669},{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947237,"byte_end":10947243,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6673}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947345,"byte_end":10947352,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6675}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947575,"byte_end":10947582,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6677}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947699,"byte_end":10947706,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947736,"byte_end":10947743,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6680}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947890,"byte_end":10947897,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6683},{"krate":0,"index":6684}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":10966716,"byte_end":10966724,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7071},{"krate":0,"index":7072}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\clock.rs","byte_start":10971702,"byte_end":10971707,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982305,"byte_end":10982315,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7108},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119},{"krate":0,"index":7120},{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000309,"byte_end":11000319,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000347,"byte_end":11000357,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7127}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000494,"byte_end":11000504,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7130},{"krate":0,"index":7131}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000886,"byte_end":11000891,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7134},{"krate":0,"index":7135},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7141}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003018,"byte_end":11003023,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003153,"byte_end":11003156,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":7146}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003243,"byte_end":11003250,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7149},{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005788,"byte_end":11005793,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7167},{"krate":0,"index":7168},{"krate":0,"index":7169},{"krate":0,"index":7170}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006771,"byte_end":11006776,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7172},{"krate":0,"index":7173}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11020446,"byte_end":11020457,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11022435,"byte_end":11022453,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7193},{"krate":0,"index":7194}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11023049,"byte_end":11023067,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7196}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11027305,"byte_end":11027310,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11033978,"byte_end":11033983,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7240}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11034191,"byte_end":11034196,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11034221,"byte_end":11034226,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":11034603,"byte_end":11034609,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7252},{"krate":0,"index":7253},{"krate":0,"index":7254}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":11035272,"byte_end":11035278,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7256}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":11035723,"byte_end":11035735,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7275}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":11036645,"byte_end":11036657,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7278}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":11036941,"byte_end":11036946,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7286}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":11037037,"byte_end":11037042,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":7295}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11011741,"byte_end":11011747,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7335}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11015444,"byte_end":11015450,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7339},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7343},{"krate":0,"index":7344}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11018023,"byte_end":11018029,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7348}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11018145,"byte_end":11018150,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7350},{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11019767,"byte_end":11019772,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7357}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041364,"byte_end":11041369,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368},{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042736,"byte_end":11042741,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042768,"byte_end":11042773,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043545,"byte_end":11043552,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047326,"byte_end":11047333,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7391}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047462,"byte_end":11047469,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7393}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047584,"byte_end":11047591,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7395},{"krate":0,"index":7396}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047756,"byte_end":11047763,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7398}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047868,"byte_end":11047875,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7400},{"krate":0,"index":7401}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048016,"byte_end":11048023,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7403},{"krate":0,"index":7404}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048184,"byte_end":11048191,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048298,"byte_end":11048305,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7408}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052187,"byte_end":11052195,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7428},{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053490,"byte_end":11053498,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7434},{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056830,"byte_end":11056837,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7458}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056966,"byte_end":11056973,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057511,"byte_end":11057518,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7467},{"krate":0,"index":7468}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058096,"byte_end":11058103,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7470}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058247,"byte_end":11058254,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058291,"byte_end":11058296,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7473}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076436,"byte_end":11076444,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7742},{"krate":0,"index":7743}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077259,"byte_end":11077267,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7746},{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":11068200,"byte_end":11068205,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7492},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":11072957,"byte_end":11072962,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7501}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":11060021,"byte_end":11060026,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7526},{"krate":0,"index":7527},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":7532},{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7538},{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":11065734,"byte_end":11065738,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7542}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":11078100,"byte_end":11078104,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7782},{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":11079578,"byte_end":11079582,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\addr.rs","byte_start":11086801,"byte_end":11086808,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7809},{"krate":0,"index":7810},{"krate":0,"index":7811},{"krate":0,"index":7812},{"krate":0,"index":7813},{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7816}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\generation.rs","byte_start":11089837,"byte_end":11089847,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7828},{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11090986,"byte_end":11090991,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7854},{"krate":0,"index":7856}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11091333,"byte_end":11091339,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7863},{"krate":0,"index":7866},{"krate":0,"index":7869},{"krate":0,"index":7872}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11095291,"byte_end":11095296,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7877}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11095602,"byte_end":11095608,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7881}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":11097751,"byte_end":11097756,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7895},{"krate":0,"index":7898},{"krate":0,"index":7899},{"krate":0,"index":7900},{"krate":0,"index":7901},{"krate":0,"index":7902}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":11099435,"byte_end":11099440,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\slot.rs","byte_start":11099817,"byte_end":11099821,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7918},{"krate":0,"index":7919},{"krate":0,"index":7920},{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":11100792,"byte_end":11100805,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937},{"krate":0,"index":7938}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":11101633,"byte_end":11101646,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7941}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081180,"byte_end":11081184,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081221,"byte_end":11081225,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081248,"byte_end":11081252,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7958},{"krate":0,"index":7959},{"krate":0,"index":7960},{"krate":0,"index":7961}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11082767,"byte_end":11082771,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8021}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8025},{"krate":0,"index":8026}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102458,"byte_end":11102465,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102502,"byte_end":11102509,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102547,"byte_end":11102556,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102742,"byte_end":11102749,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8070},{"krate":0,"index":8071}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103383,"byte_end":11103392,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8074},{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103524,"byte_end":11103533,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8078}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103655,"byte_end":11103664,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8081}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2761}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3057}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":564}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":570}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4607}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14509,"byte_end":14513,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5296}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673717,"byte_end":10673726,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5310}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10673884,"byte_end":10673888,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5497}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\mod.rs","byte_start":10722277,"byte_end":10722282,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5896}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674035,"byte_end":10674042,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6067}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mod.rs","byte_start":10674356,"byte_end":10674361,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6597}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7036}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7073}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\mod.rs","byte_start":10969991,"byte_end":10970002,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7076}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":906},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":34518},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":7050},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10107093,"byte_end":10107104,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1185},"to":{"krate":0,"index":7820}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10107863,"byte_end":10107874,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10108081,"byte_end":10108092,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\scheduled_io.rs","byte_start":10110714,"byte_end":10110725,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10096413,"byte_end":10096419,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099280,"byte_end":10099286,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1052},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099685,"byte_end":10099691,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1052},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10099827,"byte_end":10099833,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10100994,"byte_end":10101000,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10101078,"byte_end":10101084,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10101219,"byte_end":10101224,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\driver\\mod.rs","byte_start":10102768,"byte_end":10102777,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10117283,"byte_end":10117294,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10125085,"byte_end":10125096,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1211},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10125589,"byte_end":10125600,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1211},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10126681,"byte_end":10126692,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\poll_evented.rs","byte_start":10126865,"byte_end":10126876,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10129024,"byte_end":10129036,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139906,"byte_end":10139918,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139943,"byte_end":10139955,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\registration.rs","byte_start":10139974,"byte_end":10139986,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10141768,"byte_end":10141776,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142693,"byte_end":10142702,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10142952,"byte_end":10142960,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10143515,"byte_end":10143524,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1335},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10144473,"byte_end":10144478,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10144871,"byte_end":10144876,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145129,"byte_end":10145134,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145257,"byte_end":10145265,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145302,"byte_end":10145311,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145348,"byte_end":10145356,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145393,"byte_end":10145402,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145445,"byte_end":10145453,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\split.rs","byte_start":10145621,"byte_end":10145630,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\seek.rs","byte_start":10146320,"byte_end":10146324,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1340},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10149386,"byte_end":10149398,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2074}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10158419,"byte_end":10158420,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1364},"to":{"krate":0,"index":2074}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10160447,"byte_end":10160456,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2082}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_read_ext.rs","byte_start":10197852,"byte_end":10197853,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1411},"to":{"krate":0,"index":2082}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10198732,"byte_end":10198741,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1419}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_seek_ext.rs","byte_start":10199611,"byte_end":10199612,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1422},"to":{"krate":0,"index":1419}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10201669,"byte_end":10201679,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2134}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\async_write_ext.rs","byte_start":10234959,"byte_end":10234960,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1463},"to":{"krate":0,"index":2134}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10236376,"byte_end":10236385,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10238564,"byte_end":10238573,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10715},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10239549,"byte_end":10239558,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10715},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10240389,"byte_end":10240398,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10715},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_reader.rs","byte_start":10241114,"byte_end":10241123,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10715},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10242630,"byte_end":10242639,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244476,"byte_end":10244485,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10688},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10244627,"byte_end":10244636,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10688},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10245348,"byte_end":10245357,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10688},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10245887,"byte_end":10245896,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10688},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_stream.rs","byte_start":10246375,"byte_end":10246384,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10688},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10248338,"byte_end":10248347,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10250625,"byte_end":10250634,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10638},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10251524,"byte_end":10251533,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10638},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10252015,"byte_end":10252024,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10638},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\buf_writer.rs","byte_start":10252311,"byte_end":10252320,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10638},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10253489,"byte_end":10253494,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254634,"byte_end":10254639,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10589},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10254918,"byte_end":10254923,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10589},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\chain.rs","byte_start":10255746,"byte_end":10255751,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10589},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\copy.rs","byte_start":10258794,"byte_end":10258798,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10261908,"byte_end":10261913,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2200},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10262242,"byte_end":10262247,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2200},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\empty.rs","byte_start":10262480,"byte_end":10262485,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\flush.rs","byte_start":10263306,"byte_end":10263311,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10264491,"byte_end":10264496,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10265748,"byte_end":10265753,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\lines.rs","byte_start":10266500,"byte_end":10266505,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10550},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10269665,"byte_end":10269677,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2211},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10270226,"byte_end":10270238,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2211},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10270963,"byte_end":10270975,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10271135,"byte_end":10271139,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10271545,"byte_end":10271549,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2216},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\mem.rs","byte_start":10272375,"byte_end":10272379,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2216},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read.rs","byte_start":10274307,"byte_end":10274311,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_buf.rs","byte_start":10275372,"byte_end":10275379,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2233},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_exact.rs","byte_start":10276744,"byte_end":10276753,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2244},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_line.rs","byte_start":10285031,"byte_end":10285039,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_end.rs","byte_start":10290959,"byte_end":10290968,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2409},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_to_string.rs","byte_start":10293707,"byte_end":10293719,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\read_until.rs","byte_start":10296159,"byte_end":10296168,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\repeat.rs","byte_start":10298002,"byte_end":10298008,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2442},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\shutdown.rs","byte_start":10299130,"byte_end":10299138,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2446},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10300971,"byte_end":10300975,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2454},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\sink.rs","byte_start":10301485,"byte_end":10301489,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2454},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10302454,"byte_end":10302459,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303198,"byte_end":10303203,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\split.rs","byte_start":10303982,"byte_end":10303987,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9716},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10317526,"byte_end":10317538,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10318043,"byte_end":10318055,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9669},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\stream_reader.rs","byte_start":10319594,"byte_end":10319606,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9669},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\reader_stream.rs","byte_start":10323135,"byte_end":10323147,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9627},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10305155,"byte_end":10305159,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10306787,"byte_end":10306791,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9587},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\take.rs","byte_start":10307448,"byte_end":10307452,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9587},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write.rs","byte_start":10309009,"byte_end":10309014,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2516},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_all.rs","byte_start":10309807,"byte_end":10309815,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\io\\util\\write_buf.rs","byte_start":10311323,"byte_end":10311331,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":373},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":1,"index":7228},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":7228},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":7231},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":7231},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":79320,"byte_end":79326,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":79370,"byte_end":79376,"line_start":221,"line_end":221,"column_start":40,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":80742,"byte_end":80752,"line_start":272,"line_end":272,"column_start":25,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2733},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\addr.rs","byte_start":81400,"byte_end":81409,"line_start":290,"line_end":290,"column_start":27,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2742},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10327831,"byte_end":10327842,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338537,"byte_end":10338548,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3018},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10338863,"byte_end":10338874,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":139}},"from":{"krate":16,"index":966},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10339314,"byte_end":10339325,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\listener.rs","byte_start":10339651,"byte_end":10339662,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3018},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10340721,"byte_end":10340729,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\incoming.rs","byte_start":10341367,"byte_end":10341375,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3020},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10343538,"byte_end":10343546,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10346001,"byte_end":10346009,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3026},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10346329,"byte_end":10346338,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3033},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10347151,"byte_end":10347159,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3026},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split.rs","byte_start":10347253,"byte_end":10347262,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3033},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350350,"byte_end":10350362,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3049},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350565,"byte_end":10350577,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3049},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10350587,"byte_end":10350600,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353434,"byte_end":10353447,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3040},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10353752,"byte_end":10353766,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354449,"byte_end":10354463,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3044},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10354623,"byte_end":10354637,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3044},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10355576,"byte_end":10355589,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\split_owned.rs","byte_start":10355685,"byte_end":10355699,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3044},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10357834,"byte_end":10357843,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10382900,"byte_end":10382909,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":159}},"from":{"krate":16,"index":910},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10383345,"byte_end":10383354,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10383707,"byte_end":10383716,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3055},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10384030,"byte_end":10384039,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3055},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\tcp\\stream.rs","byte_start":10384783,"byte_end":10384792,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10386021,"byte_end":10386030,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10400691,"byte_end":10400700,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":16,"index":1006},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10401136,"byte_end":10401145,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3182},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\socket.rs","byte_start":10401465,"byte_end":10401474,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3182},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10403788,"byte_end":10403800,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3194},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404003,"byte_end":10404015,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3194},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10404542,"byte_end":10404550,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10406182,"byte_end":10406190,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407510,"byte_end":10407518,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\net\\udp\\split.rs","byte_start":10407609,"byte_end":10407617,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3189},"to":{"krate":2,"index":1980}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10407830,"byte_end":10407836,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3213},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10408793,"byte_end":10408799,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3213},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\either.rs","byte_start":10409013,"byte_end":10409019,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3213},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3240},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3240},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3244},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3296},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":211}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":212}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10411145,"byte_end":10411159,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10414698,"byte_end":10414703,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10415390,"byte_end":10415404,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3341},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416291,"byte_end":10416305,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3341},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416471,"byte_end":10416478,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10416936,"byte_end":10416943,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3847},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10417111,"byte_end":10417114,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":220}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\basic_scheduler.rs","byte_start":10418212,"byte_end":10418218,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3350},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10425901,"byte_end":10425907,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10425932,"byte_end":10425938,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10426297,"byte_end":10426301,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10427079,"byte_end":10427083,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\core.rs","byte_start":10432834,"byte_end":10432840,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10433465,"byte_end":10433474,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436553,"byte_end":10436562,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3859},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10436805,"byte_end":10436814,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3859},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10437091,"byte_end":10437100,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3859},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\error.rs","byte_start":10437134,"byte_end":10437139,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":231}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10437817,"byte_end":10437824,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10438301,"byte_end":10438308,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\harness.rs","byte_start":10440479,"byte_end":10440484,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452788,"byte_end":10452798,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452835,"byte_end":10452845,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10452861,"byte_end":10452871,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10453047,"byte_end":10453057,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10453084,"byte_end":10453094,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10454320,"byte_end":10454330,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\join.rs","byte_start":10454596,"byte_end":10454606,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3861},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10455853,"byte_end":10455860,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10457391,"byte_end":10457398,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\raw.rs","byte_start":10457488,"byte_end":10457495,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10460177,"byte_end":10460182,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10469038,"byte_end":10469046,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10470923,"byte_end":10470928,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\state.rs","byte_start":10471087,"byte_end":10471095,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3865},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\waker.rs","byte_start":10472913,"byte_end":10472921,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3759},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10474669,"byte_end":10474682,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10475840,"byte_end":10475844,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\stack.rs","byte_start":10476244,"byte_end":10476248,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419231,"byte_end":10419235,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419266,"byte_end":10419270,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419407,"byte_end":10419415,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3801},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419456,"byte_end":10419464,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3801},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419589,"byte_end":10419593,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10419596,"byte_end":10419601,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421388,"byte_end":10421392,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421689,"byte_end":10421697,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10421948,"byte_end":10421952,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422145,"byte_end":10422153,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422284,"byte_end":10422288,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422457,"byte_end":10422465,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422751,"byte_end":10422755,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10422995,"byte_end":10422999,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3793},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10423151,"byte_end":10423159,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3801},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\task\\mod.rs","byte_start":10423375,"byte_end":10423379,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3793},"to":{"krate":0,"index":788}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10478656,"byte_end":10478668,"line_start":89,"line_end":89,"column_start":6,"column_end":18},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480554,"byte_end":10480566,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480652,"byte_end":10480664,"line_start":152,"line_end":152,"column_start":21,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10480825,"byte_end":10480832,"line_start":160,"line_end":160,"column_start":6,"column_end":13},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10483275,"byte_end":10483280,"line_start":238,"line_end":238,"column_start":6,"column_end":11},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\pool.rs","byte_start":10486029,"byte_end":10486036,"line_start":325,"line_end":325,"column_start":21,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4028},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\schedule.rs","byte_start":10486539,"byte_end":10486551,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3993},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\shutdown.rs","byte_start":10487424,"byte_end":10487432,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489180,"byte_end":10489192,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489418,"byte_end":10489430,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\blocking\\task.rs","byte_start":10489460,"byte_end":10489472,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4013},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":141852,"byte_end":141859,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":146358,"byte_end":146363,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":149349,"byte_end":149354,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":160647,"byte_end":160653,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10491443,"byte_end":10491449,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10491918,"byte_end":10491924,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4153},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10492240,"byte_end":10492246,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4153},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10492965,"byte_end":10492973,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4155},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\park.rs","byte_start":10493042,"byte_end":10493047,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4197},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500270,"byte_end":10500275,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500306,"byte_end":10500311,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500342,"byte_end":10500348,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4248},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10500379,"byte_end":10500385,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4248},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10501244,"byte_end":10501249,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10507783,"byte_end":10507788,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10512956,"byte_end":10512961,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4244},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513057,"byte_end":10513062,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513221,"byte_end":10513226,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10513414,"byte_end":10513420,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\queue.rs","byte_start":10516925,"byte_end":10516931,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4248},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521157,"byte_end":10521167,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521204,"byte_end":10521214,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10521230,"byte_end":10521240,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10522027,"byte_end":10522037,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4328},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10522843,"byte_end":10522847,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10526720,"byte_end":10526725,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10528203,"byte_end":10528208,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\idle.rs","byte_start":10528381,"byte_end":10528386,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10534150,"byte_end":10534155,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10537785,"byte_end":10537791,"line_start":278,"line_end":278,"column_start":6,"column_end":12},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10538566,"byte_end":10538573,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10542839,"byte_end":10542843,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10547655,"byte_end":10547661,"line_start":598,"line_end":598,"column_start":6,"column_end":12},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10548101,"byte_end":10548104,"line_start":614,"line_end":614,"column_start":25,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":5,"index":4499},"to":{"krate":0,"index":3811}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\worker.rs","byte_start":10550675,"byte_end":10550681,"line_start":692,"line_end":692,"column_start":6,"column_end":12},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10518983,"byte_end":10518993,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520148,"byte_end":10520158,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4503},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520297,"byte_end":10520307,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4503},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520410,"byte_end":10520417,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\thread_pool\\mod.rs","byte_start":10520838,"byte_end":10520845,"line_start":117,"line_end":117,"column_start":21,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":173705,"byte_end":173711,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4594},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580264,"byte_end":10580273,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580419,"byte_end":10580428,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5195},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\all.rs","byte_start":10580467,"byte_end":10580476,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5195},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581427,"byte_end":10581436,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581582,"byte_end":10581591,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5206},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\any.rs","byte_start":10581630,"byte_end":10581639,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5206},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":10582562,"byte_end":10582567,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\chain.rs","byte_start":10582747,"byte_end":10582752,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8739},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584297,"byte_end":10584311,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4756},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584330,"byte_end":10584337,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10584621,"byte_end":10584628,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8701},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10585604,"byte_end":10585610,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":355}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10585665,"byte_end":10585671,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":356}},"from":{"krate":5,"index":5687},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586060,"byte_end":10586063,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":357}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586109,"byte_end":10586112,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":358}},"from":{"krate":5,"index":4841},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586495,"byte_end":10586498,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":359}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10586546,"byte_end":10586549,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":360}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10587064,"byte_end":10587070,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":361}},"from":{"krate":2,"index":34532},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10587159,"byte_end":10587165,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":362}},"from":{"krate":2,"index":34532},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588243,"byte_end":10588248,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":14,"index":341},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588296,"byte_end":10588301,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":14,"index":341},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588701,"byte_end":10588709,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":365}},"from":{"krate":14,"index":535},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\collect.rs","byte_start":10588757,"byte_end":10588765,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":366}},"from":{"krate":14,"index":535},"to":{"krate":0,"index":4756}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590036,"byte_end":10590041,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5217},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590072,"byte_end":10590077,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5217},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590108,"byte_end":10590113,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5217},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\empty.rs","byte_start":10590656,"byte_end":10590661,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5217},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591275,"byte_end":10591281,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8645},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591499,"byte_end":10591505,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter.rs","byte_start":10591624,"byte_end":10591630,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":8645},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10592716,"byte_end":10592725,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":8600},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10592946,"byte_end":10592955,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":8600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\filter_map.rs","byte_start":10593077,"byte_end":10593086,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8600},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":10594158,"byte_end":10594168,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":8551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fold.rs","byte_start":10594364,"byte_end":10594374,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8551},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":10595273,"byte_end":10595277,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":8511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\fuse.rs","byte_start":10595437,"byte_end":10595441,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":8511},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10596384,"byte_end":10596388,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5224},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\iter.rs","byte_start":10597050,"byte_end":10597054,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5224},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10597800,"byte_end":10597803,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":8457},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10597992,"byte_end":10597995,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":8457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\map.rs","byte_start":10598116,"byte_end":10598119,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":8457},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":10598964,"byte_end":10598969,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\merge.rs","byte_start":10599223,"byte_end":10599228,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":8408},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600740,"byte_end":10600744,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600778,"byte_end":10600782,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\next.rs","byte_start":10600923,"byte_end":10600927,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5230},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10601423,"byte_end":10601427,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5238},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\once.rs","byte_start":10602054,"byte_end":10602058,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5238},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602605,"byte_end":10602612,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5244},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602643,"byte_end":10602650,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5244},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10602681,"byte_end":10602688,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5244},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\pending.rs","byte_start":10603381,"byte_end":10603388,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5244},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10609053,"byte_end":10609062,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10616063,"byte_end":10616072,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\stream_map.rs","byte_start":10617611,"byte_end":10617620,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5251},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10618836,"byte_end":10618840,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":8371},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10619050,"byte_end":10619054,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":8371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip.rs","byte_start":10619187,"byte_end":10619191,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":8371},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620417,"byte_end":10620426,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":8326},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620647,"byte_end":10620656,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":8326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\skip_while.rs","byte_start":10620841,"byte_end":10620850,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":8326},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622199,"byte_end":10622206,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5263},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622240,"byte_end":10622247,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\try_next.rs","byte_start":10622454,"byte_end":10622461,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5263},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623071,"byte_end":10623075,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623285,"byte_end":10623289,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take.rs","byte_start":10623422,"byte_end":10623426,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":8289},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10624945,"byte_end":10624954,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":8240},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10625214,"byte_end":10625223,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\take_while.rs","byte_start":10625416,"byte_end":10625425,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8240},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":10657127,"byte_end":10657134,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\timeout.rs","byte_start":10657489,"byte_end":10657496,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8201},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10555506,"byte_end":10555512,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":5158}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\stream\\mod.rs","byte_start":10579494,"byte_end":10579496,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5193},"to":{"krate":0,"index":5158}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10675972,"byte_end":10675979,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\barrier.rs","byte_start":10679259,"byte_end":10679276,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10689843,"byte_end":10689849,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5372},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10689976,"byte_end":10689982,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5372},"to":{"krate":2,"index":1983}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690143,"byte_end":10690147,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10690217,"byte_end":10690221,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10692995,"byte_end":10693001,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693038,"byte_end":10693044,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693082,"byte_end":10693090,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5335},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693127,"byte_end":10693135,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5335},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10693151,"byte_end":10693157,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10698793,"byte_end":10698797,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699189,"byte_end":10699195,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699375,"byte_end":10699381,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10699535,"byte_end":10699543,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10704408,"byte_end":10704416,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10707234,"byte_end":10707239,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5428},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10710591,"byte_end":10710599,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5335},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10711049,"byte_end":10711057,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5335},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10712241,"byte_end":10712245,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10713087,"byte_end":10713091,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10713821,"byte_end":10713829,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10715141,"byte_end":10715145,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5366},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10715869,"byte_end":10715873,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10716671,"byte_end":10716677,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":788}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717092,"byte_end":10717098,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5332},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717242,"byte_end":10717250,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5335},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717385,"byte_end":10717394,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717567,"byte_end":10717576,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5362},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10717867,"byte_end":10717876,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6711},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718149,"byte_end":10718158,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6711},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718185,"byte_end":10718197,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6723},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\broadcast.rs","byte_start":10718539,"byte_end":10718551,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6723},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10724860,"byte_end":10724865,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10734847,"byte_end":10734853,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\block.rs","byte_start":10735335,"byte_end":10735341,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5529},"to":{"krate":2,"index":2352}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10735979,"byte_end":10735985,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5583},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736117,"byte_end":10736123,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5583},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10736530,"byte_end":10736538,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5592},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10738310,"byte_end":10738318,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740746,"byte_end":10740754,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5592},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10740814,"byte_end":10740822,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5592},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\bounded.rs","byte_start":10741010,"byte_end":10741016,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10752406,"byte_end":10752408,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5657},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10752809,"byte_end":10752811,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10753118,"byte_end":10753127,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6768},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10753389,"byte_end":10753401,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6775},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10755186,"byte_end":10755190,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10755823,"byte_end":10755831,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5702},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756097,"byte_end":10756101,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756150,"byte_end":10756154,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10756633,"byte_end":10756635,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757334,"byte_end":10757336,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757484,"byte_end":10757486,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10757664,"byte_end":10757666,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5657},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10758066,"byte_end":10758068,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5657},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10758595,"byte_end":10758597,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10761717,"byte_end":10761719,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10762155,"byte_end":10762159,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10762623,"byte_end":10762627,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10763176,"byte_end":10763188,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6755},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\chan.rs","byte_start":10764848,"byte_end":10764859,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":5680}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10767603,"byte_end":10767605,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10773309,"byte_end":10773311,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5815},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10773588,"byte_end":10773590,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\list.rs","byte_start":10776989,"byte_end":10776991,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5819},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777665,"byte_end":10777680,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5855},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10777821,"byte_end":10777836,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5855},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10778294,"byte_end":10778311,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5864},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10779289,"byte_end":10779306,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781778,"byte_end":10781795,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5864},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\unbounded.rs","byte_start":10781961,"byte_end":10781976,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783086,"byte_end":10783095,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6768},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783255,"byte_end":10783264,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6768},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783750,"byte_end":10783762,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6775},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10783795,"byte_end":10783807,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6775},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784147,"byte_end":10784159,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6775},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784388,"byte_end":10784397,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10784527,"byte_end":10784536,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6786},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785022,"byte_end":10785034,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6791},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785340,"byte_end":10785352,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6791},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785509,"byte_end":10785520,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785619,"byte_end":10785630,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6801},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10785760,"byte_end":10785771,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6801},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786275,"byte_end":10786291,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6811},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mpsc\\error.rs","byte_start":10786328,"byte_end":10786344,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6811},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792643,"byte_end":10792648,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792702,"byte_end":10792707,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792761,"byte_end":10792771,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10792836,"byte_end":10792851,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793138,"byte_end":10793150,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6822},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10793287,"byte_end":10793299,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6822},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10794107,"byte_end":10794112,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":5933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798685,"byte_end":10798690,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798774,"byte_end":10798779,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10798903,"byte_end":10798908,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799303,"byte_end":10799313,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799414,"byte_end":10799424,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799571,"byte_end":10799581,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799738,"byte_end":10799748,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10799914,"byte_end":10799924,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":5937},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800102,"byte_end":10800117,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800214,"byte_end":10800229,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800372,"byte_end":10800387,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800540,"byte_end":10800555,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\mutex.rs","byte_start":10800717,"byte_end":10800732,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5941},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10804696,"byte_end":10804704,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10804737,"byte_end":10804745,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10805008,"byte_end":10805014,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10809022,"byte_end":10809028,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6827},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10810766,"byte_end":10810774,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10811284,"byte_end":10811292,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10816122,"byte_end":10816130,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\notify.rs","byte_start":10819088,"byte_end":10819094,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6832},"to":{"krate":0,"index":788}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10820970,"byte_end":10820979,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6868},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821141,"byte_end":10821150,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6868},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821219,"byte_end":10821231,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6880},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10821530,"byte_end":10821542,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6880},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10823353,"byte_end":10823359,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829660,"byte_end":10829666,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6856},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10829805,"byte_end":10829813,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834204,"byte_end":10834212,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834359,"byte_end":10834367,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10834830,"byte_end":10834835,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839207,"byte_end":10839212,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839249,"byte_end":10839254,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839279,"byte_end":10839284,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10839653,"byte_end":10839658,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10840053,"byte_end":10840058,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\oneshot.rs","byte_start":10841771,"byte_end":10841776,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6893},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10845254,"byte_end":10845263,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10855184,"byte_end":10855193,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6208},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10855394,"byte_end":10855400,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10856266,"byte_end":10856273,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6214},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10856951,"byte_end":10856958,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10857757,"byte_end":10857764,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6214},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859406,"byte_end":10859413,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6214},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859460,"byte_end":10859472,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859565,"byte_end":10859577,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6906},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859721,"byte_end":10859733,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6906},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10859780,"byte_end":10859795,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860417,"byte_end":10860432,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6899},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860718,"byte_end":10860733,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6899},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\batch_semaphore.rs","byte_start":10860826,"byte_end":10860832,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6220},"to":{"krate":0,"index":788}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10866101,"byte_end":10866110,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882304,"byte_end":10882313,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882392,"byte_end":10882401,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882779,"byte_end":10882788,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882813,"byte_end":10882822,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6302},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10882860,"byte_end":10882866,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889272,"byte_end":10889278,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6911},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889351,"byte_end":10889357,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6911},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889779,"byte_end":10889791,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10889971,"byte_end":10889983,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890127,"byte_end":10890139,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6916},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890186,"byte_end":10890201,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10890731,"byte_end":10890746,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6921},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10891032,"byte_end":10891047,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6921},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10891085,"byte_end":10891091,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10896578,"byte_end":10896586,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10900249,"byte_end":10900257,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore_ll.rs","byte_start":10900610,"byte_end":10900621,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10903350,"byte_end":10903359,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905454,"byte_end":10905469,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905714,"byte_end":10905734,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10905988,"byte_end":10906003,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\semaphore.rs","byte_start":10906111,"byte_end":10906131,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6971},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10909485,"byte_end":10909500,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10912918,"byte_end":10912933,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913113,"byte_end":10913128,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913304,"byte_end":10913319,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10913783,"byte_end":10913799,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917393,"byte_end":10917409,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917589,"byte_end":10917605,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10917781,"byte_end":10917797,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10918873,"byte_end":10918879,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10918933,"byte_end":10918939,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919173,"byte_end":10919188,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919246,"byte_end":10919261,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919326,"byte_end":10919342,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919655,"byte_end":10919671,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10919729,"byte_end":10919735,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10922923,"byte_end":10922938,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6452},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923069,"byte_end":10923085,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923219,"byte_end":10923235,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923349,"byte_end":10923355,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\rwlock.rs","byte_start":10923447,"byte_end":10923453,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10929728,"byte_end":10929739,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935666,"byte_end":10935677,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6563},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935763,"byte_end":10935774,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":6563},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935907,"byte_end":10935918,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":6563},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10935943,"byte_end":10935954,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":6563},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\task\\atomic_waker.rs","byte_start":10936050,"byte_end":10936055,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":610}},"from":{"krate":2,"index":9554},"to":{"krate":0,"index":6586}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939596,"byte_end":10939605,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10939785,"byte_end":10939794,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7009},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10941953,"byte_end":10941961,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":6988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10943233,"byte_end":10943241,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":6988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944607,"byte_end":10944615,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":6988},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10944874,"byte_end":10944882,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":6988},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945185,"byte_end":10945193,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":6988},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10945307,"byte_end":10945313,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":6995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10946848,"byte_end":10946854,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":6995},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947093,"byte_end":10947096,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7001},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947237,"byte_end":10947243,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7015},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947345,"byte_end":10947352,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947575,"byte_end":10947582,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":1790}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947699,"byte_end":10947706,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":1795}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947736,"byte_end":10947743,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":7026}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\sync\\watch.rs","byte_start":10947890,"byte_end":10947897,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\task\\yield_now.rs","byte_start":10966716,"byte_end":10966724,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7068},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\clock.rs","byte_start":10971702,"byte_end":10971707,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":10982305,"byte_end":10982315,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000309,"byte_end":11000319,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7566},"to":{"krate":2,"index":2112}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000347,"byte_end":11000357,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7566},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000494,"byte_end":11000504,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7566},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11000886,"byte_end":11000891,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7591},"to":{"krate":0,"index":7510}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003018,"byte_end":11003023,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7591},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003153,"byte_end":11003156,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay_queue.rs","byte_start":11003243,"byte_end":11003250,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11005788,"byte_end":11005793,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\delay.rs","byte_start":11006771,"byte_end":11006776,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7608},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11020446,"byte_end":11020457,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11022435,"byte_end":11022453,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7616},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\atomic_stack.rs","byte_start":11023049,"byte_end":11023067,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7616},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11027305,"byte_end":11027310,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11033978,"byte_end":11033983,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11034191,"byte_end":11034196,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\entry.rs","byte_start":11034221,"byte_end":11034226,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7620},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":11034603,"byte_end":11034609,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\handle.rs","byte_start":11035272,"byte_end":11035278,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7645},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":11035723,"byte_end":11035735,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\registration.rs","byte_start":11036645,"byte_end":11036657,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7649},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":11036941,"byte_end":11036946,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7653},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\stack.rs","byte_start":11037037,"byte_end":11037042,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7653},"to":{"krate":0,"index":7510}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11011741,"byte_end":11011747,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11015444,"byte_end":11015450,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7657},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11018023,"byte_end":11018029,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7657},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11018145,"byte_end":11018150,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\driver\\mod.rs","byte_start":11019767,"byte_end":11019772,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7320},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11041364,"byte_end":11041369,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042736,"byte_end":11042741,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7667},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\error.rs","byte_start":11042768,"byte_end":11042773,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7667},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11043545,"byte_end":11043552,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047326,"byte_end":11047333,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047462,"byte_end":11047469,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":662}},"from":{"krate":1,"index":8112},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047584,"byte_end":11047591,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":2136}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047756,"byte_end":11047763,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":2167}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11047868,"byte_end":11047875,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048016,"byte_end":11048023,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048184,"byte_end":11048191,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\instant.rs","byte_start":11048298,"byte_end":11048305,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7687},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11052187,"byte_end":11052195,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\interval.rs","byte_start":11053490,"byte_end":11053498,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7710},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056830,"byte_end":11056837,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11056966,"byte_end":11056973,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11057511,"byte_end":11057518,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8161},"to":{"krate":2,"index":9369}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058096,"byte_end":11058103,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7715},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058247,"byte_end":11058254,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7715},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\timeout.rs","byte_start":11058291,"byte_end":11058296,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":676}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11076436,"byte_end":11076444,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\throttle.rs","byte_start":11077259,"byte_end":11077267,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8113},"to":{"krate":15,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":11068200,"byte_end":11068205,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\level.rs","byte_start":11072957,"byte_end":11072962,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7483},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\stack.rs","byte_start":11074078,"byte_end":11074085,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":7510}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":11060021,"byte_end":11060026,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":7757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\time\\wheel\\mod.rs","byte_start":11065734,"byte_end":11065738,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":7771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":11078100,"byte_end":11078104,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\bit.rs","byte_start":11079578,"byte_end":11079582,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":7965},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\addr.rs","byte_start":11086801,"byte_end":11086808,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\entry.rs","byte_start":11089443,"byte_end":11089450,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2059},"to":{"krate":0,"index":7820}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\generation.rs","byte_start":11089837,"byte_end":11089847,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11090986,"byte_end":11090991,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11091333,"byte_end":11091339,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11095291,"byte_end":11095296,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7843},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\page.rs","byte_start":11095602,"byte_end":11095608,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7845},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":11097751,"byte_end":11097756,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\shard.rs","byte_start":11099435,"byte_end":11099440,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":7889},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\slot.rs","byte_start":11099817,"byte_end":11099821,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":11100792,"byte_end":11100805,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\stack.rs","byte_start":11101633,"byte_end":11101646,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7933},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081180,"byte_end":11081184,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7948},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081221,"byte_end":11081225,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7948},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11081248,"byte_end":11081252,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":7948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\slab\\mod.rs","byte_start":11082767,"byte_end":11082771,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":7948},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186296,"byte_end":186306,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186706,"byte_end":186716,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":186938,"byte_end":186942,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8014},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":794},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199224,"byte_end":199228,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199231,"byte_end":199235,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102458,"byte_end":11102465,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8052},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102502,"byte_end":11102509,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8052},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102547,"byte_end":11102556,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8056},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11102742,"byte_end":11102749,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103383,"byte_end":11103392,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8056},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103524,"byte_end":11103533,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8056},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\try_lock.rs","byte_start":11103655,"byte_end":11103664,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8056},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8085},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8085},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.25\\src\\util\\intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8094},"to":{"krate":4294967295,"index":4294967295}}]}