{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=2252d6ec61d92979","-C","extra-filename=-2252d6ec61d92979","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","bytes=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbytes-0d9b9a37934dc76f.rmeta","--extern","futures_core=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfutures_core-c18b2759a74772ee.rmeta","--extern","futures_sink=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libfutures_sink-065a3389c7fb823e.rmeta","--extern","log=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblog-762306cfa0445324.rmeta","--extern","pin_project_lite=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libpin_project_lite-01e9dbd04cbe9344.rmeta","--extern","tokio=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio-7caba66929e5f739.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libtokio_util-2252d6ec61d92979.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[14592850188028345135,5086023511809303591]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","num":13,"id":{"name":"bytes","disambiguator":[9019378406746688441,8470750716336469938]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":14,"id":{"name":"tokio","disambiguator":[10766661440287024334,987395534943628092]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[11458692054556465735,9113638017520811829]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","num":16,"id":{"name":"futures_core","disambiguator":[13077712991614553716,2746775383264141978]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":17,"id":{"name":"mio","disambiguator":[14426611954319851920,8010177769537004241]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":18,"id":{"name":"net2","disambiguator":[4264490826184072537,4561712397809616144]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":19,"id":{"name":"winapi","disambiguator":[4006827767281335465,13430598760160072842]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":20,"id":{"name":"cfg_if","disambiguator":[9160317425730696183,18175083639061721631]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":21,"id":{"name":"iovec","disambiguator":[12152129518108939196,1813996528491099070]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":22,"id":{"name":"slab","disambiguator":[14467334786303022905,4170068910821487195]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":23,"id":{"name":"miow","disambiguator":[15377211746358681375,14881981367405233104]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":24,"id":{"name":"kernel32","disambiguator":[16820212478691107798,8111668972782052801]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":25,"id":{"name":"winapi","disambiguator":[753043324285959879,10675845759397145029]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":26,"id":{"name":"ws2_32","disambiguator":[775372795951657822,11907615947731107891]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","num":27,"id":{"name":"log","disambiguator":[11988239905312418642,14929643071484238321]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":28,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":29,"id":{"name":"fnv","disambiguator":[2489852198916710370,6210931132834131286]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[10066805158715599723,2422332116856004130]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":31,"id":{"name":"memchr","disambiguator":[16632542777199346109,14088241813478408171]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":32,"id":{"name":"num_cpus","disambiguator":[2891945326073920803,16438406934100408411]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":33,"id":{"name":"futures_sink","disambiguator":[8471841468798012181,8450363099045499337]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618182,"byte_end":8618192,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618231,"byte_end":8618238,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618277,"byte_end":8618284,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618322,"byte_end":8618328,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618330,"byte_end":8618341,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618389,"byte_end":8618399,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618448,"byte_end":8618459,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618521,"byte_end":8618541,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618543,"byte_end":8618568,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618617,"byte_end":8618627,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618629,"byte_end":8618644,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617734,"byte_end":8617781,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617782,"byte_end":8617785,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617786,"byte_end":8617854,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617855,"byte_end":8617930,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617931,"byte_end":8617979,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617980,"byte_end":8617983,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8617984,"byte_end":8618023,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618024,"byte_end":8618065,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618066,"byte_end":8618103,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618104,"byte_end":8618136,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619921,"byte_end":8619931,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618773,"byte_end":8618858,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618859,"byte_end":8618862,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618863,"byte_end":8618901,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618902,"byte_end":8618940,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618941,"byte_end":8618944,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618945,"byte_end":8618958,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618959,"byte_end":8618962,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8618963,"byte_end":8619044,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619045,"byte_end":8619048,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619049,"byte_end":8619088,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619089,"byte_end":8619122,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619123,"byte_end":8619152,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619153,"byte_end":8619156,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619157,"byte_end":8619164,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619165,"byte_end":8619183,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619184,"byte_end":8619214,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619215,"byte_end":8619239,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619240,"byte_end":8619247,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619248,"byte_end":8619277,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619278,"byte_end":8619330,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619331,"byte_end":8619334,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619335,"byte_end":8619353,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619354,"byte_end":8619371,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619372,"byte_end":8619452,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619453,"byte_end":8619487,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619488,"byte_end":8619541,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619542,"byte_end":8619553,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619554,"byte_end":8619561,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619562,"byte_end":8619567,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619568,"byte_end":8619606,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619607,"byte_end":8619660,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619661,"byte_end":8619719,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619720,"byte_end":8619799,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619800,"byte_end":8619812,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619813,"byte_end":8619820,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619821,"byte_end":8619828,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619829,"byte_end":8619832,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8620033,"byte_end":8620036,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619960,"byte_end":8620021,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621348,"byte_end":8621355,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8620751,"byte_end":8620786,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8620787,"byte_end":8620790,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8620791,"byte_end":8620860,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8620861,"byte_end":8620940,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8620941,"byte_end":8621013,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621014,"byte_end":8621038,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621039,"byte_end":8621042,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621043,"byte_end":8621111,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621112,"byte_end":8621189,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621190,"byte_end":8621251,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621252,"byte_end":8621255,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621256,"byte_end":8621292,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621293,"byte_end":8621337,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621403,"byte_end":8621407,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621362,"byte_end":8621393,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622173,"byte_end":8622178,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621414,"byte_end":8621466,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621471,"byte_end":8621474,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621479,"byte_end":8621548,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621553,"byte_end":8621623,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621628,"byte_end":8621674,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621679,"byte_end":8621682,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621687,"byte_end":8621763,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621768,"byte_end":8621843,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621848,"byte_end":8621923,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621928,"byte_end":8621968,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621973,"byte_end":8621976,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8621981,"byte_end":8622055,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622060,"byte_end":8622106,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622111,"byte_end":8622114,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622119,"byte_end":8622163,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625114,"byte_end":8625120,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622202,"byte_end":8622267,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622272,"byte_end":8622275,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622280,"byte_end":8622354,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622359,"byte_end":8622431,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622436,"byte_end":8622509,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622514,"byte_end":8622557,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622562,"byte_end":8622565,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622570,"byte_end":8622643,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622648,"byte_end":8622711,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622716,"byte_end":8622791,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622796,"byte_end":8622871,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622876,"byte_end":8622899,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622904,"byte_end":8622907,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622912,"byte_end":8622984,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8622989,"byte_end":8623063,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623068,"byte_end":8623138,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623143,"byte_end":8623146,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623151,"byte_end":8623219,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623224,"byte_end":8623295,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623300,"byte_end":8623380,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623385,"byte_end":8623397,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623402,"byte_end":8623405,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623410,"byte_end":8623480,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623485,"byte_end":8623560,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623565,"byte_end":8623602,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623607,"byte_end":8623610,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623615,"byte_end":8623651,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623656,"byte_end":8623700,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623705,"byte_end":8623708,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623713,"byte_end":8623736,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623741,"byte_end":8623744,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623749,"byte_end":8623823,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623828,"byte_end":8623902,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623907,"byte_end":8623960,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623965,"byte_end":8623968,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8623973,"byte_end":8624044,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624049,"byte_end":8624119,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624124,"byte_end":8624140,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624145,"byte_end":8624148,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624153,"byte_end":8624166,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624171,"byte_end":8624189,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624194,"byte_end":8624199,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624204,"byte_end":8624230,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624235,"byte_end":8624272,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624277,"byte_end":8624282,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624287,"byte_end":8624308,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624313,"byte_end":8624318,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624323,"byte_end":8624353,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624358,"byte_end":8624372,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624377,"byte_end":8624408,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624413,"byte_end":8624446,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624451,"byte_end":8624454,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624459,"byte_end":8624552,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624557,"byte_end":8624575,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624580,"byte_end":8624583,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624588,"byte_end":8624660,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624665,"byte_end":8624725,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624730,"byte_end":8624782,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624787,"byte_end":8624849,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624854,"byte_end":8624921,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624926,"byte_end":8624929,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624934,"byte_end":8624962,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624967,"byte_end":8624976,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624981,"byte_end":8624986,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8624991,"byte_end":8624998,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625003,"byte_end":8625006,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625011,"byte_end":8625080,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625085,"byte_end":8625106,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625979,"byte_end":8625989,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625201,"byte_end":8625273,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625278,"byte_end":8625327,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625332,"byte_end":8625335,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625340,"byte_end":8625408,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625413,"byte_end":8625480,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625485,"byte_end":8625553,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625558,"byte_end":8625606,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625611,"byte_end":8625614,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625619,"byte_end":8625687,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625692,"byte_end":8625767,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625772,"byte_end":8625847,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625852,"byte_end":8625924,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8625929,"byte_end":8625971,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627598,"byte_end":8627604,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626407,"byte_end":8626487,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626492,"byte_end":8626568,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626573,"byte_end":8626576,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626581,"byte_end":8626656,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626661,"byte_end":8626731,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626736,"byte_end":8626807,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626812,"byte_end":8626884,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626889,"byte_end":8626947,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626952,"byte_end":8626955,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8626960,"byte_end":8627029,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627034,"byte_end":8627109,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627114,"byte_end":8627190,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627195,"byte_end":8627217,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627222,"byte_end":8627225,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627230,"byte_end":8627303,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627308,"byte_end":8627381,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627386,"byte_end":8627462,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627467,"byte_end":8627470,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627475,"byte_end":8627512,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627517,"byte_end":8627549,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":8627554,"byte_end":8627590,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627938,"byte_end":8627945,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627783,"byte_end":8627855,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627856,"byte_end":8627876,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627877,"byte_end":8627880,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627881,"byte_end":8627927,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628210,"byte_end":8628215,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627958,"byte_end":8627990,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8627995,"byte_end":8627998,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628003,"byte_end":8628080,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628085,"byte_end":8628141,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628146,"byte_end":8628149,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628154,"byte_end":8628200,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628566,"byte_end":8628572,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628239,"byte_end":8628284,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628289,"byte_end":8628292,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628297,"byte_end":8628371,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628376,"byte_end":8628456,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628461,"byte_end":8628499,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628504,"byte_end":8628507,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":8628512,"byte_end":8628558,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8629721,"byte_end":8629727,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630163,"byte_end":8630165,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630176,"byte_end":8630181,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631971,"byte_end":8631974,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630629,"byte_end":8630709,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630714,"byte_end":8630795,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630800,"byte_end":8630803,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630808,"byte_end":8630883,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630888,"byte_end":8630958,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630963,"byte_end":8631032,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631037,"byte_end":8631109,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631114,"byte_end":8631172,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631177,"byte_end":8631180,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631185,"byte_end":8631256,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631261,"byte_end":8631338,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631343,"byte_end":8631419,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631424,"byte_end":8631446,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631451,"byte_end":8631454,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631459,"byte_end":8631532,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631537,"byte_end":8631610,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631615,"byte_end":8631691,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631696,"byte_end":8631699,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631704,"byte_end":8631741,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631746,"byte_end":8631778,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631783,"byte_end":8631820,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631825,"byte_end":8631863,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8631868,"byte_end":8631959,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633522,"byte_end":8633535,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632126,"byte_end":8632206,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632211,"byte_end":8632292,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632297,"byte_end":8632346,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632351,"byte_end":8632354,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632359,"byte_end":8632434,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632439,"byte_end":8632509,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632514,"byte_end":8632583,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632588,"byte_end":8632660,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632665,"byte_end":8632723,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632728,"byte_end":8632731,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632736,"byte_end":8632807,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632812,"byte_end":8632889,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632894,"byte_end":8632970,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8632975,"byte_end":8632997,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633002,"byte_end":8633005,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633010,"byte_end":8633083,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633088,"byte_end":8633161,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633166,"byte_end":8633242,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633247,"byte_end":8633250,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633255,"byte_end":8633292,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633297,"byte_end":8633329,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633334,"byte_end":8633371,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633376,"byte_end":8633414,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633419,"byte_end":8633510,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635404,"byte_end":8635414,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633826,"byte_end":8633906,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633911,"byte_end":8633992,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633997,"byte_end":8634000,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634005,"byte_end":8634080,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634085,"byte_end":8634155,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634160,"byte_end":8634231,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634236,"byte_end":8634308,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634313,"byte_end":8634371,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634376,"byte_end":8634379,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634384,"byte_end":8634455,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634460,"byte_end":8634537,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634542,"byte_end":8634618,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634623,"byte_end":8634645,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634650,"byte_end":8634653,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634658,"byte_end":8634737,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634742,"byte_end":8634819,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634824,"byte_end":8634827,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634832,"byte_end":8634905,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634910,"byte_end":8634983,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8634988,"byte_end":8635064,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635069,"byte_end":8635072,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635077,"byte_end":8635114,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635119,"byte_end":8635151,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635156,"byte_end":8635194,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635199,"byte_end":8635237,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635242,"byte_end":8635296,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635301,"byte_end":8635392,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636103,"byte_end":8636110,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635820,"byte_end":8635883,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635888,"byte_end":8635901,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635906,"byte_end":8635909,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635914,"byte_end":8635989,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8635994,"byte_end":8636064,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636069,"byte_end":8636091,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636471,"byte_end":8636478,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636180,"byte_end":8636251,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636256,"byte_end":8636269,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636274,"byte_end":8636277,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636282,"byte_end":8636357,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636362,"byte_end":8636432,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636437,"byte_end":8636459,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636811,"byte_end":8636816,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636560,"byte_end":8636618,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636623,"byte_end":8636636,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636641,"byte_end":8636644,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636649,"byte_end":8636723,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636728,"byte_end":8636799,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637148,"byte_end":8637157,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636889,"byte_end":8636955,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636960,"byte_end":8636973,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636978,"byte_end":8636981,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8636986,"byte_end":8637060,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637065,"byte_end":8637136,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637297,"byte_end":8637308,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637242,"byte_end":8637285,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637635,"byte_end":8637645,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637370,"byte_end":8637433,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637438,"byte_end":8637441,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637446,"byte_end":8637521,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637526,"byte_end":8637596,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637601,"byte_end":8637623,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638040,"byte_end":8638050,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637718,"byte_end":8637792,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637797,"byte_end":8637838,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637843,"byte_end":8637846,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637851,"byte_end":8637926,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8637931,"byte_end":8638001,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638006,"byte_end":8638028,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642412,"byte_end":8642423,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642137,"byte_end":8642208,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642209,"byte_end":8642281,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642282,"byte_end":8642342,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642343,"byte_end":8642346,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642347,"byte_end":8642383,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642509,"byte_end":8642511,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642436,"byte_end":8642500,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642543,"byte_end":8642548,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642521,"byte_end":8642534,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642613,"byte_end":8642621,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642558,"byte_end":8642604,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642708,"byte_end":8642717,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642638,"byte_end":8642699,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642950,"byte_end":8642953,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642898,"byte_end":8642938,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8643682,"byte_end":8643692,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644150,"byte_end":8644153,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644082,"byte_end":8644138,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644470,"byte_end":8644483,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644354,"byte_end":8644436,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644441,"byte_end":8644458,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645126,"byte_end":8645133,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644839,"byte_end":8644902,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644907,"byte_end":8644924,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644929,"byte_end":8644932,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644937,"byte_end":8645012,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645017,"byte_end":8645087,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645092,"byte_end":8645114,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645484,"byte_end":8645491,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645189,"byte_end":8645260,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645265,"byte_end":8645282,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645287,"byte_end":8645290,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645295,"byte_end":8645370,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645375,"byte_end":8645445,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645450,"byte_end":8645472,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645828,"byte_end":8645838,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645559,"byte_end":8645626,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645631,"byte_end":8645634,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645639,"byte_end":8645714,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645719,"byte_end":8645789,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645794,"byte_end":8645816,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645953,"byte_end":8645960,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8645891,"byte_end":8645941,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646089,"byte_end":8646100,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646019,"byte_end":8646077,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646226,"byte_end":8646237,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646171,"byte_end":8646214,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652153,"byte_end":8652164,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652588,"byte_end":8652591,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652519,"byte_end":8652576,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653116,"byte_end":8653123,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652828,"byte_end":8652891,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652896,"byte_end":8652914,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652919,"byte_end":8652922,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652927,"byte_end":8653002,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653007,"byte_end":8653077,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653082,"byte_end":8653104,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653475,"byte_end":8653482,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653179,"byte_end":8653250,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653255,"byte_end":8653273,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653278,"byte_end":8653281,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653286,"byte_end":8653361,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653366,"byte_end":8653436,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653441,"byte_end":8653463,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653820,"byte_end":8653830,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653550,"byte_end":8653618,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653623,"byte_end":8653626,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653631,"byte_end":8653706,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653711,"byte_end":8653781,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653786,"byte_end":8653808,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653945,"byte_end":8653952,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8653883,"byte_end":8653933,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654081,"byte_end":8654092,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654011,"byte_end":8654069,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":498},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":505},{"krate":0,"index":370},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":521},{"krate":0,"index":372},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660427,"byte_end":8660479,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660480,"byte_end":8660483,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660484,"byte_end":8660554,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660555,"byte_end":8660613,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660614,"byte_end":8660686,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660687,"byte_end":8660757,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660758,"byte_end":8660825,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660826,"byte_end":8660829,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660830,"byte_end":8660851,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660852,"byte_end":8660855,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660856,"byte_end":8660931,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8660932,"byte_end":8661003,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661004,"byte_end":8661075,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661076,"byte_end":8661146,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661147,"byte_end":8661187,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661188,"byte_end":8661191,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661192,"byte_end":8661199,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661200,"byte_end":8661243,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661244,"byte_end":8661302,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661303,"byte_end":8661306,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661307,"byte_end":8661362,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661363,"byte_end":8661405,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661406,"byte_end":8661411,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661412,"byte_end":8661464,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661465,"byte_end":8661470,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661471,"byte_end":8661493,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661494,"byte_end":8661501,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661502,"byte_end":8661505,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661506,"byte_end":8661578,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661579,"byte_end":8661650,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661651,"byte_end":8661670,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661671,"byte_end":8661674,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661675,"byte_end":8661686,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661687,"byte_end":8661736,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661737,"byte_end":8661786,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661787,"byte_end":8661836,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661837,"byte_end":8661844,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661845,"byte_end":8661848,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661849,"byte_end":8661887,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661888,"byte_end":8661891,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661892,"byte_end":8661899,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661900,"byte_end":8661926,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661927,"byte_end":8661985,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661986,"byte_end":8661989,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8661990,"byte_end":8662015,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662016,"byte_end":8662037,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662038,"byte_end":8662041,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662042,"byte_end":8662118,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662119,"byte_end":8662128,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662129,"byte_end":8662171,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662172,"byte_end":8662177,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662178,"byte_end":8662251,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662252,"byte_end":8662299,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662300,"byte_end":8662303,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662304,"byte_end":8662341,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662342,"byte_end":8662356,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662357,"byte_end":8662362,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662363,"byte_end":8662370,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662371,"byte_end":8662374,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662375,"byte_end":8662417,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662418,"byte_end":8662421,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662422,"byte_end":8662433,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662434,"byte_end":8662473,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662474,"byte_end":8662513,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662514,"byte_end":8662553,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662554,"byte_end":8662561,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662562,"byte_end":8662565,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662566,"byte_end":8662580,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662581,"byte_end":8662584,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662585,"byte_end":8662660,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662661,"byte_end":8662734,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662735,"byte_end":8662801,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662802,"byte_end":8662871,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662872,"byte_end":8662937,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662938,"byte_end":8662941,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662942,"byte_end":8662958,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662959,"byte_end":8662962,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8662963,"byte_end":8663039,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663040,"byte_end":8663081,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663082,"byte_end":8663085,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663086,"byte_end":8663093,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663094,"byte_end":8663125,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663126,"byte_end":8663176,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663177,"byte_end":8663218,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663219,"byte_end":8663254,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663255,"byte_end":8663303,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663304,"byte_end":8663335,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663336,"byte_end":8663384,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663385,"byte_end":8663434,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663435,"byte_end":8663457,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663458,"byte_end":8663465,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663466,"byte_end":8663488,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663489,"byte_end":8663496,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663497,"byte_end":8663500,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663501,"byte_end":8663549,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663550,"byte_end":8663553,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663554,"byte_end":8663565,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663566,"byte_end":8663618,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663619,"byte_end":8663684,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663685,"byte_end":8663750,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663751,"byte_end":8663816,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663817,"byte_end":8663824,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663825,"byte_end":8663828,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663829,"byte_end":8663905,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663906,"byte_end":8663980,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8663981,"byte_end":8664053,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664054,"byte_end":8664130,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664131,"byte_end":8664173,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664174,"byte_end":8664177,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664178,"byte_end":8664194,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664195,"byte_end":8664198,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664199,"byte_end":8664274,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664275,"byte_end":8664316,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664317,"byte_end":8664320,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664321,"byte_end":8664328,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664329,"byte_end":8664360,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664361,"byte_end":8664411,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664412,"byte_end":8664453,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664454,"byte_end":8664489,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664490,"byte_end":8664538,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664539,"byte_end":8664570,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664571,"byte_end":8664619,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664620,"byte_end":8664679,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664680,"byte_end":8664702,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664703,"byte_end":8664710,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664711,"byte_end":8664733,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664734,"byte_end":8664741,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664742,"byte_end":8664745,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664746,"byte_end":8664794,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664795,"byte_end":8664798,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664799,"byte_end":8664810,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664811,"byte_end":8664860,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664861,"byte_end":8664915,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664916,"byte_end":8664970,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8664971,"byte_end":8665025,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665026,"byte_end":8665033,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665034,"byte_end":8665037,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665038,"byte_end":8665111,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665112,"byte_end":8665179,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665180,"byte_end":8665183,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665184,"byte_end":8665200,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665201,"byte_end":8665204,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665205,"byte_end":8665281,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665282,"byte_end":8665354,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665355,"byte_end":8665394,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665395,"byte_end":8665398,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665399,"byte_end":8665406,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665407,"byte_end":8665438,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665439,"byte_end":8665489,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665490,"byte_end":8665531,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665532,"byte_end":8665567,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665568,"byte_end":8665616,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665617,"byte_end":8665648,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665649,"byte_end":8665696,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665697,"byte_end":8665717,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665718,"byte_end":8665740,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665741,"byte_end":8665748,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665749,"byte_end":8665771,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665772,"byte_end":8665779,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665780,"byte_end":8665783,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665784,"byte_end":8665832,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665833,"byte_end":8665836,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665837,"byte_end":8665848,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665849,"byte_end":8665901,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665902,"byte_end":8665967,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8665968,"byte_end":8666033,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666034,"byte_end":8666099,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666100,"byte_end":8666107,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666108,"byte_end":8666111,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666112,"byte_end":8666184,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666185,"byte_end":8666260,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666261,"byte_end":8666333,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666334,"byte_end":8666410,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666411,"byte_end":8666484,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666485,"byte_end":8666488,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666489,"byte_end":8666505,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666506,"byte_end":8666509,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666510,"byte_end":8666584,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666585,"byte_end":8666652,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666653,"byte_end":8666656,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666657,"byte_end":8666664,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666665,"byte_end":8666696,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666697,"byte_end":8666747,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666748,"byte_end":8666789,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666790,"byte_end":8666825,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666826,"byte_end":8666874,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666875,"byte_end":8666906,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666907,"byte_end":8666955,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666956,"byte_end":8666976,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8666977,"byte_end":8666999,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667000,"byte_end":8667007,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667008,"byte_end":8667030,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667031,"byte_end":8667038,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667039,"byte_end":8667042,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667043,"byte_end":8667091,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667092,"byte_end":8667095,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667096,"byte_end":8667107,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667108,"byte_end":8667134,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667135,"byte_end":8667180,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667181,"byte_end":8667226,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667227,"byte_end":8667272,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667273,"byte_end":8667276,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667277,"byte_end":8667305,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667306,"byte_end":8667351,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667352,"byte_end":8667397,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667398,"byte_end":8667443,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667444,"byte_end":8667451,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667452,"byte_end":8667455,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667456,"byte_end":8667528,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667529,"byte_end":8667605,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667606,"byte_end":8667676,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667677,"byte_end":8667746,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667747,"byte_end":8667784,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667785,"byte_end":8667788,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667789,"byte_end":8667863,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667864,"byte_end":8667918,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667919,"byte_end":8667922,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667923,"byte_end":8667939,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667940,"byte_end":8667943,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8667944,"byte_end":8668017,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668018,"byte_end":8668094,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668095,"byte_end":8668169,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668170,"byte_end":8668183,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668184,"byte_end":8668187,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668188,"byte_end":8668195,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668196,"byte_end":8668227,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668228,"byte_end":8668278,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668279,"byte_end":8668320,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668321,"byte_end":8668356,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668357,"byte_end":8668406,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668407,"byte_end":8668438,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668439,"byte_end":8668487,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668488,"byte_end":8668532,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668533,"byte_end":8668555,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668556,"byte_end":8668563,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668564,"byte_end":8668586,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668587,"byte_end":8668594,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668595,"byte_end":8668598,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668599,"byte_end":8668647,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668648,"byte_end":8668651,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668652,"byte_end":8668663,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668664,"byte_end":8668690,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668691,"byte_end":8668741,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668742,"byte_end":8668792,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668793,"byte_end":8668843,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668844,"byte_end":8668847,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668848,"byte_end":8668868,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668869,"byte_end":8668899,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668900,"byte_end":8668930,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668931,"byte_end":8668961,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668962,"byte_end":8668969,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668970,"byte_end":8668973,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8668974,"byte_end":8669047,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669048,"byte_end":8669123,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669124,"byte_end":8669196,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669197,"byte_end":8669235,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669236,"byte_end":8669239,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669240,"byte_end":8669314,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669315,"byte_end":8669391,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669392,"byte_end":8669465,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669466,"byte_end":8669494,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669495,"byte_end":8669498,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669499,"byte_end":8669515,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669516,"byte_end":8669519,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669520,"byte_end":8669593,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669594,"byte_end":8669670,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669671,"byte_end":8669745,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669746,"byte_end":8669818,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669819,"byte_end":8669830,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669831,"byte_end":8669834,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669835,"byte_end":8669842,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669843,"byte_end":8669874,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669875,"byte_end":8669925,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669926,"byte_end":8669967,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8669968,"byte_end":8670003,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670004,"byte_end":8670053,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670054,"byte_end":8670085,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670086,"byte_end":8670151,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670152,"byte_end":8670172,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670173,"byte_end":8670195,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670196,"byte_end":8670203,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670204,"byte_end":8670211,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670212,"byte_end":8670215,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670216,"byte_end":8670264,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670265,"byte_end":8670268,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670269,"byte_end":8670280,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670281,"byte_end":8670307,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670308,"byte_end":8670358,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670359,"byte_end":8670409,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670410,"byte_end":8670460,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670461,"byte_end":8670464,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670465,"byte_end":8670485,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670486,"byte_end":8670516,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670517,"byte_end":8670547,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670548,"byte_end":8670578,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670579,"byte_end":8670586,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670587,"byte_end":8670590,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670591,"byte_end":8670664,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670665,"byte_end":8670739,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670740,"byte_end":8670814,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670815,"byte_end":8670888,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670889,"byte_end":8670965,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8670966,"byte_end":8670999,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671000,"byte_end":8671003,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671004,"byte_end":8671018,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671019,"byte_end":8671022,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671023,"byte_end":8671098,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671099,"byte_end":8671171,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671172,"byte_end":8671240,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671241,"byte_end":8671317,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671318,"byte_end":8671359,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671360,"byte_end":8671363,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671364,"byte_end":8671434,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671435,"byte_end":8671453,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671454,"byte_end":8671457,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671458,"byte_end":8671465,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671466,"byte_end":8671498,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671499,"byte_end":8671549,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671550,"byte_end":8671594,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671595,"byte_end":8671608,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671609,"byte_end":8671644,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671645,"byte_end":8671676,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671677,"byte_end":8671700,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671701,"byte_end":8671708,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671709,"byte_end":8671731,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671732,"byte_end":8671739,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671740,"byte_end":8671743,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671744,"byte_end":8671794,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671795,"byte_end":8671798,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671799,"byte_end":8671810,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671811,"byte_end":8671844,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671845,"byte_end":8671878,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671879,"byte_end":8671912,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671913,"byte_end":8671920,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671921,"byte_end":8671924,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8671925,"byte_end":8672005,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672006,"byte_end":8672048,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672049,"byte_end":8672093,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672094,"byte_end":8672139,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672140,"byte_end":8672187,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672188,"byte_end":8672226,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672227,"byte_end":8672297,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672859,"byte_end":8672866,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672541,"byte_end":8672596,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672597,"byte_end":8672600,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672601,"byte_end":8672676,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672677,"byte_end":8672757,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8672758,"byte_end":8672817,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673537,"byte_end":8673562,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673452,"byte_end":8673525,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673907,"byte_end":8673927,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673583,"byte_end":8673657,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673658,"byte_end":8673661,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673662,"byte_end":8673741,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673742,"byte_end":8673785,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673786,"byte_end":8673789,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673790,"byte_end":8673843,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673844,"byte_end":8673847,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8673848,"byte_end":8673878,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674271,"byte_end":8674274,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674180,"byte_end":8674259,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674501,"byte_end":8674508,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674398,"byte_end":8674473,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674478,"byte_end":8674489,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674730,"byte_end":8674746,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674558,"byte_end":8674599,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674604,"byte_end":8674607,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674612,"byte_end":8674685,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674690,"byte_end":8674718,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8675167,"byte_end":8675187,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674811,"byte_end":8674845,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674850,"byte_end":8674853,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674858,"byte_end":8674928,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674933,"byte_end":8675008,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8675013,"byte_end":8675085,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8675090,"byte_end":8675155,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680463,"byte_end":8680466,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8679921,"byte_end":8679996,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680001,"byte_end":8680012,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680017,"byte_end":8680020,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680025,"byte_end":8680039,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680044,"byte_end":8680047,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680052,"byte_end":8680059,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680064,"byte_end":8680095,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680100,"byte_end":8680148,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680153,"byte_end":8680156,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680161,"byte_end":8680202,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680207,"byte_end":8680242,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680247,"byte_end":8680278,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680283,"byte_end":8680314,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680319,"byte_end":8680348,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680353,"byte_end":8680373,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680378,"byte_end":8680400,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680405,"byte_end":8680412,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680417,"byte_end":8680439,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8680444,"byte_end":8680451,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681651,"byte_end":8681661,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681130,"byte_end":8681179,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681184,"byte_end":8681187,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681192,"byte_end":8681224,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681229,"byte_end":8681232,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681237,"byte_end":8681305,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681310,"byte_end":8681313,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681318,"byte_end":8681332,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681337,"byte_end":8681340,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681345,"byte_end":8681352,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681357,"byte_end":8681388,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681393,"byte_end":8681441,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681446,"byte_end":8681449,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681454,"byte_end":8681495,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681500,"byte_end":8681535,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681540,"byte_end":8681561,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681566,"byte_end":8681588,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681593,"byte_end":8681600,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681605,"byte_end":8681627,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681632,"byte_end":8681639,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682293,"byte_end":8682306,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681760,"byte_end":8681812,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681817,"byte_end":8681820,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681825,"byte_end":8681863,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681868,"byte_end":8681871,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681876,"byte_end":8681944,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681949,"byte_end":8681952,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681957,"byte_end":8681971,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681976,"byte_end":8681979,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681984,"byte_end":8681991,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8681996,"byte_end":8682027,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682032,"byte_end":8682080,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682085,"byte_end":8682088,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682093,"byte_end":8682134,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682139,"byte_end":8682174,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682179,"byte_end":8682203,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682208,"byte_end":8682230,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682235,"byte_end":8682242,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682247,"byte_end":8682269,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682274,"byte_end":8682281,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682939,"byte_end":8682952,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682406,"byte_end":8682458,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682463,"byte_end":8682466,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682471,"byte_end":8682509,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682514,"byte_end":8682517,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682522,"byte_end":8682590,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682595,"byte_end":8682598,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682603,"byte_end":8682617,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682622,"byte_end":8682625,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682630,"byte_end":8682637,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682642,"byte_end":8682673,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682678,"byte_end":8682726,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682731,"byte_end":8682734,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682739,"byte_end":8682780,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682785,"byte_end":8682820,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682825,"byte_end":8682849,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682854,"byte_end":8682876,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682881,"byte_end":8682888,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682893,"byte_end":8682915,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8682920,"byte_end":8682927,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684033,"byte_end":8684049,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683121,"byte_end":8683150,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683155,"byte_end":8683158,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683163,"byte_end":8683235,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683240,"byte_end":8683265,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683270,"byte_end":8683273,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683278,"byte_end":8683350,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683355,"byte_end":8683424,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683429,"byte_end":8683502,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683507,"byte_end":8683519,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683524,"byte_end":8683527,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683532,"byte_end":8683607,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683612,"byte_end":8683673,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683678,"byte_end":8683681,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683686,"byte_end":8683700,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683705,"byte_end":8683708,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683713,"byte_end":8683720,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683725,"byte_end":8683756,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683761,"byte_end":8683809,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683814,"byte_end":8683817,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683822,"byte_end":8683863,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683868,"byte_end":8683903,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683908,"byte_end":8683943,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683948,"byte_end":8683970,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683975,"byte_end":8683982,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8683987,"byte_end":8684009,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684014,"byte_end":8684021,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684710,"byte_end":8684729,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684146,"byte_end":8684209,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684214,"byte_end":8684217,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684222,"byte_end":8684273,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684278,"byte_end":8684281,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684286,"byte_end":8684354,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684359,"byte_end":8684362,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684367,"byte_end":8684381,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684386,"byte_end":8684389,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684394,"byte_end":8684401,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684406,"byte_end":8684437,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684442,"byte_end":8684490,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684495,"byte_end":8684498,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684503,"byte_end":8684544,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684549,"byte_end":8684584,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684589,"byte_end":8684620,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684625,"byte_end":8684647,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684652,"byte_end":8684659,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684664,"byte_end":8684686,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684691,"byte_end":8684698,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685388,"byte_end":8685407,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684898,"byte_end":8684964,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684969,"byte_end":8684972,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8684977,"byte_end":8685032,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685037,"byte_end":8685040,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685045,"byte_end":8685059,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685064,"byte_end":8685067,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685072,"byte_end":8685079,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685084,"byte_end":8685115,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685120,"byte_end":8685168,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685173,"byte_end":8685176,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685181,"byte_end":8685222,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685227,"byte_end":8685262,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685267,"byte_end":8685298,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685303,"byte_end":8685325,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685330,"byte_end":8685337,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685342,"byte_end":8685364,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685369,"byte_end":8685376,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685961,"byte_end":8685978,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685510,"byte_end":8685583,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685588,"byte_end":8685606,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685611,"byte_end":8685614,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685619,"byte_end":8685633,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685638,"byte_end":8685641,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685646,"byte_end":8685653,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685658,"byte_end":8685689,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685694,"byte_end":8685742,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685747,"byte_end":8685750,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685755,"byte_end":8685796,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685801,"byte_end":8685836,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685841,"byte_end":8685871,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685876,"byte_end":8685898,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685903,"byte_end":8685910,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685915,"byte_end":8685937,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8685942,"byte_end":8685949,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686628,"byte_end":8686636,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686079,"byte_end":8686142,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686147,"byte_end":8686150,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686155,"byte_end":8686216,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686221,"byte_end":8686224,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686229,"byte_end":8686283,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686288,"byte_end":8686291,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686296,"byte_end":8686310,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686315,"byte_end":8686318,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686323,"byte_end":8686330,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686335,"byte_end":8686366,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686371,"byte_end":8686419,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686424,"byte_end":8686427,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686432,"byte_end":8686473,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686478,"byte_end":8686513,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686518,"byte_end":8686538,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686543,"byte_end":8686565,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686570,"byte_end":8686577,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686582,"byte_end":8686604,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686609,"byte_end":8686616,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687156,"byte_end":8687165,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686734,"byte_end":8686797,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686802,"byte_end":8686805,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686810,"byte_end":8686824,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686829,"byte_end":8686832,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686837,"byte_end":8686844,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686849,"byte_end":8686897,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686902,"byte_end":8686923,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686928,"byte_end":8686963,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8686968,"byte_end":8686999,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687004,"byte_end":8687035,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687040,"byte_end":8687069,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687074,"byte_end":8687094,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687099,"byte_end":8687120,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687125,"byte_end":8687132,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687137,"byte_end":8687144,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687821,"byte_end":8687829,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687317,"byte_end":8687370,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687375,"byte_end":8687378,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687383,"byte_end":8687397,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687402,"byte_end":8687405,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687410,"byte_end":8687417,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687422,"byte_end":8687453,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687458,"byte_end":8687506,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687511,"byte_end":8687514,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687519,"byte_end":8687560,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687565,"byte_end":8687600,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687605,"byte_end":8687636,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687641,"byte_end":8687672,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687677,"byte_end":8687706,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687711,"byte_end":8687731,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687736,"byte_end":8687758,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687763,"byte_end":8687770,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687775,"byte_end":8687797,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687802,"byte_end":8687809,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688402,"byte_end":8688411,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8687993,"byte_end":8688047,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688052,"byte_end":8688055,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688060,"byte_end":8688074,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688079,"byte_end":8688082,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688087,"byte_end":8688094,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688099,"byte_end":8688131,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688136,"byte_end":8688186,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688191,"byte_end":8688235,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688240,"byte_end":8688275,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688280,"byte_end":8688311,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688316,"byte_end":8688339,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688344,"byte_end":8688351,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688356,"byte_end":8688378,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688383,"byte_end":8688390,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689020,"byte_end":8689030,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688572,"byte_end":8688621,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688626,"byte_end":8688629,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688634,"byte_end":8688648,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688653,"byte_end":8688656,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688661,"byte_end":8688668,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688673,"byte_end":8688718,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688723,"byte_end":8688773,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688778,"byte_end":8688834,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688839,"byte_end":8688852,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688857,"byte_end":8688892,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688897,"byte_end":8688928,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688933,"byte_end":8688957,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688962,"byte_end":8688969,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8688974,"byte_end":8688996,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689001,"byte_end":8689008,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8690409,"byte_end":8690419,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8690166,"byte_end":8690253,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8690254,"byte_end":8690257,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8690258,"byte_end":8690296,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8690297,"byte_end":8690335,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691519,"byte_end":8691522,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691100,"byte_end":8691160,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691165,"byte_end":8691168,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691173,"byte_end":8691183,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691188,"byte_end":8691191,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691196,"byte_end":8691268,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691273,"byte_end":8691346,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691351,"byte_end":8691418,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691423,"byte_end":8691426,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691431,"byte_end":8691507,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692653,"byte_end":8692672,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691680,"byte_end":8691740,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691745,"byte_end":8691748,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691753,"byte_end":8691816,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691821,"byte_end":8691899,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691904,"byte_end":8691971,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691976,"byte_end":8692048,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692053,"byte_end":8692123,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692128,"byte_end":8692151,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692156,"byte_end":8692159,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692164,"byte_end":8692174,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692179,"byte_end":8692182,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692187,"byte_end":8692262,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692267,"byte_end":8692340,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692345,"byte_end":8692421,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692426,"byte_end":8692499,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692504,"byte_end":8692574,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692579,"byte_end":8692582,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692587,"byte_end":8692641,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693238,"byte_end":8693248,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692800,"byte_end":8692850,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692855,"byte_end":8692858,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692863,"byte_end":8692870,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692875,"byte_end":8692894,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692899,"byte_end":8692937,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692942,"byte_end":8692945,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692950,"byte_end":8692984,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8692989,"byte_end":8693036,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693041,"byte_end":8693048,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693053,"byte_end":8693060,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693065,"byte_end":8693103,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693108,"byte_end":8693111,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693116,"byte_end":8693169,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693174,"byte_end":8693214,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693219,"byte_end":8693226,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697608,"byte_end":8697629,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697562,"byte_end":8697603,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697664,"byte_end":8697666,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697635,"byte_end":8697659,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697540,"byte_end":8697555,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697458,"byte_end":8697513,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619943,"byte_end":8619953,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8620104,"byte_end":8620114,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8620441,"byte_end":8620451,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630298,"byte_end":8630302,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630573,"byte_end":8630579,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633807,"byte_end":8633813,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638380,"byte_end":8638386,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638648,"byte_end":8638654,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639425,"byte_end":8639431,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639791,"byte_end":8639795,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639933,"byte_end":8639937,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640144,"byte_end":8640148,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640543,"byte_end":8640547,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640828,"byte_end":8640832,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641049,"byte_end":8641053,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641582,"byte_end":8641586,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641967,"byte_end":8641971,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642874,"byte_end":8642885,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644019,"byte_end":8644029,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644816,"byte_end":8644826,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646318,"byte_end":8646328,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646641,"byte_end":8646651,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8647741,"byte_end":8647751,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8648807,"byte_end":8648818,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8649336,"byte_end":8649347,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652470,"byte_end":8652481,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652804,"byte_end":8652815,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654243,"byte_end":8654254,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654965,"byte_end":8654976,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8655308,"byte_end":8655319,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8656162,"byte_end":8656174,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8656516,"byte_end":8656528,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8658788,"byte_end":8658800,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659136,"byte_end":8659148,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659283,"byte_end":8659295,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659502,"byte_end":8659514,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659909,"byte_end":8659921,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8660201,"byte_end":8660213,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674153,"byte_end":8674173,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8677526,"byte_end":8677546,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8678433,"byte_end":8678453,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8679794,"byte_end":8679814,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8679907,"byte_end":8679914,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689513,"byte_end":8689520,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689646,"byte_end":8689671,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689829,"byte_end":8689854,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689989,"byte_end":8690014,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691083,"byte_end":8691093,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693635,"byte_end":8693645,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697056,"byte_end":8697066,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697389,"byte_end":8697399,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697704,"byte_end":8697719,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8698001,"byte_end":8698016,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8698133,"byte_end":8698148,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":8618470,"byte_end":8618486,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":348}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8619943,"byte_end":8619953,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8620104,"byte_end":8620114,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":8620441,"byte_end":8620451,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630298,"byte_end":8630302,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8630573,"byte_end":8630579,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8633807,"byte_end":8633813,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638380,"byte_end":8638386,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":777},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8638648,"byte_end":8638654,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":777},"to":{"krate":33,"index":9}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639425,"byte_end":8639431,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639791,"byte_end":8639795,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3117}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8639933,"byte_end":8639937,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3200}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640144,"byte_end":8640148,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640543,"byte_end":8640547,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8640828,"byte_end":8640832,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3176}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641049,"byte_end":8641053,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":732},"to":{"krate":14,"index":271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641582,"byte_end":8641586,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8641967,"byte_end":8641971,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":8642874,"byte_end":8642885,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644019,"byte_end":8644029,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8644816,"byte_end":8644826,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646318,"byte_end":8646328,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":691},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8646641,"byte_end":8646651,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":691},"to":{"krate":33,"index":9}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8647741,"byte_end":8647751,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8648807,"byte_end":8648818,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":8649336,"byte_end":8649347,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652470,"byte_end":8652481,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8652804,"byte_end":8652815,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654243,"byte_end":8654254,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":605},"to":{"krate":33,"index":9}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8654965,"byte_end":8654976,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":605},"to":{"krate":16,"index":68}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8655308,"byte_end":8655319,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8656162,"byte_end":8656174,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8656516,"byte_end":8656528,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":568},"to":{"krate":33,"index":9}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8658788,"byte_end":8658800,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659136,"byte_end":8659148,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":3117}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659283,"byte_end":8659295,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":3200}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659502,"byte_end":8659514,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":14,"index":215}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8659909,"byte_end":8659921,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":14,"index":186}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":8660201,"byte_end":8660213,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8674153,"byte_end":8674173,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8677526,"byte_end":8677546,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8678433,"byte_end":8678453,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8679794,"byte_end":8679814,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8679907,"byte_end":8679914,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689513,"byte_end":8689520,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689646,"byte_end":8689671,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689829,"byte_end":8689854,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":8689989,"byte_end":8690014,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8691083,"byte_end":8691093,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8693635,"byte_end":8693645,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697056,"byte_end":8697066,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697389,"byte_end":8697399,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8697704,"byte_end":8697719,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8698001,"byte_end":8698016,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":8698133,"byte_end":8698148,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1724}}]}