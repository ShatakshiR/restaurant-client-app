{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","typed_builder","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e741159f34b86fb8","-C","extra-filename=-e741159f34b86fb8","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","proc_macro2=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libproc_macro2-8a77e0b7006b07e3.rlib","--extern","quote=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libquote-8e01eb4ff6adbc8b.rlib","--extern","syn=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libsyn-e17fa43c721a7061.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\typed_builder-e741159f34b86fb8.dll"},"prelude":{"crate_id":{"name":"typed_builder","disambiguator":[17320263682281646690,1100106673752651214]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":13,"id":{"name":"proc_macro","disambiguator":[10868761797083353167,13721266217715016836]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":14,"id":{"name":"proc_macro2","disambiguator":[12238654198788569312,9577865975015566952]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":15,"id":{"name":"unicode_xid","disambiguator":[7229251187792718441,15240516695504349894]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":16,"id":{"name":"syn","disambiguator":[88929450407964333,15598556086568461155]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","num":17,"id":{"name":"quote","disambiguator":[8597977838751300426,7831964294501862593]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":0,"byte_end":8466,"line_start":1,"line_end":225,"column_start":1,"column_end":28}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":0,"byte_end":8466,"line_start":1,"line_end":225,"column_start":1,"column_end":28},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":167},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":38},{"krate":0,"index":87},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5261,"byte_end":5281,"line_start":125,"line_end":125,"column_start":8,"column_end":28},"name":"derive_typed_builder","qualname":"::derive_typed_builder","value":"pub fn derive_typed_builder(proc_macro::TokenStream)\n-> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" `TypedBuilder` is not a real type - deriving it will generate a `::builder()` method on your\n struct that will return a compile-time checked builder. Set the fields using setters with the\n same name as the struct's fields that accept `Into` types for the type of the field, and call\n `.build()` when you are done to create your object.","sig":null,"attributes":[{"value":"/ `TypedBuilder` is not a real type - deriving it will generate a `::builder()` method on your","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":279,"byte_end":375,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ struct that will return a compile-time checked builder. Set the fields using setters with the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":376,"byte_end":473,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ same name as the struct's fields that accept `Into` types for the type of the field, and call","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":474,"byte_end":571,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ `.build()` when you are done to create your object.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":572,"byte_end":627,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":628,"byte_end":631,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Trying to set the same fields twice will generate a compile-time error. Trying to build without","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":632,"byte_end":731,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ setting one of the fields will also generate a compile-time error - unless that field is marked","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":732,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ as `#[builder(default)]`, in which case the `::default()` value of it's type will be picked. If","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":832,"byte_end":931,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ you want to set a different default, use `#[builder(default=...)]`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":932,"byte_end":1003,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1004,"byte_end":1007,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1008,"byte_end":1022,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1023,"byte_end":1026,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1027,"byte_end":1034,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1035,"byte_end":1051,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ extern crate typed_builder;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1052,"byte_end":1083,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1084,"byte_end":1087,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, TypedBuilder)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1088,"byte_end":1126,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1127,"byte_end":1143,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     // Mandatory Field:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1144,"byte_end":1171,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/     x: i32,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1172,"byte_end":1187,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1188,"byte_end":1191,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     // #[default] without parameter - use the type's default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1192,"byte_end":1256,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/     #[builder(default)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1257,"byte_end":1284,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/     y: Option<i32>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1285,"byte_end":1308,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1309,"byte_end":1312,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     // Or you can set the default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1313,"byte_end":1350,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/     #[builder(default=20)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1351,"byte_end":1381,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/     z: i32,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1382,"byte_end":1397,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1398,"byte_end":1401,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     // If the default cannot be parsed, you must encode it as a string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1402,"byte_end":1477,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/     // This also allows you to refer to the values of earlier-declared fields.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1478,"byte_end":1560,"line_start":49,"line_end":49,"column_start":1,"column_end":83}},{"value":"/     #[builder(default_code=\"vec![z as u32, 40]\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1561,"byte_end":1614,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     w: Vec<u32>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1615,"byte_end":1635,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1636,"byte_end":1641,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1642,"byte_end":1645,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1646,"byte_end":1661,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     assert!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1662,"byte_end":1678,"line_start":55,"line_end":55,"column_start":1,"column_end":17}},{"value":"/         Foo::builder().x(1).y(2).z(3).w(vec![4, 5]).build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1679,"byte_end":1742,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/         == Foo { x: 1, y: Some(2), z: 3, w: vec![4, 5] });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1743,"byte_end":1805,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1806,"byte_end":1809,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // Change the order of construction:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1810,"byte_end":1854,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/     assert!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1855,"byte_end":1871,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/         Foo::builder().z(1).x(2).w(vec![4, 5]).y(3).build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1872,"byte_end":1935,"line_start":61,"line_end":61,"column_start":1,"column_end":64}},{"value":"/         == Foo { x: 2, y: Some(3), z: 1, w: vec![4, 5] });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1936,"byte_end":1998,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":1999,"byte_end":2002,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // Optional fields are optional:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2003,"byte_end":2043,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/     assert!(","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2044,"byte_end":2060,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/         Foo::builder().x(1).build()","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2061,"byte_end":2100,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         == Foo { x: 1, y: None, z: 20, w: vec![20, 40] });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2101,"byte_end":2163,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2164,"byte_end":2167,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // This will not compile - because we did not set x:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2168,"byte_end":2228,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/     // Foo::builder().build();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2229,"byte_end":2263,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2264,"byte_end":2267,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // This will not compile - because we set y twice:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2268,"byte_end":2326,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"/     // Foo::builder().x(1).y(2).y(3);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2327,"byte_end":2368,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2369,"byte_end":2374,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2375,"byte_end":2382,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2383,"byte_end":2386,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Customisation with attributes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2387,"byte_end":2422,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2423,"byte_end":2426,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ In addition to putting `#[derive(TypedBuilder)]` on a type, you can specify a `#[builder(…)]`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2427,"byte_end":2526,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ attribute on the type, and on any fields in it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2527,"byte_end":2578,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2579,"byte_end":2582,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ On the **type**, the following values are permitted:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2583,"byte_end":2639,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2640,"byte_end":2643,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - `name = FooBuilder`: customise the name of the builder type. By default, the builder type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2644,"byte_end":2739,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/   will use the type’s name plus “Builder”, e.g. `FooBuilder` for type `Foo`. (Note this is","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2740,"byte_end":2840,"line_start":85,"line_end":85,"column_start":1,"column_end":95}},{"value":"/   `name = FooBuilder` and not `name = \"FooBuilder\"`.)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2841,"byte_end":2898,"line_start":86,"line_end":86,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2899,"byte_end":2902,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ - `doc`: enable documentation of the builder type. By default, the builder type is given","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2903,"byte_end":2995,"line_start":88,"line_end":88,"column_start":1,"column_end":93}},{"value":"/   `#[doc(hidden)]`, so that the `builder()` method will show `FooBuilder` as its return type,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":2996,"byte_end":3093,"line_start":89,"line_end":89,"column_start":1,"column_end":98}},{"value":"/   but it won’t be a link. If you turn this on, the builder type and its `build` method will get","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3094,"byte_end":3195,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/   sane defaults. The field methods on the builder will be undocumented by default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3196,"byte_end":3282,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3283,"byte_end":3286,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - `builder_method_doc = \"…\"` replaces the default documentation that will be generated for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3287,"byte_end":3387,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/   `builder()` method of the type for which the builder is being generated.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3388,"byte_end":3466,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3467,"byte_end":3470,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - `builder_type_doc = \"…\"` replaces the default documentation that will be generated for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3471,"byte_end":3569,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"/   builder type. Setting this implies `doc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3570,"byte_end":3617,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3618,"byte_end":3621,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ - `build_method_doc = \"…\"` replaces the default documentation that will be generated for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3622,"byte_end":3720,"line_start":99,"line_end":99,"column_start":1,"column_end":97}},{"value":"/   `build()` method of the builder type. Setting this implies `doc`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3721,"byte_end":3792,"line_start":100,"line_end":100,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3793,"byte_end":3796,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ On each **field**, the following values are permitted:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3797,"byte_end":3855,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3856,"byte_end":3859,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - `default`: make the field optional, defaulting to `Default::default()`. This requires that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3860,"byte_end":3956,"line_start":104,"line_end":104,"column_start":1,"column_end":97}},{"value":"/   the field type implement `Default`. Mutually exclusive with any other form of default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":3957,"byte_end":4049,"line_start":105,"line_end":105,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4050,"byte_end":4053,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ - `default = …`: make the field optional, defaulting to the expression `…`. This can be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4054,"byte_end":4149,"line_start":107,"line_end":107,"column_start":1,"column_end":92}},{"value":"/   anything that will parse in an attribute, e.g. a string or a number. Although some","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4150,"byte_end":4238,"line_start":108,"line_end":108,"column_start":1,"column_end":89}},{"value":"/   non-literal expressions will successfully parse (e.g. `Some(foo)`), it is recommended for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4239,"byte_end":4334,"line_start":109,"line_end":109,"column_start":1,"column_end":96}},{"value":"/   stylistic consistency across the Rust ecosystem that anything that is not a literal use","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4335,"byte_end":4428,"line_start":110,"line_end":110,"column_start":1,"column_end":94}},{"value":"/   `default_code` instead. Mutually exclusive with any other form of default.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4429,"byte_end":4509,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4510,"byte_end":4513,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ - `default_code = \"…\"`: make the field optional, defaulting to the expression `…`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4514,"byte_end":4604,"line_start":113,"line_end":113,"column_start":1,"column_end":87}},{"value":"/   This must be used when the expression will not parse in an attribute with `default = …`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4605,"byte_end":4701,"line_start":114,"line_end":114,"column_start":1,"column_end":95}},{"value":"/   Mutually exclusive with any other form of default. You can refer by name to the values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4702,"byte_end":4794,"line_start":115,"line_end":115,"column_start":1,"column_end":93}},{"value":"/   determined for fields that are defined earlier in the type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4795,"byte_end":4860,"line_start":116,"line_end":116,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4861,"byte_end":4864,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ - `doc = \"…\"`: sets the documentation for the field’s method on the builder type. This will be","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4865,"byte_end":4967,"line_start":118,"line_end":118,"column_start":1,"column_end":99}},{"value":"/   of no value unless you enable docs for the builder type with `#[builder(doc)]` or similar on","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":4968,"byte_end":5066,"line_start":119,"line_end":119,"column_start":1,"column_end":99}},{"value":"/   the type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5067,"byte_end":5082,"line_start":120,"line_end":120,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5083,"byte_end":5086,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ - `skip`: do not define a method on the builder for this field. This requires that a default","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5087,"byte_end":5183,"line_start":122,"line_end":122,"column_start":1,"column_end":97}},{"value":"/   be set.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5184,"byte_end":5197,"line_start":123,"line_end":123,"column_start":1,"column_end":14}},{"value":"proc_macro_derive(TypedBuilder, attributes(builder))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\lib.rs","byte_start":5198,"byte_end":5253,"line_start":124,"line_end":124,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\field_info.rs","byte_start":8886,"byte_end":8895,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\field_info.rs","byte_start":10219,"byte_end":10235,"line_start":64,"line_end":64,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\struct_info.rs","byte_start":14838,"byte_end":14848,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\struct_info.rs","byte_start":30044,"byte_end":30059,"line_start":397,"line_end":397,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\field_info.rs","byte_start":8886,"byte_end":8895,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\field_info.rs","byte_start":10219,"byte_end":10235,"line_start":64,"line_end":64,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\struct_info.rs","byte_start":14838,"byte_end":14848,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\typed-builder-0.4.1\\src\\struct_info.rs","byte_start":30044,"byte_end":30059,"line_start":397,"line_end":397,"column_start":6,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}}]}