{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0","program":"C:\\Users\\Shubhanki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bson","--edition=2018","C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=6e8f1b2db99eeae7","-C","extra-filename=-6e8f1b2db99eeae7","--out-dir","d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","-L","dependency=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps","--extern","base64=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbase64-c98f27e5542c412f.rmeta","--extern","chrono=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libchrono-30317355ddfffad0.rmeta","--extern","hex=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libhex-05b605fab5d7f468.rmeta","--extern","lazy_static=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblazy_static-45157252ee590ae1.rmeta","--extern","linked_hash_map=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\liblinked_hash_map-4605778f4e03b7ad.rmeta","--extern","rand=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\librand-c637e7d44bee614d.rmeta","--extern","serde=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libserde-c903a4eac6bbf43b.rmeta","--extern","serde_json=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libserde_json-7d04c86b9c4ba060.rmeta","--extern","uuid=d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libuuid-4f823e5d49ec678e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Shubhanki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Shatakshi\\Professional\\RUST\\RestaurantManagement\\restaurant-client-app\\target\\rls\\debug\\deps\\libbson-6e8f1b2db99eeae7.rmeta"},"prelude":{"crate_id":{"name":"bson","disambiguator":[7757232622918602639,11472200170111750679]},"crate_root":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":13,"id":{"name":"chrono","disambiguator":[15972948001177874150,2127724797460033269]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":14,"id":{"name":"time","disambiguator":[11928100213423366982,18266183899167535483]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":15,"id":{"name":"winapi","disambiguator":[4006827767281335465,13430598760160072842]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":16,"id":{"name":"libc","disambiguator":[10998793997669251982,17344573831942951983]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":17,"id":{"name":"num_integer","disambiguator":[2253207229150756160,5705423370055637654]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":18,"id":{"name":"num_traits","disambiguator":[16397189604060148428,6018103228743906826]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":19,"id":{"name":"serde_json","disambiguator":[11828549158403202617,16900018290782391945]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","num":20,"id":{"name":"serde","disambiguator":[7726349748653087478,18305965747655658644]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","num":21,"id":{"name":"serde_derive","disambiguator":[5214723321485607833,10357800902283826234]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":22,"id":{"name":"indexmap","disambiguator":[12010419235297194710,15242852176958992948]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":23,"id":{"name":"hashbrown","disambiguator":[12863106205742173651,5412819497830497650]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":24,"id":{"name":"itoa","disambiguator":[3952745943175287038,3083261914376456478]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":25,"id":{"name":"ryu","disambiguator":[14468772150109226523,17250392272384711565]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","num":26,"id":{"name":"linked_hash_map","disambiguator":[9317848944710243564,10470005576102660965]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":27,"id":{"name":"hex","disambiguator":[15349097517710787958,12777179358860236010]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":28,"id":{"name":"rand","disambiguator":[2011370677945530483,2490214532376140525]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":29,"id":{"name":"rand_core","disambiguator":[5034553938873377689,5974153682007555143]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":30,"id":{"name":"getrandom","disambiguator":[14079652609278187743,15979312999171949141]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":31,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":32,"id":{"name":"rand_chacha","disambiguator":[4194618135429465549,8447975972737486697]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":33,"id":{"name":"ppv_lite86","disambiguator":[13794390771410745816,13742225575859793659]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":34,"id":{"name":"rand_pcg","disambiguator":[12838091706171660780,5406054515486785787]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","num":35,"id":{"name":"lazy_static","disambiguator":[15015519582684158761,6705730272629463748]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","num":36,"id":{"name":"uuid","disambiguator":[10622085433485140361,14704712335884879541]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","num":37,"id":{"name":"getrandom","disambiguator":[17319445117252420411,2247562127164021507]}},{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","num":38,"id":{"name":"base64","disambiguator":[3906732271287526408,12039393918393938381]}}],"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1148,"byte_end":8154,"line_start":22,"line_end":218,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7656,"byte_end":7661,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7671,"byte_end":7677,"line_start":190,"line_end":190,"column_start":9,"column_end":15},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7687,"byte_end":7691,"line_start":191,"line_end":191,"column_start":9,"column_end":13},"alias_span":null,"name":"Bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7701,"byte_end":7709,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7701,"byte_end":7709,"line_start":192,"line_end":192,"column_start":9,"column_end":17},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7719,"byte_end":7728,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"alias_span":null,"name":"DbPointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7738,"byte_end":7746,"line_start":194,"line_end":194,"column_start":9,"column_end":17},"alias_span":null,"name":"Document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7756,"byte_end":7779,"line_start":195,"line_end":195,"column_start":9,"column_end":32},"alias_span":null,"name":"JavaScriptCodeWithScope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7789,"byte_end":7794,"line_start":196,"line_end":196,"column_start":9,"column_end":14},"alias_span":null,"name":"Regex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7804,"byte_end":7813,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7831,"byte_end":7840,"line_start":199,"line_end":199,"column_start":10,"column_end":19},"alias_span":null,"name":"from_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7842,"byte_end":7855,"line_start":199,"line_end":199,"column_start":21,"column_end":34},"alias_span":null,"name":"from_document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7857,"byte_end":7869,"line_start":199,"line_end":199,"column_start":36,"column_end":48},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7888,"byte_end":7898,"line_start":200,"line_end":200,"column_start":17,"column_end":27},"alias_span":null,"name":"Decimal128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7910,"byte_end":7917,"line_start":201,"line_end":201,"column_start":11,"column_end":18},"alias_span":null,"name":"to_bson","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7919,"byte_end":7930,"line_start":201,"line_end":201,"column_start":20,"column_end":31},"alias_span":null,"name":"to_document","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7932,"byte_end":7942,"line_start":201,"line_end":201,"column_start":33,"column_end":43},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7932,"byte_end":7942,"line_start":201,"line_end":201,"column_start":33,"column_end":43},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":52731,"byte_end":52736,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":52738,"byte_end":52744,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":52758,"byte_end":52770,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":150863,"byte_end":150868,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":808}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":150870,"byte_end":150876,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":808}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":150890,"byte_end":150900,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":808}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":150890,"byte_end":150900,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":992}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173447,"byte_end":173458,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_bson_datetime_from_iso_string","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173509,"byte_end":173518,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_bson_datetime_as_iso_string","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173612,"byte_end":173623,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_chrono_datetime_from_bson_datetime","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173679,"byte_end":173688,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_chrono_datetime_as_bson_datetime","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173782,"byte_end":173793,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_iso_string_from_bson_datetime","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173844,"byte_end":173853,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_iso_string_as_bson_datetime","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173931,"byte_end":173942,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_timestamp_from_u32","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173982,"byte_end":173991,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_timestamp_as_u32","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174058,"byte_end":174069,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_u32_from_timestamp","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174109,"byte_end":174118,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_u32_as_timestamp","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174183,"byte_end":174194,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"alias_span":null,"name":"deserialize_uuid_from_binary","value":"","parent":{"krate":0,"index":1028}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174232,"byte_end":174241,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"alias_span":null,"name":"serialize_uuid_as_binary","value":"","parent":{"krate":0,"index":1028}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1148,"byte_end":8154,"line_start":22,"line_end":218,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":2585},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":2609},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":158},{"krate":0,"index":191},{"krate":0,"index":472},{"krate":0,"index":478},{"krate":0,"index":660},{"krate":0,"index":744},{"krate":0,"index":808},{"krate":0,"index":1028},{"krate":0,"index":1160}],"decl_id":null,"docs":" BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.\n Like JSON, BSON supports the embedding of documents and arrays within other documents\n and arrays. BSON also contains extensions that allow representation of data types that\n are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","sig":null,"attributes":[{"value":"/ BSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1148,"byte_end":1238,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/ Like JSON, BSON supports the embedding of documents and arrays within other documents","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1239,"byte_end":1328,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ and arrays. BSON also contains extensions that allow representation of data types that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1329,"byte_end":1419,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ are not part of the JSON spec. For example, BSON has a datetime type and a binary data type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1420,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1517,"byte_end":1520,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1521,"byte_end":1532,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ // JSON equivalent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1533,"byte_end":1555,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ {\"hello\": \"world\"}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1556,"byte_end":1578,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1579,"byte_end":1582,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // BSON encoding","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1583,"byte_end":1603,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/ \\x16\\x00\\x00\\x00                   // total document size","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1604,"byte_end":1665,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ \\x02                               // 0x02 = type String","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1666,"byte_end":1726,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/ hello\\x00                          // field name","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1727,"byte_end":1779,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ \\x06\\x00\\x00\\x00world\\x00          // field value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1780,"byte_end":1833,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/ \\x00                               // 0x00 = type EOO ('end of object')","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1834,"byte_end":1909,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1910,"byte_end":1917,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1918,"byte_end":1921,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ BSON is the primary data representation for [MongoDB](https://www.mongodb.com/), and this crate is used in the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":1922,"byte_end":2036,"line_start":39,"line_end":39,"column_start":1,"column_end":115}},{"value":"/ [`mongodb`](https://docs.rs/mongodb/0.10.0/mongodb/) driver crate in its API and implementation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2037,"byte_end":2137,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2138,"byte_end":2141,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ For more information about BSON itself, see [bsonspec.org](http://bsonspec.org).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2142,"byte_end":2226,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2227,"byte_end":2230,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## BSON values","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2231,"byte_end":2249,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2250,"byte_end":2253,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Many different types can be represented as a BSON value, including 32-bit and 64-bit signed","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2254,"byte_end":2349,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ integers, 64 bit floating point numbers, strings, datetimes, embedded documents, and more. To","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2350,"byte_end":2447,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ see a full list of possible BSON values, see the [BSON specification](http://bsonspec.org/spec.html). The various","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2448,"byte_end":2565,"line_start":48,"line_end":48,"column_start":1,"column_end":118}},{"value":"/ possible BSON values are modeled in this crate by the [`Bson`](enum.Bson.html) enum.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2566,"byte_end":2654,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2655,"byte_end":2658,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Creating [`Bson`](enum.Bson.html) instances","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2659,"byte_end":2710,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2711,"byte_end":2714,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`Bson`](enum.Bson.html) values can be instantiated directly or via the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2715,"byte_end":2790,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ [`bson!`](macro.bson.html) macro:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2791,"byte_end":2828,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2829,"byte_end":2832,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2833,"byte_end":2844,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2845,"byte_end":2874,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ let string = Bson::String(\"hello world\".to_string());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2875,"byte_end":2932,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/ let int = Bson::Int32(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2933,"byte_end":2962,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/ let array = Bson::Array(vec![Bson::Int32(5), Bson::Boolean(false)]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":2963,"byte_end":3035,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3036,"byte_end":3039,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let string: Bson = \"hello world\".into();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3040,"byte_end":3084,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ let int: Bson = 5i32.into();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3085,"byte_end":3117,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let string = bson!(\"hello world\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3122,"byte_end":3160,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/ let int = bson!(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3161,"byte_end":3184,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/ let array = bson!([5, false]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3185,"byte_end":3219,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3220,"byte_end":3227,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ [`bson!`](macro.bson.html) has supports both array and object literals, and it automatically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3228,"byte_end":3324,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ converts any values specified to [`Bson`](enum.Bson.html), provided they are `Into<Bson>`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3325,"byte_end":3419,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3420,"byte_end":3423,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### [`Bson`](enum.Bson.html) value unwrapping","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3424,"byte_end":3473,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3474,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`Bson`](enum.Bson.html) has a number of helper methods for accessing the underlying native Rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3478,"byte_end":3578,"line_start":74,"line_end":74,"column_start":1,"column_end":101}},{"value":"/ types. These helpers can be useful in circumstances in which the specific type of a BSON value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3579,"byte_end":3677,"line_start":75,"line_end":75,"column_start":1,"column_end":99}},{"value":"/ is known ahead of time.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3678,"byte_end":3705,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3706,"byte_end":3709,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ e.g.:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3710,"byte_end":3719,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3720,"byte_end":3731,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3732,"byte_end":3761,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/ let value = Bson::Int32(5);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3762,"byte_end":3793,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/ let int = value.as_i32(); // Some(5)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3794,"byte_end":3834,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ let bool = value.as_bool(); // None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3835,"byte_end":3874,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3875,"byte_end":3878,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let value = bson!([true]);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3879,"byte_end":3909,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/ let array = value.as_array(); // Some(&Vec<Bson>)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3910,"byte_end":3963,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3964,"byte_end":3971,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3972,"byte_end":3975,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## BSON documents","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3976,"byte_end":3997,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":3998,"byte_end":4001,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ BSON documents are ordered maps of UTF-8 encoded strings to BSON values. They are logically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4002,"byte_end":4097,"line_start":91,"line_end":91,"column_start":1,"column_end":96}},{"value":"/ similar to JSON objects in that they can contain subdocuments, arrays, and values of several","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4098,"byte_end":4194,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ different types. This crate models BSON documents via the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4195,"byte_end":4256,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/ [`Document`](document/struct.Document.html) struct.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4257,"byte_end":4312,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4313,"byte_end":4316,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ### Creating [`Document`](document/struct.Document.html)s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4317,"byte_end":4378,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4379,"byte_end":4382,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`Document`](document/struct.Document.html)s can be created directly either from a byte","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4383,"byte_end":4474,"line_start":98,"line_end":98,"column_start":1,"column_end":92}},{"value":"/ reader containing BSON data or via the `doc!` macro:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4475,"byte_end":4531,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4532,"byte_end":4543,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/ # use bson::{doc, Document};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4544,"byte_end":4576,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/ # use std::io::Read;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4577,"byte_end":4601,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ let mut bytes = hex::decode(\"0C0000001069000100000000\").unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4602,"byte_end":4671,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ let doc = Document::from_reader(&mut bytes.as_slice()).unwrap(); // { \"i\": 1 }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4672,"byte_end":4754,"line_start":104,"line_end":104,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4755,"byte_end":4758,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let doc = doc! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4759,"byte_end":4779,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"/    \"hello\": \"world\",","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4780,"byte_end":4804,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"/    \"int\": 5,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4805,"byte_end":4821,"line_start":108,"line_end":108,"column_start":1,"column_end":17}},{"value":"/    \"subdoc\": { \"cat\": true },","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4822,"byte_end":4855,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4856,"byte_end":4862,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4863,"byte_end":4870,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ [`doc!`](macro.doc.html) works similarly to [`bson!`](macro.bson.html), except that it always","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4871,"byte_end":4968,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/ returns a [`Document`](document/struct.Document.html) rather than a [`Bson`](enum.Bson.html).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":4969,"byte_end":5066,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5067,"byte_end":5070,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### [`Document`](document/struct.Document.html) member access","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5071,"byte_end":5136,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5137,"byte_end":5140,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`Document`](document/struct.Document.html) has a number of methods on it to facilitate member","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5141,"byte_end":5239,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ access:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5240,"byte_end":5251,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5252,"byte_end":5255,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5256,"byte_end":5267,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/ # use bson::doc;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5268,"byte_end":5288,"line_start":121,"line_end":121,"column_start":1,"column_end":21}},{"value":"/ let doc = doc! {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5289,"byte_end":5309,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/    \"string\": \"string\",","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5310,"byte_end":5336,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/    \"bool\": true,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5337,"byte_end":5357,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/    \"i32\": 5,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5358,"byte_end":5374,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"/    \"doc\": { \"x\": true },","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5375,"byte_end":5403,"line_start":126,"line_end":126,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5404,"byte_end":5410,"line_start":127,"line_end":127,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5411,"byte_end":5414,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // attempt get values as untyped Bson","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5415,"byte_end":5456,"line_start":129,"line_end":129,"column_start":1,"column_end":42}},{"value":"/ let none = doc.get(\"asdfadsf\"); // None","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5457,"byte_end":5500,"line_start":130,"line_end":130,"column_start":1,"column_end":44}},{"value":"/ let value = doc.get(\"string\"); // Some(&Bson::String(\"string\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5501,"byte_end":5568,"line_start":131,"line_end":131,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5569,"byte_end":5572,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ // attempt to get values with explicit typing","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5573,"byte_end":5622,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"/ let string = doc.get_str(\"string\"); // Ok(\"string\")","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5623,"byte_end":5678,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ let subdoc = doc.get_document(\"doc\"); // Some(Document({ \"x\": true }))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5679,"byte_end":5753,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ let error = doc.get_i64(\"i32\"); // Err(...)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5754,"byte_end":5801,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5802,"byte_end":5809,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5810,"byte_end":5813,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ## Modeling BSON with strongly typed data structures","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5814,"byte_end":5870,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5871,"byte_end":5874,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ While it is possible to work with documents and BSON values directly, it will often introduce a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5875,"byte_end":5974,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ lot of boilerplate for verifying the necessary keys are present and their values are the correct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":5975,"byte_end":6075,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"/ types. [`serde`](https://serde.rs/) provides a powerful way of mapping BSON data into Rust data structures largely","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6076,"byte_end":6194,"line_start":143,"line_end":143,"column_start":1,"column_end":119}},{"value":"/ automatically, removing the need for all that boilerplate.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6195,"byte_end":6257,"line_start":144,"line_end":144,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6258,"byte_end":6261,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ e.g.:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6262,"byte_end":6271,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6272,"byte_end":6283,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6284,"byte_end":6326,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/ # use bson::{bson, Bson};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6327,"byte_end":6356,"line_start":149,"line_end":149,"column_start":1,"column_end":30}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6357,"byte_end":6394,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/ struct Person {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6395,"byte_end":6414,"line_start":151,"line_end":151,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6415,"byte_end":6436,"line_start":152,"line_end":152,"column_start":1,"column_end":22}},{"value":"/     age: i32,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6437,"byte_end":6454,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/     phones: Vec<String>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6455,"byte_end":6483,"line_start":154,"line_end":154,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6484,"byte_end":6489,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6490,"byte_end":6493,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // Some BSON input data as a `Bson`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6494,"byte_end":6534,"line_start":157,"line_end":157,"column_start":1,"column_end":41}},{"value":"/ let bson_data: Bson = bson!({","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6535,"byte_end":6568,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/     \"name\": \"John Doe\",","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6569,"byte_end":6596,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/     \"age\": 43,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6597,"byte_end":6615,"line_start":160,"line_end":160,"column_start":1,"column_end":19}},{"value":"/     \"phones\": [","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6616,"byte_end":6635,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/         \"+44 1234567\",","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6636,"byte_end":6662,"line_start":162,"line_end":162,"column_start":1,"column_end":27}},{"value":"/         \"+44 2345678\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6663,"byte_end":6688,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"/     ]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6689,"byte_end":6698,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6699,"byte_end":6706,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6707,"byte_end":6710,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Deserialize the Person struct from the BSON data, automatically","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6711,"byte_end":6781,"line_start":167,"line_end":167,"column_start":1,"column_end":71}},{"value":"/ // verifying that the necessary keys are present and that they are of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6782,"byte_end":6855,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ // the correct types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6856,"byte_end":6881,"line_start":169,"line_end":169,"column_start":1,"column_end":26}},{"value":"/ let mut person: Person = bson::from_bson(bson_data).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6882,"byte_end":6947,"line_start":170,"line_end":170,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6948,"byte_end":6951,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ // Do things just like with any other Rust data structure.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":6952,"byte_end":7014,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"/ println!(\"Redacting {}'s record.\", person.name);","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7015,"byte_end":7067,"line_start":173,"line_end":173,"column_start":1,"column_end":53}},{"value":"/ person.name = \"REDACTED\".to_string();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7068,"byte_end":7109,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7110,"byte_end":7113,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Get a serialized version of the input data as a `Bson`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7114,"byte_end":7176,"line_start":176,"line_end":176,"column_start":1,"column_end":63}},{"value":"/ let redacted_bson = bson::to_bson(&person).unwrap();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7177,"byte_end":7233,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7234,"byte_end":7241,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7242,"byte_end":7245,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Any types that implement `Serialize` and `Deserialize` can be used in this way. Doing so helps","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7246,"byte_end":7344,"line_start":180,"line_end":180,"column_start":1,"column_end":99}},{"value":"/ separate the \"business logic\" that operates over the data from the (de)serialization logic that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7345,"byte_end":7444,"line_start":181,"line_end":181,"column_start":1,"column_end":100}},{"value":"/ translates the data to/from its serialized form. This can lead to more clear and concise code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7445,"byte_end":7542,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"/ that is also less error prone.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7543,"byte_end":7577,"line_start":183,"line_end":183,"column_start":1,"column_end":35}},{"value":"allow(clippy :: cognitive_complexity)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7579,"byte_end":7618,"line_start":185,"line_end":185,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16650,"byte_end":16656,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Double","qualname":"::bson::Bson::Double","value":"Bson::Double(f64)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16613,"byte_end":16645,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16688,"byte_end":16694,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"String","qualname":"::bson::Bson::String","value":"Bson::String(String)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16667,"byte_end":16683,"line_start":44,"line_end":44,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16722,"byte_end":16727,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Array","qualname":"::bson::Bson::Array","value":"Bson::Array(Array)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16708,"byte_end":16717,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16766,"byte_end":16774,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Document","qualname":"::bson::Bson::Document","value":"Bson::Document(Document)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16740,"byte_end":16761,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16812,"byte_end":16819,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::bson::Bson::Boolean","value":"Bson::Boolean(bool)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Boolean value\n","sig":null,"attributes":[{"value":"/ Boolean value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16790,"byte_end":16807,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16850,"byte_end":16854,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Null","qualname":"::bson::Bson::Null","value":"Bson::Null","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16831,"byte_end":16845,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16887,"byte_end":16904,"line_start":55,"line_end":55,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::bson::Bson::RegularExpression","value":"Bson::RegularExpression(Regex)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Regular expression\n","sig":null,"attributes":[{"value":"/ Regular expression","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16860,"byte_end":16882,"line_start":54,"line_end":54,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16941,"byte_end":16955,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::bson::Bson::JavaScriptCode","value":"Bson::JavaScriptCode(String)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16917,"byte_end":16936,"line_start":56,"line_end":56,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17002,"byte_end":17025,"line_start":59,"line_end":59,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::bson::Bson::JavaScriptCodeWithScope","value":"Bson::JavaScriptCodeWithScope(JavaScriptCodeWithScope)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16969,"byte_end":16997,"line_start":58,"line_end":58,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17086,"byte_end":17091,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Int32","qualname":"::bson::Bson::Int32","value":"Bson::Int32(i32)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" 32-bit signed integer\n","sig":null,"attributes":[{"value":"/ 32-bit signed integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17056,"byte_end":17081,"line_start":60,"line_end":60,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17132,"byte_end":17137,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Int64","qualname":"::bson::Bson::Int64","value":"Bson::Int64(i64)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17102,"byte_end":17127,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17166,"byte_end":17175,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::bson::Bson::Timestamp","value":"Bson::Timestamp(Timestamp)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17148,"byte_end":17161,"line_start":64,"line_end":64,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17212,"byte_end":17218,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Binary","qualname":"::bson::Bson::Binary","value":"Bson::Binary(Binary)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17192,"byte_end":17207,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17293,"byte_end":17301,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::bson::Bson::ObjectId","value":"Bson::ObjectId(oid::ObjectId)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17232,"byte_end":17288,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17343,"byte_end":17351,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::bson::Bson::DateTime","value":"Bson::DateTime(chrono::DateTime<Utc>)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17322,"byte_end":17338,"line_start":70,"line_end":70,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17408,"byte_end":17414,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::bson::Bson::Symbol","value":"Bson::Symbol(String)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Symbol (Deprecated)\n","sig":null,"attributes":[{"value":"/ Symbol (Deprecated)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17380,"byte_end":17403,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17562,"byte_end":17572,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::bson::Bson::Decimal128","value":"Bson::Decimal128(Decimal128)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17428,"byte_end":17557,"line_start":74,"line_end":74,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17627,"byte_end":17636,"line_start":77,"line_end":77,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::bson::Bson::Undefined","value":"Bson::Undefined","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Undefined value (Deprecated)\n","sig":null,"attributes":[{"value":"/ Undefined value (Deprecated)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17590,"byte_end":17622,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17658,"byte_end":17664,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::bson::Bson::MaxKey","value":"Bson::MaxKey","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Max key\n","sig":null,"attributes":[{"value":"/ Max key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17642,"byte_end":17653,"line_start":78,"line_end":78,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17686,"byte_end":17692,"line_start":81,"line_end":81,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::bson::Bson::MinKey","value":"Bson::MinKey","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" Min key\n","sig":null,"attributes":[{"value":"/ Min key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17670,"byte_end":17681,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17729,"byte_end":17738,"line_start":83,"line_end":83,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::bson::Bson::DbPointer","value":"Bson::DbPointer(DbPointer)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" DBPointer (Deprecated)\n","sig":null,"attributes":[{"value":"/ DBPointer (Deprecated)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17698,"byte_end":17724,"line_start":82,"line_end":82,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16602,"byte_end":16606,"line_start":41,"line_end":41,"column_start":10,"column_end":14},"name":"Bson","qualname":"::bson::Bson","value":"pub enum Bson {\n\n    /// 64-bit binary floating point\n    Double(f64),\n\n    /// UTF-8 string\n    String(String),\n\n    /// Array\n    Array(Array),\n\n    /// Embedded document\n    Document(Document),\n\n    /// Boolean value\n    Boolean(bool),\n\n    /// Null value\n    Null,\n\n    /// Regular expression\n    RegularExpression(Regex),\n\n    /// JavaScript code\n    JavaScriptCode(String),\n\n    /// JavaScript code w/ scope\n    JavaScriptCodeWithScope(JavaScriptCodeWithScope),\n\n    /// 32-bit signed integer\n    Int32(i32),\n\n    /// 64-bit signed integer\n    Int64(i64),\n\n    /// Timestamp\n    Timestamp(Timestamp),\n\n    /// Binary data\n    Binary(Binary),\n\n    /// [ObjectId](http://dochub.mongodb.org/core/objectids)\n    ObjectId(oid::ObjectId),\n\n    /// UTC datetime\n    DateTime(chrono::DateTime<Utc>),\n\n    /// Symbol (Deprecated)\n    Symbol(String),\n\n    /// [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n    Decimal128(Decimal128),\n\n    /// Undefined value (Deprecated)\n    Undefined,\n\n    /// Max key\n    MaxKey,\n\n    /// Min key\n    MinKey,\n\n    /// DBPointer (Deprecated)\n    DbPointer(DbPointer),\n}","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254}],"decl_id":null,"docs":" Possible BSON value types.\n","sig":null,"attributes":[{"value":"/ Possible BSON value types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":16527,"byte_end":16557,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17790,"byte_end":17795,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Array","qualname":"::bson::Array","value":"Vec<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Vec<Bson>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Vec<Bson>`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17754,"byte_end":17780,"line_start":86,"line_end":86,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23644,"byte_end":23664,"line_start":316,"line_end":316,"column_start":12,"column_end":32},"name":"into_relaxed_extjson","qualname":"<Bson>::into_relaxed_extjson","value":"pub fn into_relaxed_extjson(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [relaxed extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23262,"byte_end":23404,"line_start":311,"line_end":311,"column_start":5,"column_end":147}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23409,"byte_end":23412,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23417,"byte_end":23502,"line_start":313,"line_end":313,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23507,"byte_end":23589,"line_start":314,"line_end":314,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23594,"byte_end":23632,"line_start":315,"line_end":315,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27757,"byte_end":27779,"line_start":420,"line_end":420,"column_start":12,"column_end":34},"name":"into_canonical_extjson","qualname":"<Bson>::into_canonical_extjson","value":"pub fn into_canonical_extjson(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","sig":null,"attributes":[{"value":"/ Converts the Bson value into its [canonical extended JSON representation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27373,"byte_end":27517,"line_start":415,"line_end":415,"column_start":5,"column_end":149}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27522,"byte_end":27525,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Note: extended json encoding for `Decimal128` values is not supported without the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27530,"byte_end":27615,"line_start":417,"line_end":417,"column_start":5,"column_end":90}},{"value":"/ \"decimal128\" feature flag. If this method is called on a case which contains a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27620,"byte_end":27702,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ `Decimal128` value, it will panic.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":27707,"byte_end":27745,"line_start":419,"line_end":419,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":29205,"byte_end":29217,"line_start":458,"line_end":458,"column_start":12,"column_end":24},"name":"element_type","qualname":"<Bson>::element_type","value":"pub fn element_type(&Self) -> ElementType","parent":null,"children":[],"decl_id":null,"docs":" Get the `ElementType` of this value.\n","sig":null,"attributes":[{"value":"/ Get the `ElementType` of this value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":29153,"byte_end":29193,"line_start":457,"line_end":457,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41046,"byte_end":41052,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<Bson>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Double`, return its value as an `f64`. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":40953,"byte_end":41034,"line_start":793,"line_end":793,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41276,"byte_end":41282,"line_start":802,"line_end":802,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Bson>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return its value as a `&str`. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41183,"byte_end":41264,"line_start":801,"line_end":801,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41541,"byte_end":41551,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"as_str_mut","qualname":"<Bson>::as_str_mut","value":"pub fn as_str_mut(&mut Self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `String`, return a mutable reference to its value as a `str`. Returns `None`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41418,"byte_end":41511,"line_start":809,"line_end":809,"column_start":5,"column_end":98}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41516,"byte_end":41529,"line_start":810,"line_end":810,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41779,"byte_end":41787,"line_start":819,"line_end":819,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Bson>::as_array","value":"pub fn as_array(&Self) -> Option<&Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41699,"byte_end":41767,"line_start":818,"line_end":818,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42027,"byte_end":42039,"line_start":827,"line_end":827,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Bson>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Array`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":41924,"byte_end":42015,"line_start":826,"line_end":826,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42271,"byte_end":42282,"line_start":835,"line_end":835,"column_start":12,"column_end":23},"name":"as_document","qualname":"<Bson>::as_document","value":"pub fn as_document(&Self) -> Option<&Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42188,"byte_end":42259,"line_start":834,"line_end":834,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42531,"byte_end":42546,"line_start":843,"line_end":843,"column_start":12,"column_end":27},"name":"as_document_mut","qualname":"<Bson>::as_document_mut","value":"pub fn as_document_mut(&mut Self) -> Option<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Document`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42425,"byte_end":42519,"line_start":842,"line_end":842,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42780,"byte_end":42787,"line_start":851,"line_end":851,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Bson>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Bool`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Bool`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42701,"byte_end":42768,"line_start":850,"line_end":850,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42998,"byte_end":43004,"line_start":859,"line_end":859,"column_start":12,"column_end":18},"name":"as_i32","qualname":"<Bson>::as_i32","value":"pub fn as_i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I32`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I32`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":42920,"byte_end":42986,"line_start":858,"line_end":858,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43212,"byte_end":43218,"line_start":867,"line_end":867,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<Bson>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `I64`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `I64`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43134,"byte_end":43200,"line_start":866,"line_end":866,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43431,"byte_end":43443,"line_start":875,"line_end":875,"column_start":12,"column_end":24},"name":"as_object_id","qualname":"<Bson>::as_object_id","value":"pub fn as_object_id(&Self) -> Option<&oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43348,"byte_end":43419,"line_start":874,"line_end":874,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43697,"byte_end":43713,"line_start":883,"line_end":883,"column_start":12,"column_end":28},"name":"as_object_id_mut","qualname":"<Bson>::as_object_id_mut","value":"pub fn as_object_id_mut(&mut Self) -> Option<&mut oid::ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Objectid`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43591,"byte_end":43685,"line_start":882,"line_end":882,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43956,"byte_end":43967,"line_start":891,"line_end":891,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Bson>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":43873,"byte_end":43944,"line_start":890,"line_end":890,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44237,"byte_end":44252,"line_start":900,"line_end":900,"column_start":12,"column_end":27},"name":"as_datetime_mut","qualname":"<Bson>::as_datetime_mut","value":"pub fn as_datetime_mut(&mut Self) -> Option<&mut chrono::DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`\n otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `DateTime`, return a mutable reference to its value. Returns `None`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44123,"byte_end":44207,"line_start":898,"line_end":898,"column_start":5,"column_end":89}},{"value":"/ otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44212,"byte_end":44225,"line_start":899,"line_end":899,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44501,"byte_end":44510,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"as_symbol","qualname":"<Bson>::as_symbol","value":"pub fn as_symbol(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44420,"byte_end":44489,"line_start":907,"line_end":907,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44750,"byte_end":44763,"line_start":916,"line_end":916,"column_start":12,"column_end":25},"name":"as_symbol_mut","qualname":"<Bson>::as_symbol_mut","value":"pub fn as_symbol_mut(&mut Self) -> Option<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Symbol`, return a mutable reference to its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44646,"byte_end":44738,"line_start":915,"line_end":915,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44995,"byte_end":45007,"line_start":924,"line_end":924,"column_start":12,"column_end":24},"name":"as_timestamp","qualname":"<Bson>::as_timestamp","value":"pub fn as_timestamp(&Self) -> Option<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Timestamp`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Timestamp`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":44911,"byte_end":44983,"line_start":923,"line_end":923,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45242,"byte_end":45249,"line_start":932,"line_end":932,"column_start":12,"column_end":19},"name":"as_null","qualname":"<Bson>::as_null","value":"pub fn as_null(&Self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" If `Bson` is `Null`, return its value. Returns `None` otherwise\n","sig":null,"attributes":[{"value":"/ If `Bson` is `Null`, return its value. Returns `None` otherwise","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45163,"byte_end":45230,"line_start":931,"line_end":931,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45382,"byte_end":45395,"line_start":939,"line_end":939,"column_start":12,"column_end":25},"name":"as_db_pointer","qualname":"<Bson>::as_db_pointer","value":"pub fn as_db_pointer(&Self) -> Option<&DbPointer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45673,"byte_end":45682,"line_start":949,"line_end":949,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::bson::Timestamp","value":"Timestamp { time, increment }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267}],"decl_id":null,"docs":" Represents a BSON timestamp value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON timestamp value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45555,"byte_end":45593,"line_start":947,"line_end":947,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45745,"byte_end":45749,"line_start":951,"line_end":951,"column_start":9,"column_end":13},"name":"time","qualname":"::bson::Timestamp::time","value":"u32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The number of seconds since the Unix epoch.\n","sig":null,"attributes":[{"value":"/ The number of seconds since the Unix epoch.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45689,"byte_end":45736,"line_start":950,"line_end":950,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45876,"byte_end":45885,"line_start":955,"line_end":955,"column_start":9,"column_end":18},"name":"increment","qualname":"::bson::Timestamp::increment","value":"u32","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An incrementing value to order timestamps with the same number of seconds in the `time`\n field.\n","sig":null,"attributes":[{"value":"/ An incrementing value to order timestamps with the same number of seconds in the `time`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45761,"byte_end":45852,"line_start":953,"line_end":953,"column_start":5,"column_end":96}},{"value":"/ field.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45857,"byte_end":45867,"line_start":954,"line_end":954,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46679,"byte_end":46687,"line_start":990,"line_end":990,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::bson::DateTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `DateTime` representation in struct for serde serialization","sig":null,"attributes":[{"value":"/ `DateTime` representation in struct for serde serialization","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46315,"byte_end":46378,"line_start":976,"line_end":976,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46379,"byte_end":46382,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ Just a helper for convenience","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46383,"byte_end":46416,"line_start":978,"line_end":978,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46417,"byte_end":46420,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46421,"byte_end":46432,"line_start":980,"line_end":980,"column_start":1,"column_end":12}},{"value":"/ use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46433,"byte_end":46473,"line_start":981,"line_end":981,"column_start":1,"column_end":41}},{"value":"/ use bson::DateTime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46474,"byte_end":46497,"line_start":982,"line_end":982,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46498,"byte_end":46501,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46502,"byte_end":46539,"line_start":984,"line_end":984,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46540,"byte_end":46556,"line_start":985,"line_end":985,"column_start":1,"column_end":17}},{"value":"/     date_time: DateTime,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46557,"byte_end":46585,"line_start":986,"line_end":986,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46586,"byte_end":46591,"line_start":987,"line_end":987,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46592,"byte_end":46599,"line_start":988,"line_end":988,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46688,"byte_end":46713,"line_start":990,"line_end":990,"column_start":21,"column_end":46},"name":"0","qualname":"::bson::DateTime::0","value":"chrono::DateTime<chrono::Utc>","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48509,"byte_end":48514,"line_start":1051,"line_end":1051,"column_start":12,"column_end":17},"name":"Regex","qualname":"::bson::Regex","value":"Regex { pattern, options }","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323}],"decl_id":null,"docs":" Represents a BSON regular expression value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON regular expression value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48415,"byte_end":48462,"line_start":1049,"line_end":1049,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48561,"byte_end":48568,"line_start":1053,"line_end":1053,"column_start":9,"column_end":16},"name":"pattern","qualname":"::bson::Regex::pattern","value":"std::string::String","parent":{"krate":0,"index":1321},"children":[],"decl_id":null,"docs":" The regex pattern to match.\n","sig":null,"attributes":[{"value":"/ The regex pattern to match.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48521,"byte_end":48552,"line_start":1052,"line_end":1052,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48988,"byte_end":48995,"line_start":1062,"line_end":1062,"column_start":9,"column_end":16},"name":"options","qualname":"::bson::Regex::options","value":"std::string::String","parent":{"krate":0,"index":1321},"children":[],"decl_id":null,"docs":" The options for the regex.","sig":null,"attributes":[{"value":"/ The options for the regex.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48583,"byte_end":48613,"line_start":1055,"line_end":1055,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48618,"byte_end":48621,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ Options are identified by characters, which must be stored in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48626,"byte_end":48691,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48696,"byte_end":48780,"line_start":1058,"line_end":1058,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48785,"byte_end":48873,"line_start":1059,"line_end":1059,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48878,"byte_end":48962,"line_start":1060,"line_end":1060,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48967,"byte_end":48979,"line_start":1061,"line_end":1061,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49099,"byte_end":49122,"line_start":1067,"line_end":1067,"column_start":12,"column_end":35},"name":"JavaScriptCodeWithScope","qualname":"::bson::JavaScriptCodeWithScope","value":"JavaScriptCodeWithScope { code, scope }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" Represents a BSON code with scope value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON code with scope value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49008,"byte_end":49052,"line_start":1065,"line_end":1065,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49133,"byte_end":49137,"line_start":1068,"line_end":1068,"column_start":9,"column_end":13},"name":"code","qualname":"::bson::JavaScriptCodeWithScope::code","value":"std::string::String","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49155,"byte_end":49160,"line_start":1069,"line_end":1069,"column_start":9,"column_end":14},"name":"scope","qualname":"::bson::JavaScriptCodeWithScope::scope","value":"document::Document","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49257,"byte_end":49263,"line_start":1074,"line_end":1074,"column_start":12,"column_end":18},"name":"Binary","qualname":"::bson::Binary","value":"Binary { subtype, bytes }","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"decl_id":null,"docs":" Represents a BSON binary value.\n","sig":null,"attributes":[{"value":"/ Represents a BSON binary value.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49175,"byte_end":49210,"line_start":1072,"line_end":1072,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49308,"byte_end":49315,"line_start":1076,"line_end":1076,"column_start":9,"column_end":16},"name":"subtype","qualname":"::bson::Binary::subtype","value":"spec::BinarySubtype","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" The subtype of the bytes.\n","sig":null,"attributes":[{"value":"/ The subtype of the bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49270,"byte_end":49299,"line_start":1075,"line_end":1075,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49367,"byte_end":49372,"line_start":1079,"line_end":1079,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bson::Binary::bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" The binary bytes.\n","sig":null,"attributes":[{"value":"/ The binary bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49337,"byte_end":49358,"line_start":1078,"line_end":1078,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":50000,"byte_end":50009,"line_start":1103,"line_end":1103,"column_start":12,"column_end":21},"name":"DbPointer","qualname":"::bson::DbPointer","value":"DbPointer {  }","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"decl_id":null,"docs":" Represents a DBPointer. (Deprecated)\n","sig":null,"attributes":[{"value":"/ Represents a DBPointer. (Deprecated)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49913,"byte_end":49953,"line_start":1101,"line_end":1101,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compat","qualname":"::compat","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\mod.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":" Backward compatibility\n","sig":null,"attributes":[{"value":"/ Backward compatibility","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\mod.rs","byte_start":50083,"byte_end":50109,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u2f","qualname":"::compat::u2f","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":2645},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"decl_id":null,"docs":" Convert unsigned types to/from `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Convert unsigned types to/from `Bson::Double`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50125,"byte_end":50174,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50286,"byte_end":50291,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"ToF64","qualname":"::compat::u2f::ToF64","value":"ToF64","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" Converts primitive unsigned types to `f64`\n","sig":null,"attributes":[{"value":"/ Converts primitive unsigned types to `f64`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50229,"byte_end":50275,"line_start":5,"line_end":5,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50333,"byte_end":50339,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::compat::u2f::ToF64::to_f64","value":"pub fn to_f64(&Self) -> f64","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" Converts to `f64` value\n","sig":null,"attributes":[{"value":"/ Converts to `f64` value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50298,"byte_end":50325,"line_start":7,"line_end":7,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50735,"byte_end":50744,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"serialize","qualname":"::compat::u2f::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: ToF64,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Serialize unsigned types to `Bson::Double`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50681,"byte_end":50727,"line_start":35,"line_end":35,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50907,"byte_end":50914,"line_start":45,"line_end":45,"column_start":11,"column_end":18},"name":"FromF64","qualname":"::compat::u2f::FromF64","value":"FromF64","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50867,"byte_end":50896,"line_start":44,"line_end":44,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50958,"byte_end":50966,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::compat::u2f::FromF64::from_f64","value":"pub fn from_f64(f64) -> Self","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Converts from `f64` value\n","sig":null,"attributes":[{"value":"/ Converts from `f64` value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":50921,"byte_end":50950,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":51368,"byte_end":51379,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::compat::u2f::deserialize","value":"pub fn deserialize<'de, T, D>(D) -> Result<T, D::Error> where D: Deserializer,\nT: FromF64","parent":null,"children":[],"decl_id":null,"docs":" Deserialize unsigned types to `Bson::Double`\n","sig":null,"attributes":[{"value":"/ Deserialize unsigned types to `Bson::Double`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\u2f.rs","byte_start":51312,"byte_end":51360,"line_start":74,"line_end":74,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":218},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":2731},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":2763},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":468},{"krate":0,"index":470}],"decl_id":null,"docs":" Deserializer\n","sig":null,"attributes":[{"value":"/ Deserializer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":52662,"byte_end":52678,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63620,"byte_end":63627,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::de::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63506,"byte_end":63615,"line_start":11,"line_end":11,"column_start":5,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63821,"byte_end":63834,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"FromUtf8Error","qualname":"::de::error::Error::FromUtf8Error","value":"Error::FromUtf8Error(string::FromUtf8Error)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered\n while decoding a UTF-8 String from the input data.\n","sig":null,"attributes":[{"value":"/ A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63645,"byte_end":63757,"line_start":14,"line_end":14,"column_start":5,"column_end":117}},{"value":"/ while decoding a UTF-8 String from the input data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63762,"byte_end":63816,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63979,"byte_end":64010,"line_start":20,"line_end":20,"column_start":5,"column_end":36},"name":"UnrecognizedDocumentElementType","qualname":"::de::error::Error::UnrecognizedDocumentElementType","value":"Error::UnrecognizedDocumentElementType { key, element_type }","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" While decoding a `Document` from bytes, an unexpected or unsupported element type was\n encountered.\n","sig":null,"attributes":[{"value":"/ While decoding a `Document` from bytes, an unexpected or unsupported element type was","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63864,"byte_end":63953,"line_start":18,"line_end":18,"column_start":5,"column_end":94}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63958,"byte_end":63974,"line_start":19,"line_end":19,"column_start":5,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64271,"byte_end":64282,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::de::error::Error::SyntaxError","value":"Error::SyntaxError { message }","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" There was an error with the syntactical structure of the BSON.\n","sig":null,"attributes":[{"value":"/ There was an error with the syntactical structure of the BSON.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64200,"byte_end":64266,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64365,"byte_end":64376,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"EndOfStream","qualname":"::de::error::Error::EndOfStream","value":"Error::EndOfStream","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" The end of the BSON input was reached too soon.\n","sig":null,"attributes":[{"value":"/ The end of the BSON input was reached too soon.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64309,"byte_end":64360,"line_start":31,"line_end":31,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64444,"byte_end":64460,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"InvalidTimestamp","qualname":"::de::error::Error::InvalidTimestamp","value":"Error::InvalidTimestamp(i64)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" An invalid timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An invalid timestamp was encountered while decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64383,"byte_end":64439,"line_start":34,"line_end":34,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64535,"byte_end":64553,"line_start":38,"line_end":38,"column_start":5,"column_end":23},"name":"AmbiguousTimestamp","qualname":"::de::error::Error::AmbiguousTimestamp","value":"Error::AmbiguousTimestamp(i64)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" An ambiguous timestamp was encountered while decoding.\n","sig":null,"attributes":[{"value":"/ An ambiguous timestamp was encountered while decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64472,"byte_end":64530,"line_start":37,"line_end":37,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64686,"byte_end":64706,"line_start":42,"line_end":42,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::de::error::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64565,"byte_end":64620,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64625,"byte_end":64681,"line_start":41,"line_end":41,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63494,"byte_end":63499,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::de::error::Error","value":"pub enum Error {\n\n    /// A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while deserializing.\n    IoError(io::Error),\n\n    /// A [`std::string::FromUtf8Error`](https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html) encountered\n    /// while decoding a UTF-8 String from the input data.\n    FromUtf8Error(string::FromUtf8Error),\n\n    /// While decoding a `Document` from bytes, an unexpected or unsupported element type was\n    /// encountered.\n    UnrecognizedDocumentElementType {\n        /// The key at which an unexpected/unsupported element type was encountered.\n        key: String,\n        /// The encountered element type.\n        element_type: u8,\n    },\n\n    /// There was an error with the syntactical structure of the BSON.\n    SyntaxError {\n        message: String,\n    },\n\n    /// The end of the BSON input was reached too soon.\n    EndOfStream,\n\n    /// An invalid timestamp was encountered while decoding.\n    InvalidTimestamp(i64),\n\n    /// An ambiguous timestamp was encountered while decoding.\n    AmbiguousTimestamp(i64),\n\n    /// A general error encountered during deserialization.\n    /// See: https://docs.serde.rs/serde/de/trait.Error.html\n    DeserializationError {\n        /// A message describing the error.\n        message: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385}],"decl_id":null,"docs":" Possible errors that can arise during decoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during decoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63398,"byte_end":63449,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":63467,"byte_end":63484,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66418,"byte_end":66424,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Result","qualname":"::de::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66375,"byte_end":66408,"line_start":100,"line_end":100,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":73551,"byte_end":73563,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::serde::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":309}],"decl_id":null,"docs":" Serde Deserializer\n","sig":null,"attributes":[{"value":"/ Serde Deserializer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":73517,"byte_end":73539,"line_start":242,"line_end":242,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":73625,"byte_end":73628,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(Bson) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":62970,"byte_end":62979,"line_start":351,"line_end":351,"column_start":8,"column_end":17},"name":"from_bson","qualname":"::de::from_bson","value":"pub fn from_bson<T>(Bson) -> Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Decode a BSON `Value` into a `T` Deserializable.\n","sig":null,"attributes":[{"value":"/ Decode a BSON `Value` into a `T` Deserializable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":62910,"byte_end":62962,"line_start":350,"line_end":350,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":63178,"byte_end":63191,"line_start":360,"line_end":360,"column_start":8,"column_end":21},"name":"from_document","qualname":"::de::from_document","value":"pub fn from_document<T>(Document) -> Result<T> where T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Decode a BSON `Document` into a `T` Deserializable.\n","sig":null,"attributes":[{"value":"/ Decode a BSON `Document` into a `T` Deserializable.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\mod.rs","byte_start":63115,"byte_end":63170,"line_start":359,"line_end":359,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decimal128","qualname":"::decimal128","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":1551},{"krate":0,"index":1564},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1554},{"krate":0,"index":474},{"krate":0,"index":476}],"decl_id":null,"docs":" [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation\n","sig":null,"attributes":[{"value":"/ [BSON Decimal128](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst) data type representation","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89076,"byte_end":89215,"line_start":1,"line_end":1,"column_start":1,"column_end":140}}]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89719,"byte_end":89729,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"Decimal128","qualname":"::decimal128::Decimal128","value":"Decimal128 {  }","parent":null,"children":[{"krate":0,"index":1552}],"decl_id":null,"docs":" Decimal128 type.","sig":null,"attributes":[{"value":"/ Decimal128 type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89282,"byte_end":89302,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89303,"byte_end":89306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, this type does not have any functionality and can only be serialized and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89307,"byte_end":89394,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/ deserialized from existing documents that contain BSON decimal128s.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89395,"byte_end":89466,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89467,"byte_end":89470,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Experimental functionality can be enabled through the usage of the `\"decimal128\"`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89471,"byte_end":89556,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ feature flag. Note that the API and behavior of such functionality are unstable and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89557,"byte_end":89644,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/ subject to change.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":89645,"byte_end":89667,"line_start":14,"line_end":14,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"document","qualname":"::document","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":2773},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":2791},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":2797},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":1566},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":1574},{"krate":0,"index":1580},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":657}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"/ A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":97573,"byte_end":97655,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98517,"byte_end":98527,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"NotPresent","qualname":"::document::ValueAccessError::NotPresent","value":"ValueAccessError::NotPresent","parent":{"krate":0,"index":1566},"children":[],"decl_id":null,"docs":" Cannot find the expected field with the specified key\n","sig":null,"attributes":[{"value":"/ Cannot find the expected field with the specified key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98455,"byte_end":98512,"line_start":33,"line_end":33,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98615,"byte_end":98629,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"UnexpectedType","qualname":"::document::ValueAccessError::UnexpectedType","value":"ValueAccessError::UnexpectedType","parent":{"krate":0,"index":1566},"children":[],"decl_id":null,"docs":" Found a Bson value with the specified key, but not with the expected type\n","sig":null,"attributes":[{"value":"/ Found a Bson value with the specified key, but not with the expected type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98533,"byte_end":98610,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98432,"byte_end":98448,"line_start":32,"line_end":32,"column_start":10,"column_end":26},"name":"ValueAccessError","qualname":"::document::ValueAccessError","value":"pub enum ValueAccessError {\n\n    /// Cannot find the expected field with the specified key\n    NotPresent,\n\n    /// Found a Bson value with the specified key, but not with the expected type\n    UnexpectedType,\n}","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1569}],"decl_id":null,"docs":" Error to indicate that either a value was empty or it contained an unexpected\n type, for use with the direct getters.\n","sig":null,"attributes":[{"value":"/ Error to indicate that either a value was empty or it contained an unexpected","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98259,"byte_end":98340,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ type, for use with the direct getters.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98341,"byte_end":98383,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98405,"byte_end":98422,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98678,"byte_end":98695,"line_start":40,"line_end":40,"column_start":10,"column_end":27},"name":"ValueAccessResult","qualname":"::document::ValueAccessResult","value":"Result<T, ValueAccessError>","parent":null,"children":[],"decl_id":null,"docs":" Result of accessing Bson value\n","sig":null,"attributes":[{"value":"/ Result of accessing Bson value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98634,"byte_end":98668,"line_start":39,"line_end":39,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99581,"byte_end":99589,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"Document","qualname":"::document::Document","value":"Document {  }","parent":null,"children":[{"krate":0,"index":1575}],"decl_id":null,"docs":" A BSON document represented as an associative HashMap with insertion ordering.\n","sig":null,"attributes":[{"value":"/ A BSON document represented as an associative HashMap with insertion ordering.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99459,"byte_end":99541,"line_start":64,"line_end":64,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100369,"byte_end":100389,"line_start":103,"line_end":103,"column_start":12,"column_end":32},"name":"DocumentIntoIterator","qualname":"::document::DocumentIntoIterator","value":"DocumentIntoIterator {  }","parent":null,"children":[{"krate":0,"index":537}],"decl_id":null,"docs":" An iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An iterator over Document entries.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100319,"byte_end":100357,"line_start":102,"line_end":102,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100492,"byte_end":100508,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"DocumentIterator","qualname":"::document::DocumentIterator","value":"DocumentIterator {  }","parent":null,"children":[{"krate":0,"index":540}],"decl_id":null,"docs":" An owning iterator over Document entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over Document entries.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100435,"byte_end":100480,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100709,"byte_end":100713,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"Keys","qualname":"::document::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":546}],"decl_id":null,"docs":" An iterator over an Document's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's keys.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100657,"byte_end":100697,"line_start":114,"line_end":114,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100817,"byte_end":100823,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"Values","qualname":"::document::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":549}],"decl_id":null,"docs":" An iterator over an Document's values.\n","sig":null,"attributes":[{"value":"/ An iterator over an Document's values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100763,"byte_end":100805,"line_start":119,"line_end":119,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102287,"byte_end":102290,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<Document>::new","value":"pub fn new() -> Document","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty Document.\n","sig":null,"attributes":[{"value":"/ Creates a new empty Document.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102242,"byte_end":102275,"line_start":187,"line_end":187,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102449,"byte_end":102453,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"iter","qualname":"<Document>::iter","value":"pub fn iter(&Self) -> DocumentIterator","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102388,"byte_end":102437,"line_start":194,"line_end":194,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102576,"byte_end":102581,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"clear","qualname":"<Document>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the document, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the document, removing all values.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102519,"byte_end":102564,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102707,"byte_end":102710,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"get","qualname":"<Document>::get","value":"pub fn get(&Self, &str) -> Option<&Bson>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the Bson corresponding to the key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the Bson corresponding to the key.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102634,"byte_end":102695,"line_start":204,"line_end":204,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102864,"byte_end":102871,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Document>::get_mut","value":"pub fn get_mut(&mut Self, &str) -> Option<&mut Bson>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the Bson corresponding to the key\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the Bson corresponding to the key","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102787,"byte_end":102852,"line_start":209,"line_end":209,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":103062,"byte_end":103069,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_f64","qualname":"<Document>::get_f64","value":"pub fn get_f64(&Self, &str) -> ValueAccessResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a floating point value for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102960,"byte_end":103024,"line_start":214,"line_end":214,"column_start":5,"column_end":69}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":103029,"byte_end":103050,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":103454,"byte_end":103465,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"get_f64_mut","qualname":"<Document>::get_f64_mut","value":"pub fn get_f64_mut(&mut Self, &str) -> ValueAccessResult<&mut f64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a floating point value for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a floating point value for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":103329,"byte_end":103416,"line_start":224,"line_end":224,"column_start":5,"column_end":92}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":103421,"byte_end":103442,"line_start":225,"line_end":225,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":104666,"byte_end":104673,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Document>::get_str","value":"pub fn get_str(&Self, &str) -> ValueAccessResult<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a string slice this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":104584,"byte_end":104654,"line_start":254,"line_end":254,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105028,"byte_end":105039,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"get_str_mut","qualname":"<Document>::get_str_mut","value":"pub fn get_str_mut(&mut Self, &str) -> ValueAccessResult<&mut str>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable string slice this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable string slice this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":104938,"byte_end":105016,"line_start":263,"line_end":263,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105427,"byte_end":105436,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"get_array","qualname":"<Document>::get_array","value":"pub fn get_array(&Self, &str) -> ValueAccessResult<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an array for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105324,"byte_end":105389,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105394,"byte_end":105415,"line_start":273,"line_end":273,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105813,"byte_end":105826,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"get_array_mut","qualname":"<Document>::get_array_mut","value":"pub fn get_array_mut(&mut Self, &str) -> ValueAccessResult<&mut Array>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an array for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an array for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105702,"byte_end":105775,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":105780,"byte_end":105801,"line_start":283,"line_end":283,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106217,"byte_end":106229,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"get_document","qualname":"<Document>::get_document","value":"pub fn get_document(&Self, &str) -> ValueAccessResult<&Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a document for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106112,"byte_end":106179,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106184,"byte_end":106205,"line_start":293,"line_end":293,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106614,"byte_end":106630,"line_start":304,"line_end":304,"column_start":12,"column_end":28},"name":"get_document_mut","qualname":"<Document>::get_document_mut","value":"pub fn get_document_mut(&mut Self, &str) -> ValueAccessResult<&mut Document>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a document for this key if it exists and has\n the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a document for this key if it exists and has","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106501,"byte_end":106576,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106581,"byte_end":106602,"line_start":303,"line_end":303,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107006,"byte_end":107014,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Document>::get_bool","value":"pub fn get_bool(&Self, &str) -> ValueAccessResult<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a bool value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":106922,"byte_end":106994,"line_start":312,"line_end":312,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107383,"byte_end":107395,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"get_bool_mut","qualname":"<Document>::get_bool_mut","value":"pub fn get_bool_mut(&mut Self, &str) -> ValueAccessResult<&mut bool>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a bool value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a bool value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107276,"byte_end":107371,"line_start":321,"line_end":321,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107738,"byte_end":107745,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Document>::is_null","value":"pub fn is_null(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns wether this key has a null value\n","sig":null,"attributes":[{"value":"/ Returns wether this key has a null value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107682,"byte_end":107726,"line_start":330,"line_end":330,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107912,"byte_end":107919,"line_start":336,"line_end":336,"column_start":12,"column_end":19},"name":"get_i32","qualname":"<Document>::get_i32","value":"pub fn get_i32(&Self, &str) -> ValueAccessResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Get an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i32 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":107828,"byte_end":107900,"line_start":335,"line_end":335,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":108285,"byte_end":108296,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"get_i32_mut","qualname":"<Document>::get_i32_mut","value":"pub fn get_i32_mut(&mut Self, &str) -> ValueAccessResult<&mut i32>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i32 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i32 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":108178,"byte_end":108273,"line_start":344,"line_end":344,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":108664,"byte_end":108671,"line_start":354,"line_end":354,"column_start":12,"column_end":19},"name":"get_i64","qualname":"<Document>::get_i64","value":"pub fn get_i64(&Self, &str) -> ValueAccessResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" Get an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get an i64 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":108580,"byte_end":108652,"line_start":353,"line_end":353,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109037,"byte_end":109048,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"get_i64_mut","qualname":"<Document>::get_i64_mut","value":"pub fn get_i64_mut(&mut Self, &str) -> ValueAccessResult<&mut i64>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an i64 value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an i64 value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":108930,"byte_end":109025,"line_start":362,"line_end":362,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109422,"byte_end":109435,"line_start":372,"line_end":372,"column_start":12,"column_end":25},"name":"get_timestamp","qualname":"<Document>::get_timestamp","value":"pub fn get_timestamp(&Self, &str) -> ValueAccessResult<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a time stamp value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a time stamp value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109332,"byte_end":109410,"line_start":371,"line_end":371,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109841,"byte_end":109858,"line_start":382,"line_end":382,"column_start":12,"column_end":29},"name":"get_timestamp_mut","qualname":"<Document>::get_timestamp_mut","value":"pub fn get_timestamp_mut(&mut Self, &str) -> ValueAccessResult<&mut Timestamp>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a time stamp value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a time stamp value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109720,"byte_end":109815,"line_start":380,"line_end":380,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":109820,"byte_end":109829,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110285,"byte_end":110303,"line_start":392,"line_end":392,"column_start":12,"column_end":30},"name":"get_binary_generic","qualname":"<Document>::get_binary_generic","value":"pub fn get_binary_generic(&Self, &str) -> ValueAccessResult<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a generic binary value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110168,"byte_end":110259,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110264,"byte_end":110273,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110789,"byte_end":110811,"line_start":405,"line_end":405,"column_start":12,"column_end":34},"name":"get_binary_generic_mut","qualname":"<Document>::get_binary_generic_mut","value":"pub fn get_binary_generic_mut(&mut Self, &str)\n-> ValueAccessResult<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference generic binary value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference generic binary value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110669,"byte_end":110763,"line_start":403,"line_end":403,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":110768,"byte_end":110777,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":111302,"byte_end":111315,"line_start":417,"line_end":417,"column_start":12,"column_end":25},"name":"get_object_id","qualname":"<Document>::get_object_id","value":"pub fn get_object_id(&Self, &str) -> ValueAccessResult<&ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an object id value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to an object id value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":111197,"byte_end":111290,"line_start":416,"line_end":416,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":111708,"byte_end":111725,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"get_object_id_mut","qualname":"<Document>::get_object_id_mut","value":"pub fn get_object_id_mut(&mut Self, &str) -> ValueAccessResult<&mut ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an object id value for this key if it exists and has the correct\n type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an object id value for this key if it exists and has the correct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":111587,"byte_end":111682,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":111687,"byte_end":111696,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112124,"byte_end":112136,"line_start":436,"line_end":436,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Document>::get_datetime","value":"pub fn get_datetime(&Self, &str) -> ValueAccessResult<&DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a UTC datetime value for this key if it exists and has the correct type.\n","sig":null,"attributes":[{"value":"/ Get a reference to a UTC datetime value for this key if it exists and has the correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112017,"byte_end":112112,"line_start":435,"line_end":435,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112536,"byte_end":112552,"line_start":446,"line_end":446,"column_start":12,"column_end":28},"name":"get_datetime_mut","qualname":"<Document>::get_datetime_mut","value":"pub fn get_datetime_mut(&mut Self, &str)\n-> ValueAccessResult<&mut DateTime<Utc>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a UTC datetime value for this key if it exists and has the\n correct type.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a UTC datetime value for this key if it exists and has the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112413,"byte_end":112502,"line_start":444,"line_end":444,"column_start":5,"column_end":94}},{"value":"/ correct type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112507,"byte_end":112524,"line_start":445,"line_end":445,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112928,"byte_end":112940,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Document>::contains_key","value":"pub fn contains_key(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":112849,"byte_end":112916,"line_start":454,"line_end":454,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113079,"byte_end":113083,"line_start":460,"line_end":460,"column_start":12,"column_end":16},"name":"keys","qualname":"<Document>::keys","value":"pub fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all keys in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all keys in the document.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113017,"byte_end":113067,"line_start":459,"line_end":459,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113395,"byte_end":113401,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"values","qualname":"<Document>::values","value":"pub fn values<'a>(&'a Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets a collection of all values in the document.\n","sig":null,"attributes":[{"value":"/ Gets a collection of all values in the document.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113331,"byte_end":113383,"line_start":471,"line_end":471,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113718,"byte_end":113721,"line_start":484,"line_end":484,"column_start":12,"column_end":15},"name":"len","qualname":"<Document>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the document.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the document.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113655,"byte_end":113706,"line_start":483,"line_end":483,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113841,"byte_end":113849,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Document>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the document contains no elements\n","sig":null,"attributes":[{"value":"/ Returns true if the document contains no elements","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113776,"byte_end":113829,"line_start":488,"line_end":488,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114082,"byte_end":114088,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"insert","qualname":"<Document>::insert","value":"pub fn insert<KT: Into<String>, BT: Into<Bson>>(&mut Self, KT, BT)\n-> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the OccupiedEntry's key,\n and returns the entry's old value. Accepts any type that\n can be converted into Bson.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the OccupiedEntry's key,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113908,"byte_end":113969,"line_start":493,"line_end":493,"column_start":5,"column_end":66}},{"value":"/ and returns the entry's old value. Accepts any type that","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":113974,"byte_end":114034,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ can be converted into Bson.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114039,"byte_end":114070,"line_start":495,"line_end":495,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114312,"byte_end":114318,"line_start":501,"line_end":501,"column_start":12,"column_end":18},"name":"remove","qualname":"<Document>::remove","value":"pub fn remove(&mut Self, &str) -> Option<Bson>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the document, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the document, and returns it.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114231,"byte_end":114300,"line_start":500,"line_end":500,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114408,"byte_end":114413,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"entry","qualname":"<Document>::entry","value":"pub fn entry(&mut Self, String) -> Entry","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114596,"byte_end":114605,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<Document>::to_writer","value":"pub fn to_writer<W: Write + ?Sized>(&Self, &mut W) -> crate::ser::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize the `Document` into a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize the `Document` into a byte stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":114524,"byte_end":114584,"line_start":511,"line_end":511,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116144,"byte_end":116155,"line_start":563,"line_end":563,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Document>::from_reader","value":"pub fn from_reader<R: Read + ?Sized>(&mut R) -> crate::de::Result<Document>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to deserialize a `Document` from a byte stream.\n","sig":null,"attributes":[{"value":"/ Attempts to deserialize a `Document` from a byte stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116072,"byte_end":116132,"line_start":562,"line_end":562,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116669,"byte_end":116691,"line_start":573,"line_end":573,"column_start":12,"column_end":34},"name":"from_reader_utf8_lossy","qualname":"<Document>::from_reader_utf8_lossy","value":"pub fn from_reader_utf8_lossy<R: Read + ?Sized>(&mut R)\n-> crate::de::Result<Document>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to deserialize a `Document` that may contain invalid UTF-8 strings from a byte\n stream.","sig":null,"attributes":[{"value":"/ Attempt to deserialize a `Document` that may contain invalid UTF-8 strings from a byte","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116270,"byte_end":116360,"line_start":567,"line_end":567,"column_start":5,"column_end":95}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116365,"byte_end":116376,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116381,"byte_end":116384,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is mainly useful when reading raw BSON returned from a MongoDB server, which","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116389,"byte_end":116474,"line_start":570,"line_end":570,"column_start":5,"column_end":90}},{"value":"/ in rare cases can contain invalidly truncated strings (https://jira.mongodb.org/browse/SERVER-24007).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116479,"byte_end":116584,"line_start":571,"line_end":571,"column_start":5,"column_end":110}},{"value":"/ For most use cases, `Document::from_reader` can be used instead.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116589,"byte_end":116657,"line_start":572,"line_end":572,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116814,"byte_end":116819,"line_start":578,"line_end":578,"column_start":12,"column_end":17},"name":"Entry","qualname":"::document::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":636}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116914,"byte_end":116917,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116978,"byte_end":116987,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Bson) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117083,"byte_end":117097,"line_start":591,"line_end":591,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> Bson>(Self, F) -> &'a mut Bson","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117375,"byte_end":117390,"line_start":602,"line_end":602,"column_start":12,"column_end":27},"name":"DocumentVisitor","qualname":"::document::DocumentVisitor","value":"DocumentVisitor {  }","parent":null,"children":[{"krate":0,"index":646}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117507,"byte_end":117510,"line_start":608,"line_end":608,"column_start":12,"column_end":15},"name":"new","qualname":"<DocumentVisitor>::new","value":"pub fn new() -> DocumentVisitor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: new_without_default)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117458,"byte_end":117495,"line_start":607,"line_end":607,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extjson","qualname":"::extjson","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":699}],"decl_id":null,"docs":" Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"/ Deserialization and serialization of [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118583,"byte_end":118716,"line_start":1,"line_end":1,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118717,"byte_end":118720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Overview of Extended JSON","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118721,"byte_end":118753,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118754,"byte_end":118757,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ MongoDB Extended JSON (abbreviated extJSON) is format of JSON that allows for the encoding of","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118758,"byte_end":118855,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ BSON type information. Normal JSON cannot unambiguously represent all BSON types losslessly, so","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118856,"byte_end":118955,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ an extension was designed to include conventions for representing those types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":118956,"byte_end":119038,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119039,"byte_end":119042,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For example, a BSON binary is represented by the following format:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119043,"byte_end":119113,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119114,"byte_end":119125,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119126,"byte_end":119131,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/    \"$binary\": {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119132,"byte_end":119151,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/        \"base64\": <base64 encoded payload as a string>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119152,"byte_end":119210,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/        \"subType\": <subtype as a one or two character hex string>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119211,"byte_end":119280,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/    }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119281,"byte_end":119289,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119290,"byte_end":119295,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119296,"byte_end":119303,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ For more information on extJSON and the complete list of translations, see the [official MongoDB documentation](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119304,"byte_end":119486,"line_start":18,"line_end":18,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119487,"byte_end":119490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ All MongoDB drivers and BSON libraries interpret and produce extJSON, so it can serve as a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119491,"byte_end":119585,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ useful tool for communicating between applications where raw BSON bytes cannot be used (e.g. via","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119586,"byte_end":119686,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ JSON REST APIs). It's also useful for representing BSON data as a string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119687,"byte_end":119764,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119765,"byte_end":119768,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ### Canonical and Relaxed Modes","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119769,"byte_end":119804,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119805,"byte_end":119808,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ There are two modes of extJSON: \"Canonical\" and \"Relaxed\". They are the same except for the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119809,"byte_end":119904,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/ following differences:","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119905,"byte_end":119931,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/   - In relaxed mode, all BSON numbers are represented by the JSON number type, rather than the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":119932,"byte_end":120030,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/     object","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120031,"byte_end":120045,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ notation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120046,"byte_end":120059,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/   - In relaxed mode, the string in the datetime object notation is ISO-8601 formatted (if the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120060,"byte_end":120157,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/     date is after 1970).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120158,"byte_end":120186,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120187,"byte_end":120190,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120191,"byte_end":120199,"line_start":34,"line_end":34,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120200,"byte_end":120211,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use bson::bson;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120212,"byte_end":120233,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ let doc = bson!({ \"x\": 5, \"d\": chrono::Utc::now() });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120234,"byte_end":120291,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120292,"byte_end":120295,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ println!(\"relaxed: {}\", doc.clone().into_relaxed_extjson());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120296,"byte_end":120360,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ // relaxed: \"{\"x\":5,\"d\":{\"$date\":\"2020-06-01T22:19:13.075Z\"}}\"","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120361,"byte_end":120427,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120428,"byte_end":120431,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ println!(\"canonical: {}\", doc.into_canonical_extjson());","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120432,"byte_end":120492,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ // canonical: {\"x\":{\"$numberInt\":\"5\"},\"d\":{\"$date\":{\"$numberLong\":\"1591050020711\"}}}","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120493,"byte_end":120581,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120582,"byte_end":120589,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120590,"byte_end":120593,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Canonical mode is useful when BSON values need to be round tripped without losing any type","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120594,"byte_end":120688,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ information. Relaxed mode is more useful when debugging or logging BSON data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120689,"byte_end":120770,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120771,"byte_end":120774,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Deserializing Extended JSON","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120775,"byte_end":120809,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120810,"byte_end":120813,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be deserialized using [`Bson`](../enum.Bson.html)'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120814,"byte_end":120887,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120888,"byte_end":120983,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":120984,"byte_end":121072,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121073,"byte_end":121076,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121077,"byte_end":121085,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121086,"byte_end":121097,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # use bson::Bson;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121098,"byte_end":121119,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121120,"byte_end":121147,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ # use std::convert::{TryFrom, TryInto};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121148,"byte_end":121191,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/ let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121192,"byte_end":121288,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121289,"byte_end":121362,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121363,"byte_end":121366,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121367,"byte_end":121442,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121443,"byte_end":121522,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121523,"byte_end":121526,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121527,"byte_end":121582,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/ Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121583,"byte_end":121655,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121656,"byte_end":121663,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121664,"byte_end":121667,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Serializing to Extended JSON","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121668,"byte_end":121703,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121704,"byte_end":121707,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be created via [`Bson`](../enum.Bson.html)'s `Into<serde_json::Value>`","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121708,"byte_end":121800,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"/ implementation (which will create relaxed extJSON),","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121801,"byte_end":121856,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ [`Bson::into_relaxed_extjson`](../enum.Bson.html#method.into_relaxed_extjson), and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121857,"byte_end":121943,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/ [`Bson::into_canonical_extjson`](../enum.Bson.html#method.into_canonical_extjson).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":121944,"byte_end":122030,"line_start":75,"line_end":75,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122031,"byte_end":122034,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122035,"byte_end":122043,"line_start":77,"line_end":77,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122044,"byte_end":122055,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ # use bson::{bson, oid};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122056,"byte_end":122084,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/ let doc = bson!({ \"x\": 5i32, \"_id\": oid::ObjectId::new() });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122085,"byte_end":122149,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122150,"byte_end":122153,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let relaxed_extjson: serde_json::Value = doc.clone().into();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122154,"byte_end":122218,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"/ println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122219,"byte_end":122301,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122302,"byte_end":122305,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let relaxed_extjson = doc.clone().into_relaxed_extjson();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122306,"byte_end":122367,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ println!(\"{}\", relaxed_extjson); // { \"x\": 5, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122368,"byte_end":122450,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122451,"byte_end":122454,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let canonical_extjson = doc.into_canonical_extjson();","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122455,"byte_end":122512,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/ println!(\"{}\", canonical_extjson); // { \"x\": { \"$numberInt\": \"5\" }, \"_id\": { \"$oid\": <hexstring> } }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122513,"byte_end":122617,"line_start":89,"line_end":89,"column_start":1,"column_end":105}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122618,"byte_end":122625,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::extjson::de","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":1582},{"krate":0,"index":1588},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":695}],"decl_id":null,"docs":" Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","sig":null,"attributes":[{"value":"/ Deserializing [MongoDB Extended JSON v2](https://docs.mongodb.com/manual/reference/mongodb-extended-json/)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122652,"byte_end":122762,"line_start":1,"line_end":1,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122763,"byte_end":122766,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122767,"byte_end":122779,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122780,"byte_end":122783,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Extended JSON can be deserialized using [`Bson`](../../enum.Bson.html)'s","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122784,"byte_end":122860,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ `TryFrom<serde_json::Value>` implementation. This implementation accepts both canonical and","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122861,"byte_end":122956,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ relaxed extJSON, and the two modes can even be mixed within a single representation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":122957,"byte_end":123045,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123046,"byte_end":123049,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ e.g.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123050,"byte_end":123058,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123059,"byte_end":123070,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ # use bson::Bson;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123071,"byte_end":123092,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123093,"byte_end":123120,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ # use std::convert::{TryFrom, TryInto};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123121,"byte_end":123164,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ let json_doc = json!({ \"x\": 5i32, \"y\": { \"$numberInt\": \"5\" }, \"z\": { \"subdoc\": \"hello\" } });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123165,"byte_end":123261,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ let bson: Bson = json_doc.try_into().unwrap(); // Bson::Document(...)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123262,"byte_end":123335,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123336,"byte_end":123339,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let json_date = json!({ \"$date\": { \"$numberLong\": \"1590972160292\" } });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123340,"byte_end":123415,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ let bson_date: Bson = json_date.try_into().unwrap(); // Bson::DateTime(...)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123416,"byte_end":123495,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123496,"byte_end":123499,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let invalid_ext_json = json!({ \"$numberLong\": 5 });","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123500,"byte_end":123555,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ Bson::try_from(invalid_ext_json).expect_err(\"5 should be a string\");","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123556,"byte_end":123628,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123629,"byte_end":123636,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124059,"byte_end":124074,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"InvalidObjectId","qualname":"::extjson::de::Error::InvalidObjectId","value":"Error::InvalidObjectId(oid::Error)","parent":{"krate":0,"index":1582},"children":[],"decl_id":null,"docs":" Errors that can occur during OID construction and generation from the input data.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation from the input data.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123969,"byte_end":124054,"line_start":34,"line_end":34,"column_start":5,"column_end":90}}]},{"kind":"StructVariant","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124214,"byte_end":124234,"line_start":39,"line_end":39,"column_start":5,"column_end":25},"name":"DeserializationError","qualname":"::extjson::de::Error::DeserializationError","value":"Error::DeserializationError { message }","parent":{"krate":0,"index":1582},"children":[],"decl_id":null,"docs":" A general error encountered during deserialization.\n See: https://docs.serde.rs/serde/de/trait.Error.html\n","sig":null,"attributes":[{"value":"/ A general error encountered during deserialization.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124093,"byte_end":124148,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ See: https://docs.serde.rs/serde/de/trait.Error.html","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124153,"byte_end":124209,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123957,"byte_end":123962,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::extjson::de::Error","value":"pub enum Error {\n\n    /// Errors that can occur during OID construction and generation from the input data.\n    InvalidObjectId(oid::Error),\n\n    /// A general error encountered during deserialization.\n    /// See: https://docs.serde.rs/serde/de/trait.Error.html\n    DeserializationError {\n        message: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1586}],"decl_id":null,"docs":" Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).\n","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123788,"byte_end":123805,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ Error cases that can occur during deserialization from [extended JSON](https://docs.mongodb.com/manual/reference/mongodb-extended-json/).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":123806,"byte_end":123947,"line_start":32,"line_end":32,"column_start":1,"column_end":142}}]},{"kind":"Type","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":125096,"byte_end":125102,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"name":"Result","qualname":"::extjson::de::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oid","qualname":"::oid","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":2883},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2415},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":2417},{"krate":0,"index":2439},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2429},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2423},{"krate":0,"index":2420},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":804},{"krate":0,"index":806}],"decl_id":null,"docs":" ObjectId\n","sig":null,"attributes":[{"value":"/ ObjectId","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":140236,"byte_end":140248,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"StructVariant","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141099,"byte_end":141112,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"ArgumentError","qualname":"::oid::Error::ArgumentError","value":"Error::ArgumentError { message }","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":" An invalid argument was passed in.\n","sig":null,"attributes":[{"value":"/ An invalid argument was passed in.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141056,"byte_end":141094,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141186,"byte_end":141198,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"FromHexError","qualname":"::oid::Error::FromHexError","value":"Error::FromHexError(FromHexError)","parent":{"krate":0,"index":2409},"children":[],"decl_id":null,"docs":" An error occured parsing a hex string.\n","sig":null,"attributes":[{"value":"/ An error occured parsing a hex string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141139,"byte_end":141181,"line_start":40,"line_end":40,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141044,"byte_end":141049,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::oid::Error","value":"pub enum Error {\n\n    /// An invalid argument was passed in.\n    ArgumentError {\n        message: String,\n    },\n\n    /// An error occured parsing a hex string.\n    FromHexError(FromHexError),\n}","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2412}],"decl_id":null,"docs":" Errors that can occur during OID construction and generation.\n","sig":null,"attributes":[{"value":"/ Errors that can occur during OID construction and generation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":140934,"byte_end":140999,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141017,"byte_end":141034,"line_start":35,"line_end":35,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141383,"byte_end":141389,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Result","qualname":"::oid::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for Result<T, oid::Error>.\n","sig":null,"attributes":[{"value":"/ Alias for Result<T, oid::Error>.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141337,"byte_end":141373,"line_start":50,"line_end":50,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142041,"byte_end":142049,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"ObjectId","qualname":"::oid::ObjectId","value":"ObjectId {  }","parent":null,"children":[{"krate":0,"index":2418}],"decl_id":null,"docs":" A wrapper around raw 12-byte ObjectId representations.\n","sig":null,"attributes":[{"value":"/ A wrapper around raw 12-byte ObjectId representations.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141916,"byte_end":141974,"line_start":71,"line_end":71,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142502,"byte_end":142505,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<ObjectId>::new","value":"pub fn new() -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Generates a new ObjectID, represented in bytes.\n See the [docs](http://docs.mongodb.org/manual/reference/object-id/)\n for more information.\n","sig":null,"attributes":[{"value":"/ Generates a new ObjectID, represented in bytes.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142333,"byte_end":142384,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/ See the [docs](http://docs.mongodb.org/manual/reference/object-id/)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142389,"byte_end":142460,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ for more information.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142465,"byte_end":142490,"line_start":94,"line_end":94,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143223,"byte_end":143233,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"with_bytes","qualname":"<ObjectId>::with_bytes","value":"pub fn with_bytes([u8; ]) -> ObjectId","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ObjectId wrapper around the raw byte representation.\n","sig":null,"attributes":[{"value":"/ Constructs a new ObjectId wrapper around the raw byte representation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143138,"byte_end":143211,"line_start":111,"line_end":111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143388,"byte_end":143399,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_string","qualname":"<ObjectId>::with_string","value":"pub fn with_string(&str) -> Result<ObjectId>","parent":null,"children":[],"decl_id":null,"docs":" Creates an ObjectID using a 12-byte (24-char) hexadecimal string.\n","sig":null,"attributes":[{"value":"/ Creates an ObjectID using a 12-byte (24-char) hexadecimal string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143307,"byte_end":143376,"line_start":116,"line_end":116,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143937,"byte_end":143946,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<ObjectId>::timestamp","value":"pub fn timestamp(&Self) -> chrono::DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the timestamp (chrono::DateTime) from an ObjectId.\n","sig":null,"attributes":[{"value":"/ Retrieves the timestamp (chrono::DateTime) from an ObjectId.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":143861,"byte_end":143925,"line_start":130,"line_end":130,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":144407,"byte_end":144412,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ObjectId>::bytes","value":"pub fn bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw byte representation of an ObjectId.\n","sig":null,"attributes":[{"value":"/ Returns the raw byte representation of an ObjectId.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":144340,"byte_end":144395,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":144520,"byte_end":144526,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<ObjectId>::to_hex","value":"pub fn to_hex(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert the objectId to hex representation.\n","sig":null,"attributes":[{"value":"/ Convert the objectId to hex representation.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":144461,"byte_end":144508,"line_start":146,"line_end":146,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":828},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":2955},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":2977},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Serializer\n","sig":null,"attributes":[{"value":"/ Serializer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":150796,"byte_end":150810,"line_start":22,"line_end":22,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156438,"byte_end":156445,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"IoError","qualname":"::ser::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.\n","sig":null,"attributes":[{"value":"/ A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156326,"byte_end":156433,"line_start":11,"line_end":11,"column_start":5,"column_end":112}}]},{"kind":"StructVariant","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156519,"byte_end":156536,"line_start":15,"line_end":15,"column_start":5,"column_end":22},"name":"InvalidMapKeyType","qualname":"::ser::error::Error::InvalidMapKeyType","value":"Error::InvalidMapKeyType { key }","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A key could not be serialized to a BSON string.\n","sig":null,"attributes":[{"value":"/ A key could not be serialized to a BSON string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156463,"byte_end":156514,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156770,"byte_end":156788,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"SerializationError","qualname":"::ser::error::Error::SerializationError","value":"Error::SerializationError { message }","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" A general error that ocurred during serialization.\n See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom\n","sig":null,"attributes":[{"value":"/ A general error that ocurred during serialization.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156625,"byte_end":156679,"line_start":20,"line_end":20,"column_start":5,"column_end":59}},{"value":"/ See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156684,"byte_end":156765,"line_start":21,"line_end":21,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157160,"byte_end":157183,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"name":"UnsupportedUnsignedType","qualname":"::ser::error::Error::UnsupportedUnsignedType","value":"Error::UnsupportedUnsignedType","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Returned when serialization of an unsigned integer was attempted. BSON only supports\n 32-bit and 64-bit signed integers.","sig":null,"attributes":[{"value":"cfg(not(feature = \"u2i\"))","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156872,"byte_end":156900,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ Returned when serialization of an unsigned integer was attempted. BSON only supports","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156905,"byte_end":156993,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ 32-bit and 64-bit signed integers.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156998,"byte_end":157036,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157041,"byte_end":157044,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ To allow serialization of unsigned integers as signed integers, enable the \"u2i\" feature","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157049,"byte_end":157141,"line_start":31,"line_end":31,"column_start":5,"column_end":97}},{"value":"/ flag.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157146,"byte_end":157155,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156314,"byte_end":156319,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::error::Error","value":"pub enum Error {\n\n    /// A [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) encountered while serializing.\n    IoError(io::Error),\n\n    /// A key could not be serialized to a BSON string.\n    InvalidMapKeyType {\n        /// The value that could not be used as a key.\n        key: Bson,\n    },\n\n    /// A general error that ocurred during serialization.\n    /// See: https://docs.rs/serde/1.0.110/serde/ser/trait.Error.html#tymethod.custom\n    SerializationError {\n        /// A message describing the error.\n        message: String,\n    },\n\n    #[cfg(not(feature = \"u2i\"))]\n    /// Returned when serialization of an unsigned integer was attempted. BSON only supports\n    /// 32-bit and 64-bit signed integers.\n    ///\n    /// To allow serialization of unsigned integers as signed integers, enable the \"u2i\" feature\n    /// flag.\n    UnsupportedUnsignedType,\n}","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467}],"decl_id":null,"docs":" Possible errors that can arise during encoding.\n","sig":null,"attributes":[{"value":"/ Possible errors that can arise during encoding.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156218,"byte_end":156269,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":156287,"byte_end":156304,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158695,"byte_end":158701,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"Result","qualname":"::ser::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Result<T, Error>`.\n","sig":null,"attributes":[{"value":"/ Alias for `Result<T, Error>`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158652,"byte_end":158685,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":160928,"byte_end":160938,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::serde::Serializer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Serde Serializer\n","sig":null,"attributes":[{"value":"/ Serde Serializer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":160896,"byte_end":160916,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":161050,"byte_end":161053,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new() -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Serializer`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Serializer`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":160963,"byte_end":160996,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":161001,"byte_end":161038,"line_start":91,"line_end":91,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":167603,"byte_end":167618,"line_start":352,"line_end":352,"column_start":12,"column_end":27},"name":"ArraySerializer","qualname":"::ser::serde::ArraySerializer","value":"ArraySerializer {  }","parent":null,"children":[{"krate":0,"index":910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168007,"byte_end":168022,"line_start":371,"line_end":371,"column_start":12,"column_end":27},"name":"TupleSerializer","qualname":"::ser::serde::TupleSerializer","value":"TupleSerializer {  }","parent":null,"children":[{"krate":0,"index":918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168413,"byte_end":168434,"line_start":390,"line_end":390,"column_start":12,"column_end":33},"name":"TupleStructSerializer","qualname":"::ser::serde::TupleStructSerializer","value":"TupleStructSerializer {  }","parent":null,"children":[{"krate":0,"index":926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168835,"byte_end":168857,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"TupleVariantSerializer","qualname":"::ser::serde::TupleVariantSerializer","value":"TupleVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":169383,"byte_end":169396,"line_start":431,"line_end":431,"column_start":12,"column_end":25},"name":"MapSerializer","qualname":"::ser::serde::MapSerializer","value":"MapSerializer {  }","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170185,"byte_end":170201,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"StructSerializer","qualname":"::ser::serde::StructSerializer","value":"StructSerializer {  }","parent":null,"children":[{"krate":0,"index":954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170669,"byte_end":170692,"line_start":483,"line_end":483,"column_start":12,"column_end":35},"name":"StructVariantSerializer","qualname":"::ser::serde::StructVariantSerializer","value":"StructVariantSerializer {  }","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":155570,"byte_end":155577,"line_start":185,"line_end":185,"column_start":8,"column_end":15},"name":"to_bson","qualname":"::ser::to_bson","value":"pub fn to_bson<T: ?Sized>(&T) -> Result<Bson> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Encode a `T` Serializable into a BSON `Value`.\n","sig":null,"attributes":[{"value":"/ Encode a `T` Serializable into a BSON `Value`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":155512,"byte_end":155562,"line_start":184,"line_end":184,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":155764,"byte_end":155775,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"to_document","qualname":"::ser::to_document","value":"pub fn to_document<T: ?Sized>(&T) -> Result<Document> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Encode a `T` Serializable into a BSON `Document`.\n","sig":null,"attributes":[{"value":"/ Encode a `T` Serializable into a BSON `Document`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\mod.rs","byte_start":155703,"byte_end":155756,"line_start":193,"line_end":193,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_helpers","qualname":"::serde_helpers","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":2985},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1077},{"krate":0,"index":1096},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1132},{"krate":0,"index":1147}],"decl_id":null,"docs":" Collection of helper functions for serializing to and deserializing from BSON using Serde\n","sig":null,"attributes":[{"value":"/ Collection of helper functions for serializing to and deserializing from BSON using Serde","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":173194,"byte_end":173287,"line_start":1,"line_end":1,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174372,"byte_end":174392,"line_start":35,"line_end":35,"column_start":8,"column_end":28},"name":"serialize_u32_as_i32","qualname":"::serde_helpers::serialize_u32_as_i32","value":"pub fn serialize_u32_as_i32<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u32 as an i32. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u32 as an i32. Errors if an exact conversion is not possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174275,"byte_end":174364,"line_start":34,"line_end":34,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174678,"byte_end":174698,"line_start":43,"line_end":43,"column_start":8,"column_end":28},"name":"serialize_u32_as_i64","qualname":"::serde_helpers::serialize_u32_as_i64","value":"pub fn serialize_u32_as_i64<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a u32 as an i64.\n","sig":null,"attributes":[{"value":"/ Serializes a u32 as an i64.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174639,"byte_end":174670,"line_start":42,"line_end":42,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174911,"byte_end":174931,"line_start":48,"line_end":48,"column_start":8,"column_end":28},"name":"serialize_u64_as_i32","qualname":"::serde_helpers::serialize_u64_as_i32","value":"pub fn serialize_u64_as_i32<S: Serializer>(&u64, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u64 as an i32. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u64 as an i32. Errors if an exact conversion is not possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":174814,"byte_end":174903,"line_start":47,"line_end":47,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175275,"byte_end":175295,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"serialize_u64_as_i64","qualname":"::serde_helpers::serialize_u64_as_i64","value":"pub fn serialize_u64_as_i64<S: Serializer>(&u64, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to serialize a u64 as an i64. Errors if an exact conversion is not possible.\n","sig":null,"attributes":[{"value":"/ Attempts to serialize a u64 as an i64. Errors if an exact conversion is not possible.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175178,"byte_end":175267,"line_start":55,"line_end":55,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175991,"byte_end":176023,"line_start":75,"line_end":75,"column_start":9,"column_end":41},"name":"chrono_datetime_as_bson_datetime","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":3015},{"krate":0,"index":1065},{"krate":0,"index":3017},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":3019},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":3023},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075}],"decl_id":null,"docs":" Contains functions to serialize a chrono::DateTime as a bson::DateTime and deserialize a\n chrono::DateTime from a bson::DateTime.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a chrono::DateTime as a bson::DateTime and deserialize a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175542,"byte_end":175634,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"/ chrono::DateTime from a bson::DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175635,"byte_end":175678,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175679,"byte_end":175682,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175683,"byte_end":175694,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175695,"byte_end":175737,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::chrono_datetime_as_bson_datetime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175738,"byte_end":175802,"line_start":68,"line_end":68,"column_start":1,"column_end":65}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175803,"byte_end":175840,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175841,"byte_end":175859,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"chrono_datetime_as_bson_datetime\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175860,"byte_end":175919,"line_start":71,"line_end":71,"column_start":1,"column_end":60}},{"value":"/     pub date: chrono::DateTime<chrono::Utc>,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175920,"byte_end":175968,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175969,"byte_end":175974,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":175975,"byte_end":175982,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176243,"byte_end":176254,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<chrono::DateTime<Utc>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a chrono::DateTime from a bson::DateTime.\n","sig":null,"attributes":[{"value":"/ Deserializes a chrono::DateTime from a bson::DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176173,"byte_end":176231,"line_start":81,"line_end":81,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176535,"byte_end":176544,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::chrono_datetime_as_bson_datetime::serialize","value":"pub fn serialize<S: Serializer>(&chrono::DateTime<Utc>, S)\n-> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a chrono::DateTime as a bson::DateTime.\n","sig":null,"attributes":[{"value":"/ Serializes a chrono::DateTime as a bson::DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176469,"byte_end":176523,"line_start":90,"line_end":90,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177165,"byte_end":177192,"line_start":112,"line_end":112,"column_start":9,"column_end":36},"name":"iso_string_as_bson_datetime","qualname":"::serde_helpers::iso_string_as_bson_datetime","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":3031},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":3035},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":3039},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1093}],"decl_id":null,"docs":" Contains functions to serialize an ISO string as a bson::DateTime and deserialize an ISO string\n from a bson::DateTime.","sig":null,"attributes":[{"value":"/ Contains functions to serialize an ISO string as a bson::DateTime and deserialize an ISO string","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176759,"byte_end":176858,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ from a bson::DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176859,"byte_end":176885,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176886,"byte_end":176889,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176890,"byte_end":176901,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176902,"byte_end":176944,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::iso_string_as_bson_datetime;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":176945,"byte_end":177004,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177005,"byte_end":177042,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177043,"byte_end":177061,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"iso_string_as_bson_datetime\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177062,"byte_end":177116,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/     pub date: String,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177117,"byte_end":177142,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177143,"byte_end":177148,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177149,"byte_end":177156,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177409,"byte_end":177420,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::iso_string_as_bson_datetime::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<String, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an ISO string from a DateTime.\n","sig":null,"attributes":[{"value":"/ Deserializes an ISO string from a DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177350,"byte_end":177397,"line_start":117,"line_end":117,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177672,"byte_end":177681,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::iso_string_as_bson_datetime::serialize","value":"pub fn serialize<S: Serializer>(&str, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an ISO string as a DateTime.\n","sig":null,"attributes":[{"value":"/ Serializes an ISO string as a DateTime.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177617,"byte_end":177660,"line_start":126,"line_end":126,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178390,"byte_end":178417,"line_start":147,"line_end":147,"column_start":9,"column_end":36},"name":"bson_datetime_as_iso_string","qualname":"::serde_helpers::bson_datetime_as_iso_string","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":3047},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":3051},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1110}],"decl_id":null,"docs":" Contains functions to serialize a bson::DateTime as an ISO string and deserialize a\n bson::DateTime from an ISO string.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a bson::DateTime as an ISO string and deserialize a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":177976,"byte_end":178063,"line_start":135,"line_end":135,"column_start":1,"column_end":88}},{"value":"/ bson::DateTime from an ISO string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178064,"byte_end":178102,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178103,"byte_end":178106,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178107,"byte_end":178118,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178119,"byte_end":178161,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::bson_datetime_as_iso_string;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178162,"byte_end":178221,"line_start":140,"line_end":140,"column_start":1,"column_end":60}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178222,"byte_end":178259,"line_start":141,"line_end":141,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178260,"byte_end":178278,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"bson_datetime_as_iso_string\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178279,"byte_end":178333,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     pub date: bson::DateTime,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178334,"byte_end":178367,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178368,"byte_end":178373,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178374,"byte_end":178381,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178620,"byte_end":178631,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::bson_datetime_as_iso_string::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<DateTime, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a bson::DateTime from an ISO string.\n","sig":null,"attributes":[{"value":"/ Deserializes a bson::DateTime from an ISO string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178555,"byte_end":178608,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179056,"byte_end":179065,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::bson_datetime_as_iso_string::serialize","value":"pub fn serialize<S: Serializer>(&DateTime, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a bson::DateTime as an ISO string.\n","sig":null,"attributes":[{"value":"/ Serializes a bson::DateTime as an ISO string.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":178995,"byte_end":179044,"line_start":164,"line_end":164,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179252,"byte_end":179285,"line_start":171,"line_end":171,"column_start":8,"column_end":41},"name":"serialize_hex_string_as_object_id","qualname":"::serde_helpers::serialize_hex_string_as_object_id","value":"pub fn serialize_hex_string_as_object_id<S: Serializer>(&str, S)\n-> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a hex string as an ObjectId.\n","sig":null,"attributes":[{"value":"/ Serializes a hex string as an ObjectId.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179201,"byte_end":179244,"line_start":170,"line_end":170,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179964,"byte_end":179978,"line_start":197,"line_end":197,"column_start":9,"column_end":23},"name":"uuid_as_binary","qualname":"::serde_helpers::uuid_as_binary","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":3067},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":3071},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128}],"decl_id":null,"docs":" Contains functions to serialize a Uuid as a bson::Binary and deserialize a Uuid from a\n bson::Binary.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a Uuid as a bson::Binary and deserialize a Uuid from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179585,"byte_end":179675,"line_start":184,"line_end":184,"column_start":1,"column_end":91}},{"value":"/ bson::Binary.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179676,"byte_end":179693,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179694,"byte_end":179697,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179698,"byte_end":179709,"line_start":187,"line_end":187,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179710,"byte_end":179752,"line_start":188,"line_end":188,"column_start":1,"column_end":43}},{"value":"/ # use uuid::Uuid;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179753,"byte_end":179774,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"/ # use bson::serde_helpers::uuid_as_binary;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179775,"byte_end":179821,"line_start":190,"line_end":190,"column_start":1,"column_end":47}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179822,"byte_end":179859,"line_start":191,"line_end":191,"column_start":1,"column_end":38}},{"value":"/ struct Item {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179860,"byte_end":179877,"line_start":192,"line_end":192,"column_start":1,"column_end":18}},{"value":"/     #[serde(with = \"uuid_as_binary\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179878,"byte_end":179919,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/     pub id: Uuid,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179920,"byte_end":179941,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179942,"byte_end":179947,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":179948,"byte_end":179955,"line_start":196,"line_end":196,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":180198,"byte_end":180207,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::uuid_as_binary::serialize","value":"pub fn serialize<S: Serializer>(&Uuid, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a Uuid as a Binary.\n","sig":null,"attributes":[{"value":"/ Serializes a Uuid as a Binary.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":180152,"byte_end":180186,"line_start":203,"line_end":203,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":180504,"byte_end":180515,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::uuid_as_binary::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Uuid, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a Uuid from a Binary.\n","sig":null,"attributes":[{"value":"/ Deserializes a Uuid from a Binary.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":180454,"byte_end":180492,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181657,"byte_end":181673,"line_start":248,"line_end":248,"column_start":9,"column_end":25},"name":"u32_as_timestamp","qualname":"::serde_helpers::u32_as_timestamp","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":3083},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":3087},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1144}],"decl_id":null,"docs":" Contains functions to serialize a u32 as a bson::Timestamp and deserialize a u32 from a\n bson::Timestamp. The u32 should represent seconds since the Unix epoch.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a u32 as a bson::Timestamp and deserialize a u32 from a","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181235,"byte_end":181326,"line_start":236,"line_end":236,"column_start":1,"column_end":92}},{"value":"/ bson::Timestamp. The u32 should represent seconds since the Unix epoch.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181327,"byte_end":181402,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181403,"byte_end":181406,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181407,"byte_end":181418,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181419,"byte_end":181461,"line_start":240,"line_end":240,"column_start":1,"column_end":43}},{"value":"/ # use bson::serde_helpers::u32_as_timestamp;","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181462,"byte_end":181510,"line_start":241,"line_end":241,"column_start":1,"column_end":49}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181511,"byte_end":181548,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ struct Event {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181549,"byte_end":181567,"line_start":243,"line_end":243,"column_start":1,"column_end":19}},{"value":"/     #[serde(with = \"u32_as_timestamp\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181568,"byte_end":181611,"line_start":244,"line_end":244,"column_start":1,"column_end":44}},{"value":"/     pub time: u32,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181612,"byte_end":181634,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181635,"byte_end":181640,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181641,"byte_end":181648,"line_start":247,"line_end":247,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181865,"byte_end":181874,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::u32_as_timestamp::serialize","value":"pub fn serialize<S: Serializer>(&u32, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a u32 as a bson::Timestamp.\n","sig":null,"attributes":[{"value":"/ Serializes a u32 as a bson::Timestamp.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":181811,"byte_end":181853,"line_start":253,"line_end":253,"column_start":5,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182168,"byte_end":182179,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::u32_as_timestamp::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u32, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a u32 from a bson::Timestamp.\n","sig":null,"attributes":[{"value":"/ Deserializes a u32 from a bson::Timestamp.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182110,"byte_end":182156,"line_start":262,"line_end":262,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182902,"byte_end":182918,"line_start":285,"line_end":285,"column_start":9,"column_end":25},"name":"timestamp_as_u32","qualname":"::serde_helpers::timestamp_as_u32","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":3097},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157}],"decl_id":null,"docs":" Contains functions to serialize a bson::Timestamp as a u32 and deserialize a bson::Timestamp\n from a u32. The u32 should represent seconds since the Unix epoch. Serialization will return an\n error if the Timestamp has a non-zero increment.","sig":null,"attributes":[{"value":"/ Contains functions to serialize a bson::Timestamp as a u32 and deserialize a bson::Timestamp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182375,"byte_end":182471,"line_start":272,"line_end":272,"column_start":1,"column_end":97}},{"value":"/ from a u32. The u32 should represent seconds since the Unix epoch. Serialization will return an","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182472,"byte_end":182571,"line_start":273,"line_end":273,"column_start":1,"column_end":100}},{"value":"/ error if the Timestamp has a non-zero increment.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182572,"byte_end":182624,"line_start":274,"line_end":274,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182625,"byte_end":182628,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182629,"byte_end":182640,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/ # use serde::{Serialize, Deserialize};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182641,"byte_end":182683,"line_start":277,"line_end":277,"column_start":1,"column_end":43}},{"value":"/ # use bson::{serde_helpers::timestamp_as_u32, Timestamp};","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182684,"byte_end":182745,"line_start":278,"line_end":278,"column_start":1,"column_end":62}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182746,"byte_end":182783,"line_start":279,"line_end":279,"column_start":1,"column_end":38}},{"value":"/ struct Item {","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182784,"byte_end":182801,"line_start":280,"line_end":280,"column_start":1,"column_end":18}},{"value":"/     #[serde(with = \"timestamp_as_u32\")]","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182802,"byte_end":182845,"line_start":281,"line_end":281,"column_start":1,"column_end":44}},{"value":"/     pub timestamp: Timestamp,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182846,"byte_end":182879,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182880,"byte_end":182885,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":182886,"byte_end":182893,"line_start":284,"line_end":284,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":183195,"byte_end":183204,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_helpers::timestamp_as_u32::serialize","value":"pub fn serialize<S: Serializer>(&Timestamp, S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a bson::Timestamp as a u32. Returns an error if the conversion is lossy (i.e. the\n Timestamp has a non-zero increment).\n","sig":null,"attributes":[{"value":"/ Serializes a bson::Timestamp as a u32. Returns an error if the conversion is lossy (i.e. the","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":183042,"byte_end":183138,"line_start":290,"line_end":290,"column_start":5,"column_end":101}},{"value":"/ Timestamp has a non-zero increment).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":183143,"byte_end":183183,"line_start":291,"line_end":291,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":183571,"byte_end":183582,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_helpers::timestamp_as_u32::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Timestamp, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a bson::Timestamp from a u32.\n","sig":null,"attributes":[{"value":"/ Deserializes a bson::Timestamp from a u32.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\serde_helpers.rs","byte_start":183513,"byte_end":183559,"line_start":301,"line_end":301,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spec","qualname":"::spec","value":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":2471},{"krate":0,"index":2544},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2536},{"krate":0,"index":2535},{"krate":0,"index":1190},{"krate":0,"index":2546},{"krate":0,"index":2578},{"krate":0,"index":2576},{"krate":0,"index":2574},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2564},{"krate":0,"index":1193},{"krate":0,"index":1195}],"decl_id":null,"docs":" Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).\n","sig":null,"attributes":[{"value":"/ Constants derived from the [BSON Specification Version 1.1](http://bsonspec.org/spec.html).","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":184939,"byte_end":185034,"line_start":22,"line_end":22,"column_start":1,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186543,"byte_end":186549,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Double","qualname":"::spec::ElementType::Double","value":"ElementType::Double","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" 64-bit binary floating point\n","sig":null,"attributes":[{"value":"/ 64-bit binary floating point","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186506,"byte_end":186538,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186606,"byte_end":186612,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"String","qualname":"::spec::ElementType::String","value":"ElementType::String","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" UTF-8 string\n","sig":null,"attributes":[{"value":"/ UTF-8 string","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186585,"byte_end":186601,"line_start":65,"line_end":65,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186671,"byte_end":186687,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"EmbeddedDocument","qualname":"::spec::ElementType::EmbeddedDocument","value":"ElementType::EmbeddedDocument","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Embedded document\n","sig":null,"attributes":[{"value":"/ Embedded document","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186645,"byte_end":186666,"line_start":67,"line_end":67,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186740,"byte_end":186745,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Array","qualname":"::spec::ElementType::Array","value":"ElementType::Array","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Array\n","sig":null,"attributes":[{"value":"/ Array","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186726,"byte_end":186735,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186792,"byte_end":186798,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Binary","qualname":"::spec::ElementType::Binary","value":"ElementType::Binary","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Binary data\n","sig":null,"attributes":[{"value":"/ Binary data","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186772,"byte_end":186787,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186864,"byte_end":186873,"line_start":74,"line_end":74,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::spec::ElementType::Undefined","value":"ElementType::Undefined","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Deprecated. Undefined (value)\n","sig":null,"attributes":[{"value":"/ Deprecated. Undefined (value)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186826,"byte_end":186859,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186965,"byte_end":186973,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"ObjectId","qualname":"::spec::ElementType::ObjectId","value":"ElementType::ObjectId","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" [ObjectId](http://dochub.mongodb.org/core/objectids)\n","sig":null,"attributes":[{"value":"/ [ObjectId](http://dochub.mongodb.org/core/objectids)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186904,"byte_end":186960,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187023,"byte_end":187030,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::spec::ElementType::Boolean","value":"ElementType::Boolean","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Bool value\n","sig":null,"attributes":[{"value":"/ Bool value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187004,"byte_end":187018,"line_start":77,"line_end":77,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187080,"byte_end":187088,"line_start":80,"line_end":80,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::spec::ElementType::DateTime","value":"ElementType::DateTime","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" UTC datetime\n","sig":null,"attributes":[{"value":"/ UTC datetime","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187059,"byte_end":187075,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187141,"byte_end":187145,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"Null","qualname":"::spec::ElementType::Null","value":"ElementType::Null","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Null value\n","sig":null,"attributes":[{"value":"/ Null value","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187122,"byte_end":187136,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187644,"byte_end":187661,"line_start":89,"line_end":89,"column_start":5,"column_end":22},"name":"RegularExpression","qualname":"::spec::ElementType::RegularExpression","value":"ElementType::RegularExpression","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Regular expression - The first cstring is the regex pattern, the second is the regex\n options string. Options are identified by characters, which must be stored in\n alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for\n multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,\n 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match\n unicode.\n","sig":null,"attributes":[{"value":"/ Regular expression - The first cstring is the regex pattern, the second is the regex","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187177,"byte_end":187265,"line_start":83,"line_end":83,"column_start":5,"column_end":93}},{"value":"/ options string. Options are identified by characters, which must be stored in","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187270,"byte_end":187351,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/ alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187356,"byte_end":187440,"line_start":85,"line_end":85,"column_start":5,"column_end":89}},{"value":"/ multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187445,"byte_end":187533,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187538,"byte_end":187622,"line_start":87,"line_end":87,"column_start":5,"column_end":89}},{"value":"/ unicode.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187627,"byte_end":187639,"line_start":88,"line_end":88,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187721,"byte_end":187730,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"DbPointer","qualname":"::spec::ElementType::DbPointer","value":"ElementType::DbPointer","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187701,"byte_end":187716,"line_start":90,"line_end":90,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187785,"byte_end":187799,"line_start":93,"line_end":93,"column_start":5,"column_end":19},"name":"JavaScriptCode","qualname":"::spec::ElementType::JavaScriptCode","value":"ElementType::JavaScriptCode","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" JavaScript code\n","sig":null,"attributes":[{"value":"/ JavaScript code","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187761,"byte_end":187780,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187856,"byte_end":187862,"line_start":95,"line_end":95,"column_start":5,"column_end":11},"name":"Symbol","qualname":"::spec::ElementType::Symbol","value":"ElementType::Symbol","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[{"value":"/ Deprecated.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187836,"byte_end":187851,"line_start":94,"line_end":94,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187923,"byte_end":187946,"line_start":97,"line_end":97,"column_start":5,"column_end":28},"name":"JavaScriptCodeWithScope","qualname":"::spec::ElementType::JavaScriptCodeWithScope","value":"ElementType::JavaScriptCodeWithScope","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" JavaScript code w/ scope\n","sig":null,"attributes":[{"value":"/ JavaScript code w/ scope","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187890,"byte_end":187918,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188017,"byte_end":188022,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Int32","qualname":"::spec::ElementType::Int32","value":"ElementType::Int32","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" 32-bit integer\n","sig":null,"attributes":[{"value":"/ 32-bit integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":187994,"byte_end":188012,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188075,"byte_end":188084,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::spec::ElementType::Timestamp","value":"ElementType::Timestamp","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" Timestamp\n","sig":null,"attributes":[{"value":"/ Timestamp","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188057,"byte_end":188070,"line_start":100,"line_end":100,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188138,"byte_end":188143,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Int64","qualname":"::spec::ElementType::Int64","value":"ElementType::Int64","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" 64-bit integer\n","sig":null,"attributes":[{"value":"/ 64-bit integer","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188115,"byte_end":188133,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188312,"byte_end":188322,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"Decimal128","qualname":"::spec::ElementType::Decimal128","value":"ElementType::Decimal128","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":" [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n","sig":null,"attributes":[{"value":"/ [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188178,"byte_end":188307,"line_start":104,"line_end":104,"column_start":5,"column_end":134}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188358,"byte_end":188364,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"MaxKey","qualname":"::spec::ElementType::MaxKey","value":"ElementType::MaxKey","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188392,"byte_end":188398,"line_start":107,"line_end":107,"column_start":5,"column_end":11},"name":"MinKey","qualname":"::spec::ElementType::MinKey","value":"ElementType::MinKey","parent":{"krate":0,"index":2471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186488,"byte_end":186499,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"ElementType","qualname":"::spec::ElementType","value":"pub enum ElementType {\n\n    /// 64-bit binary floating point\n    Double = ,\n\n    /// UTF-8 string\n    String = ,\n\n    /// Embedded document\n    EmbeddedDocument = ,\n\n    /// Array\n    Array = ,\n\n    /// Binary data\n    Binary = ,\n\n    /// Deprecated. Undefined (value)\n    Undefined = ,\n\n    /// [ObjectId](http://dochub.mongodb.org/core/objectids)\n    ObjectId = ,\n\n    /// Bool value\n    Boolean = ,\n\n    /// UTC datetime\n    DateTime = ,\n\n    /// Null value\n    Null = ,\n\n    /// Regular expression - The first cstring is the regex pattern, the second is the regex\n    /// options string. Options are identified by characters, which must be stored in\n    /// alphabetical order. Valid options are 'i' for case insensitive matching, 'm' for\n    /// multiline matching, 'x' for verbose mode, 'l' to make \\w, \\W, etc. locale dependent,\n    /// 's' for dotall mode ('.' matches everything), and 'u' to make \\w, \\W, etc. match\n    /// unicode.\n    RegularExpression = ,\n\n    /// Deprecated.\n    DbPointer = ,\n\n    /// JavaScript code\n    JavaScriptCode = ,\n\n    /// Deprecated.\n    Symbol = ,\n\n    /// JavaScript code w/ scope\n    JavaScriptCodeWithScope = ,\n\n    /// 32-bit integer\n    Int32 = ,\n\n    /// Timestamp\n    Timestamp = ,\n\n    /// 64-bit integer\n    Int64 = ,\n\n    /// [128-bit decimal floating point](https://github.com/mongodb/specifications/blob/master/source/bson-decimal128/decimal128.rst)\n    Decimal128 = ,\n    MaxKey = ,\n    MinKey = ,\n}","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2532}],"decl_id":null,"docs":" All available BSON element types.","sig":null,"attributes":[{"value":"/ All available BSON element types.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186316,"byte_end":186353,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186354,"byte_end":186357,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Not all element types are representable by the `Bson` type.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186358,"byte_end":186421,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":186422,"byte_end":186433,"line_start":60,"line_end":60,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188509,"byte_end":188513,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"from","qualname":"<ElementType>::from","value":"pub fn from(u8) -> Option<ElementType>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert from a `u8`.\n","sig":null,"attributes":[{"value":"/ Attempt to convert from a `u8`.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188448,"byte_end":188483,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188488,"byte_end":188497,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189911,"byte_end":189918,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Generic","qualname":"::spec::BinarySubtype::Generic","value":"BinarySubtype::Generic","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189924,"byte_end":189932,"line_start":147,"line_end":147,"column_start":5,"column_end":13},"name":"Function","qualname":"::spec::BinarySubtype::Function","value":"BinarySubtype::Function","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189938,"byte_end":189947,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"BinaryOld","qualname":"::spec::BinarySubtype::BinaryOld","value":"BinarySubtype::BinaryOld","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189953,"byte_end":189960,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"UuidOld","qualname":"::spec::BinarySubtype::UuidOld","value":"BinarySubtype::UuidOld","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189966,"byte_end":189970,"line_start":150,"line_end":150,"column_start":5,"column_end":9},"name":"Uuid","qualname":"::spec::BinarySubtype::Uuid","value":"BinarySubtype::Uuid","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189976,"byte_end":189979,"line_start":151,"line_end":151,"column_start":5,"column_end":8},"name":"Md5","qualname":"::spec::BinarySubtype::Md5","value":"BinarySubtype::Md5","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189985,"byte_end":189994,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"name":"Encrypted","qualname":"::spec::BinarySubtype::Encrypted","value":"BinarySubtype::Encrypted","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":190000,"byte_end":190011,"line_start":153,"line_end":153,"column_start":5,"column_end":16},"name":"UserDefined","qualname":"::spec::BinarySubtype::UserDefined","value":"BinarySubtype::UserDefined(u8)","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189891,"byte_end":189904,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"BinarySubtype","qualname":"::spec::BinarySubtype","value":"pub enum BinarySubtype {\n    Generic,\n    Function,\n    BinaryOld,\n    UuidOld,\n    Uuid,\n    Md5,\n    Encrypted,\n    UserDefined(u8),\n}","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2561}],"decl_id":null,"docs":" The available binary subtypes, plus a user-defined slot.\n","sig":null,"attributes":[{"value":"/ The available binary subtypes, plus a user-defined slot.","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189752,"byte_end":189812,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":189864,"byte_end":189881,"line_start":144,"line_end":144,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17827,"byte_end":17831,"line_start":89,"line_end":89,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17906,"byte_end":17910,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20129,"byte_end":20133,"line_start":152,"line_end":152,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20225,"byte_end":20229,"line_start":158,"line_end":158,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20315,"byte_end":20319,"line_start":164,"line_end":164,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20419,"byte_end":20423,"line_start":170,"line_end":170,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20516,"byte_end":20520,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20613,"byte_end":20617,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20706,"byte_end":20710,"line_start":188,"line_end":188,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20836,"byte_end":20840,"line_start":194,"line_end":194,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20993,"byte_end":20997,"line_start":200,"line_end":200,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21101,"byte_end":21105,"line_start":206,"line_end":206,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21203,"byte_end":21207,"line_start":212,"line_end":212,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21331,"byte_end":21335,"line_start":221,"line_end":221,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21495,"byte_end":21499,"line_start":230,"line_end":230,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21699,"byte_end":21703,"line_start":239,"line_end":239,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22144,"byte_end":22148,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22232,"byte_end":22236,"line_start":261,"line_end":261,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22320,"byte_end":22324,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22415,"byte_end":22419,"line_start":273,"line_end":273,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22515,"byte_end":22519,"line_start":279,"line_end":279,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22648,"byte_end":22652,"line_start":285,"line_end":285,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22767,"byte_end":22771,"line_start":291,"line_end":291,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22882,"byte_end":22886,"line_start":297,"line_end":297,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23159,"byte_end":23164,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23251,"byte_end":23255,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":40942,"byte_end":40946,"line_start":792,"line_end":792,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45900,"byte_end":45909,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46722,"byte_end":46730,"line_start":992,"line_end":992,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":47947,"byte_end":47955,"line_start":1023,"line_end":1023,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48082,"byte_end":48090,"line_start":1031,"line_end":1031,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48214,"byte_end":48222,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48327,"byte_end":48335,"line_start":1043,"line_end":1043,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49391,"byte_end":49397,"line_start":1082,"line_end":1082,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64813,"byte_end":64818,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64934,"byte_end":64939,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":65058,"byte_end":65063,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":65971,"byte_end":65976,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66227,"byte_end":66232,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66467,"byte_end":66471,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":68548,"byte_end":68556,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":69271,"byte_end":69279,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":69851,"byte_end":69855,"line_start":66,"line_end":66,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":70073,"byte_end":70084,"line_start":76,"line_end":76,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":73599,"byte_end":73611,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":74695,"byte_end":74707,"line_start":290,"line_end":290,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":79802,"byte_end":79818,"line_start":457,"line_end":457,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":80258,"byte_end":80277,"line_start":474,"line_end":474,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":82214,"byte_end":82229,"line_start":541,"line_end":541,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":83595,"byte_end":83610,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":84350,"byte_end":84365,"line_start":619,"line_end":619,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":85343,"byte_end":85358,"line_start":655,"line_end":655,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":86635,"byte_end":86644,"line_start":698,"line_end":698,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":86981,"byte_end":86986,"line_start":710,"line_end":710,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":87319,"byte_end":87342,"line_start":722,"line_end":722,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":87719,"byte_end":87725,"line_start":734,"line_end":734,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":88420,"byte_end":88428,"line_start":759,"line_end":759,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":88759,"byte_end":88768,"line_start":771,"line_end":771,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":94162,"byte_end":94172,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":94497,"byte_end":94507,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98746,"byte_end":98762,"line_start":42,"line_end":42,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99123,"byte_end":99139,"line_start":53,"line_end":53,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99438,"byte_end":99454,"line_start":62,"line_end":62,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99652,"byte_end":99660,"line_start":70,"line_end":70,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99740,"byte_end":99748,"line_start":76,"line_end":76,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100197,"byte_end":100205,"line_start":96,"line_end":96,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100893,"byte_end":100897,"line_start":124,"line_end":124,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101037,"byte_end":101043,"line_start":132,"line_end":132,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101179,"byte_end":101187,"line_start":140,"line_end":140,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101657,"byte_end":101665,"line_start":160,"line_end":160,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101895,"byte_end":101915,"line_start":170,"line_end":170,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102064,"byte_end":102080,"line_start":178,"line_end":178,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102227,"byte_end":102235,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116891,"byte_end":116896,"line_start":582,"line_end":582,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117250,"byte_end":117258,"line_start":596,"line_end":596,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117436,"byte_end":117451,"line_start":606,"line_end":606,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117639,"byte_end":117654,"line_start":615,"line_end":615,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":118417,"byte_end":118425,"line_start":648,"line_end":648,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124286,"byte_end":124291,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124569,"byte_end":124574,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124605,"byte_end":124610,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124822,"byte_end":124827,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124996,"byte_end":125001,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":125354,"byte_end":125358,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":129177,"byte_end":129181,"line_start":185,"line_end":185,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":130654,"byte_end":130662,"line_start":221,"line_end":221,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":131453,"byte_end":131458,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":131914,"byte_end":131919,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":132378,"byte_end":132384,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":133105,"byte_end":133113,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":133692,"byte_end":133697,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":134304,"byte_end":134310,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":135373,"byte_end":135377,"line_start":175,"line_end":175,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":136421,"byte_end":136430,"line_start":216,"line_end":216,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":136851,"byte_end":136859,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":137815,"byte_end":137821,"line_start":269,"line_end":269,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":138294,"byte_end":138300,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":138966,"byte_end":138975,"line_start":319,"line_end":319,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":139911,"byte_end":139920,"line_start":356,"line_end":356,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141245,"byte_end":141250,"line_start":44,"line_end":44,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141444,"byte_end":141449,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141708,"byte_end":141713,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142090,"byte_end":142098,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142174,"byte_end":142182,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142318,"byte_end":142326,"line_start":91,"line_end":91,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":145975,"byte_end":145983,"line_start":194,"line_end":194,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":146110,"byte_end":146118,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157358,"byte_end":157363,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157464,"byte_end":157469,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158309,"byte_end":158314,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158506,"byte_end":158511,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159306,"byte_end":159314,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159612,"byte_end":159620,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159948,"byte_end":159952,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":160946,"byte_end":160956,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":161125,"byte_end":161135,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":167664,"byte_end":167679,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168070,"byte_end":168085,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168488,"byte_end":168509,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168936,"byte_end":168958,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":169475,"byte_end":169488,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170253,"byte_end":170269,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170775,"byte_end":170798,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171340,"byte_end":171349,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171587,"byte_end":171592,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171845,"byte_end":171868,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172127,"byte_end":172133,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172662,"byte_end":172670,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172959,"byte_end":172968,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188430,"byte_end":188441,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":190641,"byte_end":190654,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":7992,"byte_end":7998,"line_start":207,"line_end":207,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":158}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\compat\\mod.rs","byte_start":50119,"byte_end":50122,"line_start":3,"line_end":3,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8008,"byte_end":8010,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8020,"byte_end":8030,"line_start":209,"line_end":209,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":472}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8040,"byte_end":8048,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":478}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8058,"byte_end":8065,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":660}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\mod.rs","byte_start":122635,"byte_end":122637,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":661}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8075,"byte_end":8078,"line_start":212,"line_end":212,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":744}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8088,"byte_end":8091,"line_start":213,"line_end":213,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":808}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8101,"byte_end":8114,"line_start":214,"line_end":214,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1028}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\lib.rs","byte_start":8124,"byte_end":8128,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1160}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17827,"byte_end":17831,"line_start":89,"line_end":89,"column_start":18,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":17906,"byte_end":17910,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20129,"byte_end":20133,"line_start":152,"line_end":152,"column_start":20,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20225,"byte_end":20229,"line_start":158,"line_end":158,"column_start":20,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20315,"byte_end":20319,"line_start":164,"line_end":164,"column_start":21,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20419,"byte_end":20423,"line_start":170,"line_end":170,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20516,"byte_end":20520,"line_start":176,"line_end":176,"column_start":25,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20613,"byte_end":20617,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20706,"byte_end":20710,"line_start":188,"line_end":188,"column_start":22,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20836,"byte_end":20840,"line_start":194,"line_end":194,"column_start":40,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":20993,"byte_end":20997,"line_start":200,"line_end":200,"column_start":23,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21101,"byte_end":21105,"line_start":206,"line_end":206,"column_start":26,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21203,"byte_end":21207,"line_start":212,"line_end":212,"column_start":22,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21331,"byte_end":21335,"line_start":221,"line_end":221,"column_start":26,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21495,"byte_end":21499,"line_start":230,"line_end":230,"column_start":24,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":21699,"byte_end":21703,"line_start":239,"line_end":239,"column_start":54,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":5445}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22144,"byte_end":22148,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22232,"byte_end":22236,"line_start":261,"line_end":261,"column_start":20,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22320,"byte_end":22324,"line_start":267,"line_end":267,"column_start":20,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22415,"byte_end":22419,"line_start":273,"line_end":273,"column_start":20,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22515,"byte_end":22519,"line_start":279,"line_end":279,"column_start":25,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22648,"byte_end":22652,"line_start":285,"line_end":285,"column_start":30,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22767,"byte_end":22771,"line_start":291,"line_end":291,"column_start":38,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":22882,"byte_end":22886,"line_start":297,"line_end":297,"column_start":26,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23159,"byte_end":23164,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":19,"index":2206},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":23251,"byte_end":23255,"line_start":310,"line_end":310,"column_start":6,"column_end":10},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":40942,"byte_end":40946,"line_start":792,"line_end":792,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":45900,"byte_end":45909,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":46722,"byte_end":46730,"line_start":992,"line_end":992,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":47947,"byte_end":47955,"line_start":1023,"line_end":1023,"column_start":16,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48082,"byte_end":48090,"line_start":1031,"line_end":1031,"column_start":19,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48214,"byte_end":48222,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":13,"index":1809},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":48327,"byte_end":48335,"line_start":1043,"line_end":1043,"column_start":38,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\bson.rs","byte_start":49391,"byte_end":49397,"line_start":1082,"line_end":1082,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64813,"byte_end":64818,"line_start":48,"line_end":48,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":64934,"byte_end":64939,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":65058,"byte_end":65063,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":65971,"byte_end":65976,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1365},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66227,"byte_end":66232,"line_start":92,"line_end":92,"column_start":20,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1365},"to":{"krate":20,"index":8130}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\error.rs","byte_start":66467,"byte_end":66471,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":68548,"byte_end":68556,"line_start":28,"line_end":28,"column_start":32,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2417},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":69271,"byte_end":69279,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1574},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":69851,"byte_end":69855,"line_start":66,"line_end":66,"column_start":32,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1197},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":70073,"byte_end":70084,"line_start":76,"line_end":76,"column_start":28,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":250},"to":{"krate":20,"index":1358}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":73599,"byte_end":73611,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":74695,"byte_end":74707,"line_start":290,"line_end":290,"column_start":37,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":308},"to":{"krate":20,"index":1296}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":79802,"byte_end":79818,"line_start":457,"line_end":457,"column_start":31,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":324},"to":{"krate":20,"index":1470}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":80258,"byte_end":80277,"line_start":474,"line_end":474,"column_start":34,"column_end":53},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":333},"to":{"krate":20,"index":1478}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":82214,"byte_end":82229,"line_start":541,"line_end":541,"column_start":37,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":346},"to":{"krate":20,"index":1296}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":83595,"byte_end":83610,"line_start":588,"line_end":588,"column_start":30,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":346},"to":{"krate":20,"index":1414}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":84350,"byte_end":84365,"line_start":619,"line_end":619,"column_start":30,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":360},"to":{"krate":20,"index":1432}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":85343,"byte_end":85358,"line_start":655,"line_end":655,"column_start":37,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":360},"to":{"krate":20,"index":1296}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":86635,"byte_end":86644,"line_start":698,"line_end":698,"column_start":32,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1265},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":86981,"byte_end":86986,"line_start":710,"line_end":710,"column_start":32,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1321},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":87319,"byte_end":87342,"line_start":722,"line_end":722,"column_start":32,"column_end":55},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1332},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":87719,"byte_end":87725,"line_start":734,"line_end":734,"column_start":32,"column_end":38},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1343},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":88420,"byte_end":88428,"line_start":759,"line_end":759,"column_start":32,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1295},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\de\\serde.rs","byte_start":88759,"byte_end":88768,"line_start":771,"line_end":771,"column_start":32,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1354},"to":{"krate":20,"index":1274}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":94162,"byte_end":94172,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\decimal128.rs","byte_start":94497,"byte_end":94507,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":98746,"byte_end":98762,"line_start":42,"line_end":42,"column_start":16,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1566},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99123,"byte_end":99139,"line_start":53,"line_end":53,"column_start":18,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1566},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99438,"byte_end":99454,"line_start":62,"line_end":62,"column_start":23,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1566},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99652,"byte_end":99660,"line_start":70,"line_end":70,"column_start":18,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":99740,"byte_end":99748,"line_start":76,"line_end":76,"column_start":18,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100197,"byte_end":100205,"line_start":96,"line_end":96,"column_start":16,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":100893,"byte_end":100897,"line_start":124,"line_end":124,"column_start":23,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101037,"byte_end":101043,"line_start":132,"line_end":132,"column_start":23,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101179,"byte_end":101187,"line_start":140,"line_end":140,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":5449}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101657,"byte_end":101665,"line_start":160,"line_end":160,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":5445}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":101895,"byte_end":101915,"line_start":170,"line_end":170,"column_start":23,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102064,"byte_end":102080,"line_start":178,"line_end":178,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":102227,"byte_end":102235,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":116891,"byte_end":116896,"line_start":582,"line_end":582,"column_start":10,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117250,"byte_end":117258,"line_start":596,"line_end":596,"column_start":44,"column_end":52},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117436,"byte_end":117451,"line_start":606,"line_end":606,"column_start":6,"column_end":21},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":117639,"byte_end":117654,"line_start":615,"line_end":615,"column_start":28,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":645},"to":{"krate":20,"index":1358}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\document.rs","byte_start":118417,"byte_end":118425,"line_start":648,"line_end":648,"column_start":33,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":5458}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124286,"byte_end":124291,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124569,"byte_end":124574,"line_start":51,"line_end":51,"column_start":28,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1582},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124605,"byte_end":124610,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1582},"to":{"krate":20,"index":8130}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124822,"byte_end":124827,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":124996,"byte_end":125001,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":125354,"byte_end":125358,"line_start":81,"line_end":81,"column_start":62,"column_end":66},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":129177,"byte_end":129181,"line_start":185,"line_end":185,"column_start":37,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\de.rs","byte_start":130654,"byte_end":130662,"line_start":221,"line_end":221,"column_start":62,"column_end":70},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":1996}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":131453,"byte_end":131458,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":131914,"byte_end":131919,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":132378,"byte_end":132384,"line_start":56,"line_end":56,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":133105,"byte_end":133113,"line_start":82,"line_end":82,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":133692,"byte_end":133697,"line_start":110,"line_end":110,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":134304,"byte_end":134310,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":135373,"byte_end":135377,"line_start":175,"line_end":175,"column_start":6,"column_end":10},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":136421,"byte_end":136430,"line_start":216,"line_end":216,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":136851,"byte_end":136859,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":137815,"byte_end":137821,"line_start":269,"line_end":269,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":138294,"byte_end":138300,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":138966,"byte_end":138975,"line_start":319,"line_end":319,"column_start":6,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\extjson\\models.rs","byte_start":139911,"byte_end":139920,"line_start":356,"line_end":356,"column_start":6,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141245,"byte_end":141250,"line_start":44,"line_end":44,"column_start":29,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2409},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141444,"byte_end":141449,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2409},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":141708,"byte_end":141713,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2409},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142090,"byte_end":142098,"line_start":77,"line_end":77,"column_start":18,"column_end":26},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142174,"byte_end":142182,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":142318,"byte_end":142326,"line_start":91,"line_end":91,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":145975,"byte_end":145983,"line_start":194,"line_end":194,"column_start":23,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\oid.rs","byte_start":146110,"byte_end":146118,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157358,"byte_end":157363,"line_start":40,"line_end":40,"column_start":26,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2459},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":157464,"byte_end":157469,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2459},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158309,"byte_end":158314,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2459},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\error.rs","byte_start":158506,"byte_end":158511,"line_start":75,"line_end":75,"column_start":21,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2459},"to":{"krate":20,"index":8744}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159306,"byte_end":159314,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2417},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159612,"byte_end":159620,"line_start":45,"line_end":45,"column_start":20,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1574},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":159948,"byte_end":159952,"line_start":59,"line_end":59,"column_start":20,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1197},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":160946,"byte_end":160956,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":161125,"byte_end":161135,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":864},"to":{"krate":20,"index":1765}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":167664,"byte_end":167679,"line_start":356,"line_end":356,"column_start":23,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":909},"to":{"krate":20,"index":1815}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168070,"byte_end":168085,"line_start":375,"line_end":375,"column_start":25,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":917},"to":{"krate":20,"index":1821}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168488,"byte_end":168509,"line_start":394,"line_end":394,"column_start":31,"column_end":52},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":925},"to":{"krate":20,"index":1827}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":168936,"byte_end":168958,"line_start":414,"line_end":414,"column_start":32,"column_end":54},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":933},"to":{"krate":20,"index":1833}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":169475,"byte_end":169488,"line_start":436,"line_end":436,"column_start":23,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":942},"to":{"krate":20,"index":1839}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170253,"byte_end":170269,"line_start":464,"line_end":464,"column_start":26,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":953},"to":{"krate":20,"index":1850}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":170775,"byte_end":170798,"line_start":488,"line_end":488,"column_start":33,"column_end":56},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":961},"to":{"krate":20,"index":1857}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171340,"byte_end":171349,"line_start":511,"line_end":511,"column_start":20,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1265},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171587,"byte_end":171592,"line_start":522,"line_end":522,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1321},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":171845,"byte_end":171868,"line_start":533,"line_end":533,"column_start":20,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1332},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172127,"byte_end":172133,"line_start":544,"line_end":544,"column_start":20,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1343},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172662,"byte_end":172670,"line_start":567,"line_end":567,"column_start":20,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1295},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\ser\\serde.rs","byte_start":172959,"byte_end":172968,"line_start":579,"line_end":579,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1354},"to":{"krate":20,"index":1762}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":188430,"byte_end":188441,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Shubhanki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bson-1.2.0\\src\\spec.rs","byte_start":190641,"byte_end":190654,"line_start":172,"line_end":172,"column_start":19,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2546},"to":{"krate":2,"index":1989}}]}